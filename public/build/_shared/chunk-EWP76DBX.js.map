{
  "version": 3,
  "sources": ["../../../app/types/enums/variantCardEnum.ts", "../../../app/components/common/Card/index.tsx", "../../../app/components/common/Card/styles.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-redeclare */\nimport type { ValueOf } from 'shared/utils';\n\nexport const VariantCardEnum = {\n  about: 'about',\n  sidebar: 'sidebar',\n  createEntity: 'createEntity',\n  materials: 'materials',\n  request: 'request',\n  userCard: 'userCard',\n  editCard: 'editCard',\n  alert: 'alert',\n} as const;\n\nexport type VariantCardEnum = ValueOf<typeof VariantCardEnum>;\n", "import { useNavigate } from '@remix-run/react';\nimport type { Dispatch, ReactNode, SetStateAction } from 'react';\nimport { memo } from 'react';\n\nimport { Button } from '~/components/common/Button/styles';\nimport { Icon } from '~/components/common/Icon';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\nimport { IconEnum } from '~/types/enums/iconEnum';\nimport type {\n  CompanyCardEnum,\n  ResumeCardEnum,\n  StateCard,\n  VacancyCardEnum,\n} from '~/types/enums/stateCardEnum';\nimport type { VariantCardEnum } from '~/types/enums/variantCardEnum';\n\nimport { BoxCardContent, BoxCardHeading, BoxControl, Card } from './styles';\n\nexport const BoxCard = memo(\n  ({\n    title,\n    state,\n    setState,\n    editCard,\n    setEditCard,\n    nameCard,\n    withEditButton,\n    withControl,\n    children,\n    step,\n    maxStep,\n    variant,\n  }: {\n    title?: string;\n    state?: StateCard;\n    setState?: Dispatch<SetStateAction<StateCard>>;\n    editCard?: ResumeCardEnum | VacancyCardEnum | CompanyCardEnum;\n    setEditCard?: Dispatch<SetStateAction<ResumeCardEnum | VacancyCardEnum | CompanyCardEnum>>;\n    nameCard?: ResumeCardEnum | VacancyCardEnum | CompanyCardEnum;\n    withEditButton?: boolean;\n    withControl?: boolean;\n    children: ReactNode;\n    step?: number;\n    maxStep?: number;\n    variant?: VariantCardEnum;\n  }): JSX.Element => {\n    const { theme, t } = useApp();\n    const navigate = useNavigate();\n    const goBack = () => navigate(-1);\n\n    return (\n      <Card title={title} variant={variant}>\n        {title && (\n          <BoxCardHeading>\n            {title && <Text>{title}</Text>}\n            {((withEditButton && state === 'info') ||\n              (withEditButton && state !== 'create' && editCard !== nameCard)) && (\n              <Button\n                priority='secondary'\n                onClick={() => {\n                  if (setState) setState('edit');\n                  if (setEditCard && nameCard) setEditCard(nameCard);\n                }}\n              >\n                <Text variant={TextVariantEnum.textBody2}> {t('common:edit')}</Text>\n              </Button>\n            )}\n          </BoxCardHeading>\n        )}\n        <BoxCardContent className={title && 'borderLine'} variant={variant}>\n          {children}\n        </BoxCardContent>\n\n        {((withControl && state === 'edit') || (editCard && editCard === nameCard)) && (\n          <BoxControl>\n            <Button\n              onClick={() => {\n                if (setState) setState('info');\n                if (setEditCard) setEditCard('all');\n              }}\n              fullwidth\n              priority='secondary'\n              className='icon'\n            >\n              <Icon name={IconEnum.arrowLeft} color={theme.user.iconColor} className='goBackIcon' />\n              <Text variant={TextVariantEnum.textBody2} className='goBackText'>\n                {' '}\n                {t('common:cancel')}\n              </Text>\n            </Button>\n            <Button priority='primary' fullwidth>\n              <Text variant={TextVariantEnum.textBody2}> {t('common:save')}</Text>\n            </Button>\n          </BoxControl>\n        )}\n\n        {state === 'create' && (\n          <BoxControl>\n            {step && step === 1 && (\n              <Button type='button' onClick={goBack} className='icon' priority='secondary'>\n                <Icon\n                  name={IconEnum.arrowLeft}\n                  color={theme.user.iconColor}\n                  className='goBackIcon'\n                />\n                <Text variant={TextVariantEnum.textBody2} className='goBackText'>\n                  {' '}\n                  {t('common:cancel')}\n                </Text>\n              </Button>\n            )}\n\n            {step && step > 1 && (\n              <Button\n                onClick={() => {\n                  if (setState) setState('info');\n                  if (setEditCard) setEditCard('all');\n                }}\n                className='icon'\n                priority='secondary'\n                name='action'\n                value='previous'\n              >\n                <Icon\n                  name={IconEnum.arrowLeft}\n                  color={theme.user.iconColor}\n                  className='goBackIcon'\n                />\n                <Text variant={TextVariantEnum.textBody2} className='goBackText'>\n                  {' '}\n                  {t('common:back')}\n                </Text>\n              </Button>\n            )}\n\n            {step && maxStep && step < maxStep && (\n              <Button type='submit' priority='primary' fullwidth name='action' value='next'>\n                <Text variant={TextVariantEnum.textBody2}> {t('common:next')}</Text>\n              </Button>\n            )}\n\n            {step && maxStep && step === maxStep && (\n              <Button type='submit' priority='primary' fullwidth name='action' value='complete'>\n                <Text variant={TextVariantEnum.textBody2}> {t('common:complete')}</Text>\n              </Button>\n            )}\n          </BoxControl>\n        )}\n      </Card>\n    );\n  },\n);\n", "import styled from 'styled-components';\n\nimport { VariantCardEnum } from '~/types/enums/variantCardEnum';\n\nimport {\n  FONT_SIZES_DESC,\n  FONT_SIZES_MOB,\n  FONT_WEIGHTS_DESC,\n  FONT_WEIGHTS_MOB,\n  LINE_HEIGHTS_DESC,\n  LINE_HEIGHTS_MOB,\n} from '../Text';\nimport { TextVariantEnum } from '../Text/enums';\n\nexport const Card = styled.div<{ variant?: VariantCardEnum }>`\n  display: flex;\n  flex-direction: column;\n  padding: ${({ variant }) => {\n    if (variant === VariantCardEnum.about) return '24px 16px 16px';\n    if (variant === VariantCardEnum.createEntity || variant === VariantCardEnum.alert)\n      return '32px 16px';\n    return '16px';\n  }};\n  background-color: ${({ theme }) => theme.user.backgroundCardColor};\n  border-radius: 8px;\n  gap: 16px;\n  width: 100%;\n  height: ${({ variant }) => {\n    if (variant === VariantCardEnum.sidebar) return '100%';\n    if (variant === VariantCardEnum.createEntity) return 'fit-content';\n    return 'auto';\n  }};\n  box-shadow: ${({ theme }) => theme.\u0441ards.shadow};\n\n  @media (min-width: 768px) {\n    border-radius: 12px;\n    padding: ${({ variant }) => {\n      if (variant === VariantCardEnum.about) return '48px 24px 32px';\n      if (variant === VariantCardEnum.createEntity) return '40px';\n      if (variant === VariantCardEnum.alert) return '40px 24px 64px';\n      return '24px';\n    }};\n  }\n  @media (min-width: 1280px) {\n    max-width: ${({ variant }) => (variant === VariantCardEnum.materials ? '996px' : '100%')};\n    overflow: ${({ variant }) => (variant === VariantCardEnum.editCard ? 'visible' : 'auto')};\n    box-shadow: ${({ theme, variant }) =>\n      variant === VariantCardEnum.request ? 'none' : theme.\u0441ards.shadow};\n    margin-top: ${({ variant }) => variant === VariantCardEnum.request && '16px'};\n    border-top: ${({ variant, theme }) =>\n      variant === VariantCardEnum.request && `1px solid ${theme.user.borderColor}`};\n    padding: ${({ variant }) => {\n      if (variant === VariantCardEnum.about) return '48px 24px 32px';\n      if (variant === VariantCardEnum.createEntity) return '40px';\n      if (variant === VariantCardEnum.request) return '24px 24px 0';\n      if (variant === VariantCardEnum.alert) return '40px 24px 64px';\n      return '24px';\n    }};\n  }\n\n  .borderLine {\n    padding-top: 16px;\n    border-top: 1px solid ${({ theme }) => theme.user.borderColor};\n  }\n`;\n\nexport const BoxCardHeading = styled.div<{ variant?: string; className?: string }>`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n\n  button {\n    margin-left: 16px;\n  }\n\n  & > span {\n    font-size: ${FONT_SIZES_MOB[TextVariantEnum.textHeading2]};\n    font-weight: ${FONT_WEIGHTS_MOB[TextVariantEnum.textHeading2]};\n    line-height: ${LINE_HEIGHTS_MOB[TextVariantEnum.textHeading2]};\n    max-width: fit-content;\n    margin-bottom: -4px;\n  }\n\n  @media (min-width: 768px) {\n    button {\n      margin-left: 24px;\n    }\n    & > span {\n      font-size: ${FONT_SIZES_DESC[TextVariantEnum.textHeading3]};\n      font-weight: ${FONT_WEIGHTS_DESC[TextVariantEnum.textHeading3]};\n      line-height: ${LINE_HEIGHTS_DESC[TextVariantEnum.textHeading3]};\n    }\n  }\n`;\n\nexport const BoxControl = styled.div`\n  padding-top: 16px;\n  margin-top: 8px;\n  border-top: 1px solid ${({ theme }) => theme.user.borderColor};\n  display: flex;\n  flex-direction: 'row';\n  gap: 16px;\n\n  @media (min-width: 769px) {\n    padding-top: 24px;\n  }\n\n  @media (min-width: 1280px) {\n    justify-content: flex-end;\n    button {\n      width: fit-content;\n    }\n  }\n`;\nexport const BoxCardContent = styled.div<{ variant?: VariantCardEnum }>`\n  display: flex;\n  flex-direction: column;\n  gap: ${({ variant }) => {\n    if (variant === VariantCardEnum.userCard) return '16px';\n    if (variant === VariantCardEnum.createEntity) return '24px';\n    return '8px';\n  }};\n  align-items: ${({ variant }) =>\n    variant === VariantCardEnum.createEntity ? 'center' : 'inherit'};\n  text-align: ${({ variant }) => (variant === VariantCardEnum.createEntity ? 'center' : 'start')};\n\n  &:empty {\n    display: none;\n  }\n\n  @media (min-width: 769px) {\n    gap: ${({ variant }) => {\n      if (variant === VariantCardEnum.sidebar) return '8px';\n      if (variant === VariantCardEnum.createEntity) return '24px';\n      return '16px';\n    }};\n  }\n`;\n"],
  "mappings": "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",
  "names": ["import_react", "BoxCard", "memo", "title", "state", "setState", "editCard", "setEditCard", "nameCard", "withEditButton", "withControl", "children", "step", "maxStep", "variant", "theme", "t", "useApp", "navigate", "useNavigate", "goBack", "TextVariantEnum", "textBody2", "IconEnum", "arrowLeft", "user", "iconColor"]
}
