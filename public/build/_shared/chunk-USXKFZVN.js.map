{
  "version": 3,
  "sources": ["../../../app/components/common/SlideCard/index.tsx", "../../../app/components/common/SlideCard/styles.tsx"],
  "sourcesContent": ["import { Link } from '@remix-run/react';\nimport type { ValueOf } from 'shared/utils';\nimport type { CSSProperties } from 'styled-components';\n\nimport { useApp, useScreenWidth } from '~/hooks';\nimport { DEFAULT_COMPANY_LOGO } from '~/utils/constants';\nimport { getImageUrl } from '~/utils/helpers';\n\nimport { Text } from '../Text';\nimport { TextVariantEnum } from '../Text/enums';\nimport { CardContent, CardWrapper, Image } from './styles';\n\nexport const CardVariants = {\n  companies: 'companies',\n  articles: 'articles',\n} as const;\n\nexport type CardVariant = ValueOf<typeof CardVariants>;\n\nexport interface CardProps {\n  className?: string;\n  style?: CSSProperties;\n  variant: CardVariant;\n  title?: string;\n  date?: string;\n  id?: string;\n  vacancies?: number;\n  image?: string;\n}\n\nfunction SlideCard({ className, style, variant, title, date, vacancies, image, id }: CardProps) {\n  const { theme } = useApp();\n  const widthScreen = useScreenWidth();\n\n  return (\n    <CardWrapper variant={variant} className={className} style={style}>\n      <Link\n        to={\n          // eslint-disable-next-line no-nested-ternary\n          variant === 'companies'\n            ? widthScreen > 1280\n              ? `/search/company/${id || ''}/vacancy`\n              : `/search/company/${id || ''}`\n            : `/materials/news/${id || ''}`\n        }\n        style={{ width: '100%' }}\n      >\n        <Image variant={variant}>\n          <img src={image ? getImageUrl(image, 'company') : DEFAULT_COMPANY_LOGO} alt={title} />\n        </Image>\n        <CardContent variant={variant}>\n          {variant === 'articles' && (\n            <Text variant={TextVariantEnum.textBody2} color={theme.сards.articlesTextColor}>\n              {date}\n            </Text>\n          )}\n          <Text className='cardTitle' variant={TextVariantEnum.textBody2medium}>\n            {title}\n          </Text>\n          {variant === 'companies' && (\n            <Text\n              variant={TextVariantEnum.textSmall}\n              color={vacancies ? theme.сards.vacanciesTextColor : theme.сards.noVacanciesTextColor}\n            >\n              {vacancies ? `${vacancies} vacancies` : 'no vacancies'}\n            </Text>\n          )}\n        </CardContent>\n      </Link>\n    </CardWrapper>\n  );\n}\n\nexport default SlideCard;\n", "import styled from 'styled-components';\n\nimport { FONT_SIZES_DESC } from '../Text';\nimport { TextVariantEnum } from '../Text/enums';\nimport type { CardProps } from '.';\n\nexport const CardWrapper = styled.div<CardProps>`\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  width: 100%;\n  min-height: 176px;\n  transition: transform 0.2s cubic-bezier(0.2, 0, 0, 1);\n  position: relative;\n  margin: 8px 0;\n  box-shadow: ${({ theme }) => theme.сards.shadow};\n  border-radius: 8px;\n\n  @media (min-width: 1024px) {\n    min-width: 100%;\n    max-width: ${({ variant }) => (variant === 'companies' ? '186px' : '245px')};\n    margin: ${({ variant }) => (variant === 'companies' ? '14px 0' : '0')};\n  }\n\n  @media (min-width: 1280px) {\n    border-radius: 12px;\n    margin: 12px 4px;\n    max-width: ${({ variant }) => (variant === 'companies' ? '186px' : '100%')};\n  }\n\n  &:hover {\n    z-index: 1;\n    transform: translateZ(0)\n      ${({ variant }) => (variant === 'companies' ? 'scale(1.08)' : 'scale(1.05)')};\n  }\n`;\n\nexport const Image = styled.div<CardProps>`\n  padding: 0;\n  background: ${({ theme }) => theme.сards.imageBackground};\n  min-width: ${({ variant }) => (variant === 'companies' ? '100%' : '138px')};\n  width: 100%;\n  display: flex;\n  border-radius: 8px 8px 0px 0px;\n  min-height: ${({ variant }) => (variant === 'companies' ? 'auto' : '138px')};\n  height: ${({ variant }) => (variant === 'companies' ? '74px' : '138px')};\n\n  flex-grow: 1;\n  img {\n    width: 100%;\n    max-width: 100%;\n    max-height: 100%;\n    object-fit: cover;\n    border-radius: 8px 8px 0px 0px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 0;\n    height: ${({ variant }) => (variant === 'companies' ? '118px' : '200px')};\n    img {\n      max-width: 100%;\n      max-height: 100%;\n    }\n  }\n  @media (min-width: 1024px) {\n    border-radius: 12px 12px 0px 0px;\n    max-height: ${({ variant }) => (variant === 'companies' ? '130px' : '100%')};\n    padding: 0;\n    width: 100%;\n\n    img {\n      border-radius: 12px 12px 0px 0px;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    border-radius: 12px 12px 0px 0px;\n    width: 100%;\n    height: ${({ variant }) => (variant === 'companies' ? '132px' : '256px')};\n  }\n`;\n\nexport const CardContent = styled.div<CardProps>`\n  width: 100%;\n  height: ${({ variant }) => (variant === 'articles' ? '110px' : '102px')};\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  text-align: start;\n  background: ${({ theme }) => theme.сards.cardContentBackground};\n  border-radius: 0px 0px 8px 8px;\n  gap: 8px;\n  padding: ${({ variant }) => (variant === 'companies' ? '12px' : '16px')};\n  justify-content: ${({ variant }) => (variant === 'companies' ? 'space-between' : 'flex-start')};\n\n  .cardTitle {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 3;\n  }\n\n  @media (min-width: 768px) {\n    padding: 16px;\n    height: ${({ variant }) => (variant === 'articles' ? '136px' : '128px')};\n  }\n\n  @media (min-width: 1024px) {\n    border-radius: 0px 0px 12px 12px;\n    width: 100%;\n\n    .cardTitle {\n      font-size: ${FONT_SIZES_DESC[TextVariantEnum.textBody1]};\n    }\n  }\n\n  @media (min-width: 1280px) {\n    padding: ${({ variant }) => (variant === 'companies' ? '16px 24px' : '16px 16px 24px')};\n    width: 100%;\n    height: ${({ variant }) => (variant === 'articles' ? '120px' : '132px')};\n\n    .cardTitle {\n      -webkit-line-clamp: 2;\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACMO,IAAMA,cAAcC,sCAAOC,IAAGC,WAAA;EAAAC,aAAA;EAAAC,aAAA;AAAA,CAAA,EAAA,CAAA,qMAAA,0EAAA,YAAA,6EAAA,gDAAA,IAAA,GAUrB,CAAC;EAAEC;AAAM,MAAMA,MAAMC,WAAMC,QAK1B,CAAC;EAAEC;AAAQ,MAAOA,YAAY,cAAc,UAAU,SACzD,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,WAAW,KAMpD,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,UAAU,QAM/D,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,gBAAgB,aAAc;AAI3E,IAAMC,QAAQT,sCAAOC,IAAGC,WAAA;EAAAC,aAAA;EAAAC,aAAA;AAAA,CAAA,EAAA,CAAA,yBAAA,eAAA,sEAAA,YAAA,yJAAA,+GAAA,4IAAA,IAAA,GAEf,CAAC;EAAEC;AAAM,MAAMA,MAAMC,WAAMI,iBAC5B,CAAC;EAAEF;AAAQ,MAAOA,YAAY,cAAc,SAAS,SAIpD,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,SAAS,SACzD,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,SAAS,SAanD,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,UAAU,SAQlD,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,UAAU,QAY1D,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,UAAU,OAAQ;AAIrE,IAAMG,cAAcX,sCAAOC,IAAGC,WAAA;EAAAC,aAAA;EAAAC,aAAA;AAAA,CAAA,EAAA,CAAA,sBAAA,2FAAA,mDAAA,qBAAA,mJAAA,gGAAA,yCAAA,uBAAA,qCAAA,GAEzB,CAAC;EAAEI;AAAQ,MAAOA,YAAY,aAAa,UAAU,SAKjD,CAAC;EAAEH;AAAM,MAAMA,MAAMC,WAAMM,uBAG9B,CAAC;EAAEJ;AAAQ,MAAOA,YAAY,cAAc,SAAS,QAC7C,CAAC;EAAEA;AAAQ,MAAOA,YAAY,cAAc,kBAAkB,cAWrE,CAAC;EAAEA;AAAQ,MAAOA,YAAY,aAAa,UAAU,SAQhDK,gBAAgBC,gBAAgBC,SAAS,GAK7C,CAAC;EAAEP;AAAQ,MAAOA,YAAY,cAAc,cAAc,kBAE3D,CAAC;EAAEA;AAAQ,MAAOA,YAAY,aAAa,UAAU,OAAQ;;;ADxEjE;AAlBV,SAASQ,UAAU;EAAEC;EAAWC;EAAOC;EAASC;EAAOC;EAAMC;EAAWC;EAAOC;AAAc,GAAG;AAC9F,QAAM;IAAEC;EAAM,IAAIC,OAAO;AACzB,QAAMC,cAAcC,eAAe;AAEnC,SACE,mDAAC,eAAY,SAAkB,WAAsB,OACnD,6DAAC,QACC;;IAEET,YAAY,cACRQ,cAAc,OACX,mBAAkBH,MAAM,eACxB,mBAAkBA,MAAM,OAC1B,mBAAkBA,MAAM;KAE/B,OAAO;IAAEK,OAAO;EAAO,GAEvB;uDAAC,SAAM,SACL,6DAAC,SAAI,KAAKN,QAAQO,YAAYP,OAAO,SAAS,IAAIQ,sBAAsB,KAAKX,SAA7E;;;;WAAmF,KADrF;;;;WAEA;IACA,mDAAC,eAAY,SACVD;kBAAY,cACX,mDAAC,QAAK,SAASa,gBAAgBC,WAAW,OAAOR,MAAMS,WAAMC,mBAC1Dd,kBADH;;;;aAEA;MAEF,mDAAC,QAAK,WAAU,aAAY,SAASW,gBAAgBI,iBAClDhB,mBADH;;;;aAEA;MACCD,YAAY,eACX,mDAAC,QACC,SAASa,gBAAgBK,WACzB,OAAOf,YAAYG,MAAMS,WAAMI,qBAAqBb,MAAMS,WAAMK,sBAE/DjB,sBAAa,GAAEA,wBAAwB,kBAJ1C;;;;aAKA;SAfJ;;;;WAiBA;OA/BF;;;;SAgCA,KAjCF;;;;SAkCA;AAEJ;AAEA,IAAA,oBAAeN;",
  "names": ["CardWrapper", "styled", "div", "withConfig", "displayName", "componentId", "theme", "\u0441ards", "shadow", "variant", "Image", "imageBackground", "CardContent", "cardContentBackground", "FONT_SIZES_DESC", "TextVariantEnum", "textBody1", "SlideCard", "className", "style", "variant", "title", "date", "vacancies", "image", "id", "theme", "useApp", "widthScreen", "useScreenWidth", "width", "getImageUrl", "DEFAULT_COMPANY_LOGO", "TextVariantEnum", "textBody2", "\u0441ards", "articlesTextColor", "textBody2medium", "textSmall", "vacanciesTextColor", "noVacanciesTextColor"]
}
