{
  "version": 3,
  "sources": ["../../../app/components/common/Select/index.tsx", "../../../app/components/common/Select/styles.ts"],
  "sourcesContent": ["import type { Dispatch, MouseEvent, RefObject, SetStateAction } from 'react';\nimport { useEffect, useRef, useState } from 'react';\n\nimport { useApp } from '~/hooks';\nimport { IconEnum } from '~/types/enums/iconEnum';\nimport { compareArrays } from '~/utils/helpers';\n\nimport { Box } from '../Box';\nimport { Icon } from '../Icon';\nimport SvgSearch from '../Icons/Search';\nimport { BoxErrors } from '../Input/styles';\nimport { Text } from '../Text';\nimport { TextVariantEnum } from '../Text/enums';\nimport {\n  AttentionErrorIcon,\n  ButtonClear,\n  Container,\n  Dropdown,\n  Header,\n  InnerTextContainer,\n  Option,\n  PlaceHolder,\n  RemoveButton,\n  SearchInput,\n  SearchInputWrapper,\n  SelectedArray,\n  SelectedOptions,\n  WrapperIcon,\n} from './styles';\n\nexport interface SelectProps {\n  dateEntries?: Array<[index: number, value: number]>;\n  entries?: Array<[id: string, value: string]>;\n  values?: string[] | null;\n  name?: string;\n  id?: string;\n  placeholder?: string;\n  disabled?: boolean;\n  variant?: 'single' | 'multi' | 'search-multi' | 'search-single' | 'single-text';\n  errorText?: string;\n  background?: string;\n  externalRef?: RefObject<HTMLInputElement>;\n  setExternalState?: Dispatch<SetStateAction<string[]>>;\n  externalState?: string[];\n  onChange?: (value: string) => void;\n  className?: string;\n}\n\nexport function Select({\n  dateEntries,\n  entries,\n  values,\n  variant = 'single',\n  name,\n  id,\n  placeholder,\n  disabled,\n  errorText,\n  background,\n  externalRef,\n  setExternalState,\n  externalState,\n  onChange,\n  className,\n}: SelectProps) {\n  const { t, theme } = useApp();\n  const [selectedValues, setSelectedValues] = useState<string[]>(values || []);\n  const [isDropdownOpen, setIsDropdownOpen] = useState<boolean>(false);\n  const [isSearchInputFocused, setSearchInputFocused] = useState(false);\n  const [entriesState, setEntriesState] = useState(entries);\n\n  useEffect(() => {\n    setEntriesState(entries);\n  }, [entries]);\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const selectRef = useRef<HTMLInputElement | null>(null);\n  const singleTextRef = useRef<HTMLInputElement | null>(null);\n  const prevValuesRef = useRef<string[]>(values || []);\n\n  function selectValue() {\n    if (selectRef.current) {\n      selectRef.current.value = selectedValues.join(',');\n    }\n    if (variant === 'single-text') {\n      if (singleTextRef.current) {\n        singleTextRef.current.value = selectedValues.join(',');\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (variant !== 'single-text') {\n      if (values && !compareArrays(values, prevValuesRef.current)) {\n        setSelectedValues(values);\n        // setSearchQuery('');\n      }\n      // } else if (singleTextRef.current && values) {\n      //   setSelectedValues(values);\n      //   singleTextRef.current.value = values.join(',');\n      //   setSearchQuery('');\n    }\n\n    prevValuesRef.current = values || []; // Update the previous values\n  }, [values, variant]);\n\n  useEffect(() => {\n    if (\n      setExternalState &&\n      !compareArrays(values, selectedValues) &&\n      !compareArrays(externalState, selectedValues)\n    ) {\n      setExternalState(selectedValues);\n    }\n    selectValue();\n\n    if (variant === 'multi' || variant === 'search-multi') {\n      setEntriesState(() => entries?.filter((item) => !selectedValues.includes(item[0])));\n    }\n  }, [selectedValues, setExternalState]);\n\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (\n        dropdownRef.current &&\n        !dropdownRef.current.contains(event.target as Node) &&\n        !isSearchInputFocused // Check if SearchInput is not focused\n      ) {\n        setIsDropdownOpen(false);\n      }\n    };\n\n    window.addEventListener(\n      'click',\n      handleClickOutside as () => MouseEvent<HTMLDivElement, MouseEvent>,\n    );\n\n    return () => {\n      window.removeEventListener(\n        'click',\n        handleClickOutside as () => MouseEvent<HTMLDivElement, MouseEvent>,\n      );\n    };\n  }, [dropdownRef, isSearchInputFocused]);\n\n  const handleSelect = (\n    event: React.ChangeEvent<HTMLSelectElement> | MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    const { value } = event.target as HTMLSelectElement;\n    if (onChange) onChange(value);\n\n    if (variant === 'single' || variant === 'search-single' || variant === 'single-text') {\n      setSelectedValues((prevSelectedValues) => {\n        if (prevSelectedValues.includes(value)) {\n          return [''];\n        }\n        return [value];\n      });\n      setIsDropdownOpen(false);\n    } else {\n      setSelectedValues((prevSelectedValues) => {\n        const index = prevSelectedValues.indexOf(value);\n        if (index === -1) {\n          return [...prevSelectedValues, value];\n        }\n        return prevSelectedValues;\n      });\n    }\n  };\n\n  const handleDropdownClick = () => {\n    if (!disabled) {\n      if (!isSearchInputFocused) {\n        setIsDropdownOpen(!isDropdownOpen && !isSearchInputFocused);\n      }\n      if (isSearchInputFocused) {\n        setSearchInputFocused(!isSearchInputFocused);\n      }\n    }\n  };\n\n  const handleRemove = (value: string) => {\n    const newValues = selectedValues.filter((val) => val !== value);\n    setSelectedValues(newValues);\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n    setIsDropdownOpen(true);\n    if (variant === 'single-text') {\n      setSelectedValues([event.target.value]);\n    }\n    if (onChange) onChange(event.target.value);\n  };\n\n  const filteredEntries = entriesState?.filter(\n    (entry) => entry[1].toLowerCase().indexOf(searchQuery.toLowerCase()) !== -1,\n  );\n\n  function clearSelect() {\n    const { current } = selectRef;\n    if (current) {\n      current.value = '';\n      setSelectedValues([]);\n      setIsDropdownOpen(true);\n      setSearchQuery('');\n    }\n  }\n\n  const handleSearchInputFocus = () => {\n    setIsDropdownOpen(true);\n    setSearchInputFocused(true);\n  };\n\n  return (\n    <Box\n      flexDirection='column'\n      width='100%'\n      style={{ opacity: disabled ? '0.6' : '1', position: 'relative' }}\n    >\n      <Container ref={dropdownRef}>\n        {variant === 'search-multi' && (\n          <Header\n            error={Boolean(errorText)}\n            onClick={handleDropdownClick}\n            variant={variant}\n            isDropdownOpen={isDropdownOpen}\n            disabled={disabled}\n            filteredEntries={filteredEntries}\n          >\n            <SearchInputWrapper variant='search-multi' isDropdownOpen={isDropdownOpen}>\n              <SvgSearch color={theme.search.svgColor} />\n              <SearchInput\n                type='text'\n                value={searchQuery}\n                onChange={handleSearchChange}\n                placeholder={t('user:search')}\n                isDropdownOpen={isDropdownOpen}\n                selectedValue={selectedValues}\n                variant={variant}\n                name='select-search-input'\n                onFocus={handleSearchInputFocus}\n              />\n            </SearchInputWrapper>\n            <SelectedArray>\n              {Array.isArray(selectedValues) &&\n                selectedValues[0] &&\n                selectedValues.length > 0 &&\n                selectedValues.map((value) => (\n                  <SelectedOptions key={value}>\n                    <InnerTextContainer>\n                      {entries?.find((entry) => entry[0] === value)?.[1]}\n                    </InnerTextContainer>\n                    <RemoveButton disabled={disabled} onClick={() => handleRemove(value)}>\n                      <Icon name={IconEnum.closeMd} />\n                    </RemoveButton>\n                  </SelectedOptions>\n                ))}\n            </SelectedArray>\n            <PlaceHolder\n              dropdownVisible={isDropdownOpen}\n              selectedValue={selectedValues}\n              className='placeholder'\n              background={background}\n              variant={variant}\n              error={Boolean(errorText)}\n            >\n              {placeholder}\n            </PlaceHolder>\n          </Header>\n        )}\n\n        {(variant === 'multi' || variant === 'single') && (\n          <Header\n            error={Boolean(errorText)}\n            onClick={handleDropdownClick}\n            variant={variant}\n            isDropdownOpen={isDropdownOpen}\n            disabled={disabled}\n            entriesState={entriesState}\n          >\n            {variant === 'multi' &&\n            Array.isArray(selectedValues) &&\n            selectedValues.length > 0 &&\n            selectedValues[0] ? (\n              <SelectedArray>\n                {selectedValues.map((value) => (\n                  <SelectedOptions key={value} disabled={disabled}>\n                    <InnerTextContainer>\n                      {entries?.find((entry) => entry[0] === value)?.[1]}\n                    </InnerTextContainer>\n                    <RemoveButton disabled={disabled} onClick={() => handleRemove(value)}>\n                      <Icon name={IconEnum.closeMd} />\n                    </RemoveButton>\n                  </SelectedOptions>\n                ))}\n              </SelectedArray>\n            ) : (\n              variant === 'single' &&\n              selectedValues[0] && (\n                <SelectedOptions variant={variant}>\n                  {entriesState?.find((entry) => entry[0] === selectedValues[0])?.[1] ||\n                    values?.[0]}\n                </SelectedOptions>\n              )\n            )}\n            <PlaceHolder\n              dropdownVisible={isDropdownOpen}\n              selectedValue={selectedValues}\n              className={className}\n              background={background}\n              variant={variant}\n              error={Boolean(errorText)}\n            >\n              {placeholder}\n            </PlaceHolder>\n          </Header>\n        )}\n\n        {variant === 'search-single' && (\n          <Header\n            onClick={handleDropdownClick}\n            variant={variant}\n            isDropdownOpen={isDropdownOpen}\n            error={Boolean(errorText)}\n            disabled={disabled}\n            filteredEntries={filteredEntries}\n          >\n            {selectedValues[0] && (\n              <SelectedOptions variant={variant}>\n                {entries?.find((entry) => entry[0] === selectedValues[0])?.[1] || values?.[0]}\n              </SelectedOptions>\n            )}\n            <PlaceHolder\n              dropdownVisible={isDropdownOpen}\n              selectedValue={selectedValues}\n              className='placeholder'\n              background={background}\n              variant={variant}\n              error={Boolean(errorText)}\n            >\n              {placeholder}\n            </PlaceHolder>\n            <SearchInputWrapper>\n              {!selectedValues[0] && isDropdownOpen && (\n                <>\n                  <SvgSearch color={theme.search.svgColor} />\n                  <SearchInput\n                    type='text'\n                    value={searchQuery}\n                    onChange={handleSearchChange}\n                    placeholder={t('user:search')}\n                    isDropdownOpen={isDropdownOpen}\n                    selectedValue={selectedValues}\n                    variant={variant}\n                    name='select-search-input'\n                    onFocus={handleSearchInputFocus}\n                  />\n                </>\n              )}\n            </SearchInputWrapper>\n          </Header>\n        )}\n\n        {variant === 'single-text' && (\n          <Header\n            error={Boolean(errorText)}\n            onClick={handleDropdownClick}\n            variant={variant}\n            isDropdownOpen={isDropdownOpen}\n            disabled={disabled}\n            filteredEntries={filteredEntries}\n          >\n            <PlaceHolder\n              dropdownVisible={isDropdownOpen}\n              selectedValue={selectedValues}\n              className='placeholder'\n              background={background}\n              variant={variant}\n              error={Boolean(errorText)}\n            >\n              {placeholder}\n            </PlaceHolder>\n            <SearchInputWrapper>\n              {isDropdownOpen && !selectedValues[0] && <SvgSearch color={theme.search.svgColor} />}\n              <SearchInput\n                type='text'\n                ref={singleTextRef}\n                onChange={handleSearchChange}\n                placeholder={t('user:enter_position')}\n                isDropdownOpen={isDropdownOpen}\n                selectedValue={selectedValues}\n                variant={variant}\n                name='select-search-input'\n                disabled={disabled}\n                autoComplete='off'\n                onFocus={handleSearchInputFocus}\n              />\n            </SearchInputWrapper>\n          </Header>\n        )}\n        <Dropdown\n          isDropdownOpen={isDropdownOpen}\n          className='dropdown'\n          error={Boolean(errorText)}\n          filteredEntries={filteredEntries}\n        >\n          <div style={{ overflowY: 'auto' }}>\n            {filteredEntries?.map((entry) => (\n              <Option\n                key={entry[0]}\n                onClick={() =>\n                  !disabled &&\n                  handleSelect({\n                    target: { value: variant === 'single-text' ? entry[1] : entry[0] },\n                  } as React.ChangeEvent<HTMLSelectElement>)\n                }\n                isSelected={variant === 'multi' && selectedValues.includes(entry[0])}\n                isSingleSelected={selectedValues[0] === entry[0]}\n                disabled={disabled}\n              >\n                <Text\n                  variant={TextVariantEnum.textBody2}\n                  style={{ fontFamily: 'MeroThai, Helvetica, Arial, Sans-Serif' }}\n                >\n                  {entry[1]}\n                </Text>\n              </Option>\n            ))}\n          </div>\n        </Dropdown>\n\n        {errorText && (\n          <AttentionErrorIcon className='editPencil'>\n            <Icon name={IconEnum.attentionError} />\n          </AttentionErrorIcon>\n        )}\n\n        {!errorText &&\n          (variant === 'search-single' || variant === 'single-text') &&\n          selectedValues[0] && (\n            <ButtonClear\n              disabled={disabled}\n              type='button'\n              onClick={(e) => {\n                clearSelect();\n                setIsDropdownOpen(true);\n                setSearchInputFocused(false);\n                e.stopPropagation();\n              }}\n            >\n              <Icon name={IconEnum.closeMd} />\n            </ButtonClear>\n          )}\n\n        {((!errorText &&\n          (variant === 'single' || variant === 'multi' || variant === 'search-multi')) ||\n          (!errorText && !selectedValues[0])) && (\n          <WrapperIcon\n            disabled={disabled}\n            onClick={handleDropdownClick}\n            isDropdownOpen={isDropdownOpen}\n          >\n            <Icon name={IconEnum.up} />\n          </WrapperIcon>\n        )}\n        {/* \n        {((!errorText &&\n          (variant === 'single' && className === 'filterVacancy')) && selectedValues[0]) && (\n            <ButtonClear\n              disabled={disabled}\n              type='button'\n              onClick={(e) => {\n                clearSelect();\n                setIsDropdownOpen(true);\n                setSearchInputFocused(false);\n                e.stopPropagation();\n              }}\n            >\n              <Icon name={IconEnum.closeMd} />\n            </ButtonClear>\n          )} */}\n\n        <input\n          ref={selectRef}\n          type='text'\n          style={{ display: 'none' }}\n          id={id}\n          name={name}\n          defaultValue={values?.join(',')}\n        />\n      </Container>\n      <BoxErrors isText={Boolean(errorText)} isDropdownOpen={isDropdownOpen}>\n        {Boolean(errorText) && (\n          <Text variant={TextVariantEnum.textSmall} color={theme.errorTextColor}>\n            {errorText}\n          </Text>\n        )}\n      </BoxErrors>\n    </Box>\n  );\n}\n", "import styled from 'styled-components';\n\nimport {\n  FONT_SIZES_DESC,\n  FONT_SIZES_MOB,\n  FONT_WEIGHTS_DESC,\n  FONT_WEIGHTS_MOB,\n  LINE_HEIGHTS_DESC,\n  LINE_HEIGHTS_MOB,\n} from '../Text';\nimport type { SelectProps } from '.';\n\nexport const Container = styled.div`\n  position: relative;\n  width: 300px;\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Header = styled.div<{\n  error?: boolean;\n  background?: string;\n  variant?: 'single' | 'multi' | 'search-multi' | 'search-single' | 'single-text';\n  isDropdownOpen?: boolean;\n  disabled?: boolean;\n  filteredEntries?: [id: string, value: string][];\n  entriesState?: [id: string, value: string][] | undefined;\n}>`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: ${({ disabled }) => (disabled ? 'auto' : 'pointer')};\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  flex-wrap: wrap;\n  align-items: ${({ variant }) =>\n    variant === 'search-multi' || variant === 'multi' ? 'center' : 'flex-start'};\n  width: 100%;\n  min-height: 40px;\n  background-color: transparent;\n  border: ${({ theme, error, isDropdownOpen }) => {\n    if (isDropdownOpen) return `2px solid ${theme.inputs.borderFocusColor}`;\n    if (!error) return `1px solid ${theme.inputs.borderColor}`;\n    if (error) return `2px solid ${theme.errorTextColor}`;\n    return `1px solid ${theme.inputs.borderColor}`;\n  }};\n  transition: ${({ isDropdownOpen }) =>\n    isDropdownOpen ? 'all 0.1s ease' : 'all 0.26s ease-in-out 0.2s'};\n  border-radius: ${({ isDropdownOpen, filteredEntries, variant, entriesState }) => {\n    if (variant === 'single' || variant === 'multi') {\n      if (isDropdownOpen && entriesState?.[0]) return '22px 22px 0 0';\n      return '22px';\n    }\n    if (variant === 'search-multi' || variant === 'search-single' || variant === 'single-text') {\n      if (isDropdownOpen && filteredEntries?.[0]) return '22px 22px 0 0';\n      return '22px';\n    }\n    return '22px';\n  }};\n  border-bottom: ${({ isDropdownOpen, filteredEntries, variant, entriesState }) => {\n    if (variant === 'single' || variant === 'multi') {\n      if (isDropdownOpen && entriesState?.[0]) return '0';\n      return 'auto';\n    }\n    if (variant === 'search-multi' || variant === 'search-single' || variant === 'single-text') {\n      if (isDropdownOpen && filteredEntries?.[0]) return '0';\n      return 'auto';\n    }\n    return 'auto';\n  }};\n  padding: ${({ variant }) =>\n    variant === 'multi' || variant === 'search-multi' ? '3px 44px 3px 3px' : '7px 16px'};\n  font-size: ${FONT_SIZES_MOB.textBody2};\n  line-height: 18px;\n\n  ~ .dropdown {\n    transform: ${({ isDropdownOpen }) => (isDropdownOpen ? 'scaleY(1)' : 'scaleY(0)')};\n  }\n\n  @media (min-width: 768px) {\n    font-size: ${FONT_SIZES_DESC.textBody2};\n    line-height: 24px;\n    min-height: 44px;\n  }\n`;\n\nexport const Dropdown = styled.div<{\n  isSelected?: boolean;\n  error?: boolean;\n  background?: string;\n  isDropdownOpen?: boolean;\n  filteredEntries?: [id: string, value: string][];\n}>`\n  position: absolute;\n  transform: ${({ isDropdownOpen }) => (isDropdownOpen ? 'scaleY(1)' : 'scaleY(0)')};\n  transform-origin: top;\n  transition: transform 0.26s ease;\n  top: 100%;\n  left: 0;\n  width: 100%;\n  overflow: hidden;\n  max-height: 300px;\n  z-index: 3;\n  flex-direction: column;\n  background-color: white ${({ isSelected }) => (isSelected ? 'white' : 'rgba(234, 234, 239, 0.4)')};\n  display: ${({ filteredEntries }) => (filteredEntries?.[0] ? 'flex' : 'none')};\n  background: ${({ background, theme }) => background || theme.inputs.backgroundDefaultColor};\n  border: ${({ theme, error, isDropdownOpen }) => {\n    if (isDropdownOpen) return `2px solid ${theme.inputs.borderFocusColor}`;\n    if (!error) return `1px solid ${theme.inputs.borderColor}`;\n    if (error) return `2px solid ${theme.errorTextColor}`;\n    return `1px solid ${theme.inputs.borderColor}`;\n  }};\n  border-top: 0;\n  border-radius: 0 0 22px 22px;\n`;\n\nexport const Option = styled.div<{\n  isSelected: boolean;\n  isSingleSelected: boolean;\n  disabled?: boolean;\n}>`\n  padding: 10px 16px;\n  display: flex;\n  flex-direction: row;\n  cursor: ${({ disabled }) => (disabled ? 'auto' : 'pointer')};\n  &:hover {\n    background-color: #f2f2f2;\n  }\n  input {\n    display: none;\n    visibility: none;\n  }\n`;\n\nexport const SelectedOptions = styled.div<SelectProps>`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: ${({ variant }) =>\n    variant === 'single' || variant === 'search-single' ? '3px 0 0' : '6px 12px'};\n  border: ${({ variant, theme }) =>\n    variant === 'single' || variant === 'search-single'\n      ? 'none'\n      : `1px solid ${theme.inputs.borderColor}`};\n  border-radius: ${({ variant }) =>\n    variant === 'single' || variant === 'search-single' ? 'none' : '22px'};\n  position: relative;\n  z-index: 2;\n  margin-bottom: ${({ variant }) =>\n    (variant === 'single' || variant === 'search-single') && '-6px'};\n\n  @media (min-width: 768px) {\n    padding: ${({ variant }) =>\n      variant === 'single' || variant === 'search-single' ? '3px 0 0' : '3px 12px'};\n  }\n`;\n\nexport const InnerTextContainer = styled.span`\n  min-height: 18px;\n  margin-top: 1px;\n  margin-bottom: -1px;\n\n  @media (min-width: 768px) {\n    min-height: 24px;\n  }\n`;\n\nexport const RemoveButton = styled.button<{ disabled?: boolean }>`\n  display: flex;\n  background-color: transparent;\n  border: none;\n  font-size: inherit;\n  cursor: ${({ disabled }) => (disabled ? 'auto' : 'pointer')};\n  align-self: start;\n  &:hover {\n    text-decoration: underline;\n  }\n  & svg {\n    width: 18px;\n    height: 18px;\n  }\n\n  @media (min-width: 768px) {\n    padding-top: 3px;\n  }\n`;\n\nexport const PlaceHolder = styled.label<{\n  selectedValue?: string[];\n  dropdownVisible?: boolean;\n  background?: string;\n  variant?: 'single' | 'multi' | 'search-multi' | 'search-single' | 'single-text';\n  error?: boolean;\n  className?: string;\n}>`\n  display: block;\n  line-height: 0;\n  position: absolute;\n  font-size: ${FONT_SIZES_MOB.textBody2};\n  line-height: 18px;\n  color: ${({ theme, error, dropdownVisible }) => {\n    if (dropdownVisible) return theme.accentTextColor;\n    if (error) return theme.errorTextColor;\n    return theme.defaultTextColor;\n  }};\n  transition: all 0.2s cubic-bezier(0.84, -0.03, 0.49, 0.23);\n  transform: ${({ selectedValue, dropdownVisible, variant, className }) => {\n    if (!selectedValue?.[0] && !dropdownVisible) {\n      if (variant === 'single' || variant === 'search-single') {\n        return 'translate(0, 3px)';\n      }\n      return 'translate(0, 10px)';\n    }\n    if (variant === 'single-text' || variant === 'multi' || variant === 'search-multi') {\n      return 'translate(0, -12px) scale(0.8)';\n    }\n    if (variant === 'single' && className === 'vacancyFilter') {\n      return 'translate(0, -17px) scale(0)';\n    }\n    return 'translate(0, -17px) scale(0.8)';\n  }};\n  transform-origin: center left;\n  z-index: ${({ selectedValue, dropdownVisible }) =>\n    !selectedValue?.[0] && !dropdownVisible ? '1' : 'auto'};\n  padding: ${({ selectedValue, dropdownVisible }) =>\n    !selectedValue?.[0] && !dropdownVisible ? '0' : '0 4px'};\n  margin-left: ${({ variant }) => (variant === 'multi' || variant === 'search-multi') && '12px'};\n  background: ${({ theme, background }) => background || theme.inputs.backgroundDefaultColor};\n  top: ${({ variant }) =>\n    (variant === 'single-text' || variant === 'multi' || variant === 'search-multi') && '2px'};\n\n  @media (min-width: 768px) {\n    font-size: ${FONT_SIZES_DESC.textBody2};\n    line-height: 24px;\n    padding: ${({ selectedValue, dropdownVisible }) =>\n      !selectedValue?.[0] && !dropdownVisible ? '0' : '0 6px'};\n    transform: ${({ selectedValue, dropdownVisible, variant, className }) => {\n      if (!selectedValue?.[0] && !dropdownVisible) {\n        return variant === 'single' || variant === 'search-single'\n          ? 'translate(0, 3px)'\n          : 'translate(0, 10px)';\n      }\n      if (variant === 'single-text' || variant === 'multi' || variant === 'search-multi') {\n        return 'translate(0, -15px) scale(0.8)';\n      }\n      if (variant === 'single' && className === 'vacancyFilter') {\n        return 'translate(0, -19px) scale(0)';\n      }\n      return 'translate(0, -19px) scale(0.8)';\n    }};\n  }\n`;\n\nexport const SearchInput = styled.input<{\n  isDropdownOpen: boolean;\n  selectedValue?: string[];\n  variant?: 'single' | 'multi' | 'search-multi' | 'search-single' | 'single-text';\n}>`\n  border: none;\n  background-color: transparent;\n  font-size: ${FONT_SIZES_MOB.textBody2};\n  font-weight: ${FONT_WEIGHTS_MOB.textBody2};\n  line-height: ${LINE_HEIGHTS_MOB.textBody2};\n  width: 100%;\n  margin-top: ${({ variant }) => {\n    if (variant === 'single-text' || variant === 'search-single') return '3px';\n    if (variant === 'search-multi') return '7px';\n    return '0';\n  }};\n  margin-left: ${({ variant }) => variant === 'search-multi' && '13px'};\n  margin-bottom: ${({ variant, selectedValue }) =>\n    variant === 'search-multi' && selectedValue?.[0] && '7px'};\n  display: ${({ isDropdownOpen, selectedValue, variant }) => {\n    if (!isDropdownOpen && variant !== 'single-text' && !selectedValue?.[0]) return 'none';\n    if (!isDropdownOpen && variant === 'single-text' && selectedValue?.[0]) return 'block';\n    if (!isDropdownOpen && variant === 'search-multi' && selectedValue?.[0]) return 'none';\n    if (!isDropdownOpen && variant === 'search-single' && selectedValue?.[0]) return 'none';\n    return 'block';\n  }};\n  visibility: ${({ isDropdownOpen, selectedValue, variant }) => {\n    if (!isDropdownOpen && variant !== 'single-text' && !selectedValue?.[0]) return 'hidden';\n    if (!isDropdownOpen && variant === 'single-text' && selectedValue?.[0]) return 'visible';\n    if (!isDropdownOpen && variant === 'search-multi' && selectedValue?.[0]) return 'hidden';\n    if (!isDropdownOpen && variant === 'search-single' && selectedValue?.[0]) return 'hidden';\n    return 'block';\n  }};\n\n  ::placeholder {\n    visibility: ${({ isDropdownOpen }) => (!isDropdownOpen ? 'hidden' : 'visible')};\n  }\n\n  ::-moz-placeholder {\n    color: ${({ isDropdownOpen }) => !isDropdownOpen && 'transparent'};\n  }\n\n  @media (min-width: 768px) {\n    font-size: ${FONT_SIZES_DESC.textBody2};\n    font-weight: ${FONT_WEIGHTS_DESC.textBody2};\n    line-height: ${LINE_HEIGHTS_DESC.textBody2};\n    margin-top: ${({ variant, selectedValue }) => {\n      if (variant === 'single-text' && !selectedValue?.[0]) return '2px';\n      if (variant === 'search-single') return '3px';\n      if (variant === 'search-multi') return '7px';\n      return '0';\n    }};\n  }\n`;\n\nexport const SearchInputWrapper = styled.div<{\n  variant?: 'single' | 'multi' | 'search-multi' | 'search-single' | 'single-text';\n  isDropdownOpen?: boolean;\n}>`\n  display: ${({ variant, isDropdownOpen }) =>\n    variant === 'search-multi' && isDropdownOpen === false ? 'none' : 'flex'};\n  flex-direction: row;\n  position: ${({ variant }) => (variant === 'search-multi' ? 'inherit' : 'absolute')};\n  width: 90%;\n  top: 8px;\n  svg {\n    width: 24px;\n    height: 24px;\n    margin: ${({ variant }) => (variant === 'search-multi' ? '3px 0 0 10px' : '0 12px 0 0')};\n  }\n  @media (min-width: 768px) {\n    top: 10px;\n    svg {\n      margin: ${({ variant }) => variant === 'search-multi' && '5px 0 0 12px'};\n    }\n  }\n`;\n\nexport const WrapperIcon = styled.div<{ isDropdownOpen: boolean; disabled?: boolean }>`\n  position: absolute;\n  cursor: ${({ disabled }) => (disabled ? 'auto' : 'pointer')};\n  top: 8px;\n  right: 10px;\n  width: 24px;\n  height: 24px;\n  transform: ${({ isDropdownOpen }) => (isDropdownOpen ? '0' : 'rotate(180deg)')};\n  transition: all 0.26s ease-in;\n  pointer-events: none;\n\n  @media (min-width: 768px) {\n    top: 10px;\n    right: 12px;\n  }\n`;\n\nexport const AttentionErrorIcon = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 10px;\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n  @media (min-width: 768px) {\n    top: 10px;\n    right: 12px;\n  }\n`;\n\nexport const ButtonClear = styled.button<{ disabled?: boolean }>`\n  cursor: ${({ disabled }) => (disabled ? 'auto' : 'pointer')};\n  position: absolute;\n  top: 8px;\n  right: 10px;\n  @media (min-width: 768px) {\n    top: 10px;\n    right: 12px;\n  }\n`;\n\nexport const SelectedArray = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  column-gap: 8px;\n  row-gap: 8px;\n\n  @media (min-width: 768px) {\n    row-gap: 12px;\n  }\n`;\n"],
  "mappings": "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",
  "names": ["Select", "dateEntries", "entries", "values", "variant", "name", "id", "placeholder", "disabled", "errorText", "background", "externalRef", "setExternalState", "externalState", "onChange", "className", "t", "theme", "useApp", "selectedValues", "setSelectedValues", "useState", "isDropdownOpen", "setIsDropdownOpen", "isSearchInputFocused", "setSearchInputFocused", "entriesState", "setEntriesState", "useEffect", "searchQuery", "setSearchQuery", "dropdownRef", "useRef", "selectRef", "singleTextRef", "prevValuesRef", "selectValue", "current", "value", "join", "compareArrays", "filter", "item", "includes", "handleClickOutside", "event", "contains", "target", "window", "addEventListener", "removeEventListener", "handleSelect", "prevSelectedValues", "index", "indexOf", "handleDropdownClick", "handleRemove", "newValues", "val", "handleSearchChange", "filteredEntries", "entry", "toLowerCase", "clearSelect", "handleSearchInputFocus", "opacity", "position", "Boolean", "search", "svgColor", "Array", "isArray", "length", "map", "find", "IconEnum", "closeMd", "overflowY", "TextVariantEnum", "textBody2", "fontFamily", "attentionError", "e", "stopPropagation", "up", "display", "textSmall", "errorTextColor"]
}
