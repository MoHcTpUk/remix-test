{
  "version": 3,
  "sources": ["../../../app/components/entities/Navbar/styles.ts", "../../../app/components/entities/Footer/index.tsx", "../../../app/components/entities/Footer/styles.ts", "../../../app/components/entities/Navbar/index.tsx", "../../../app/components/pages/Auth/ForgotPassword/index.tsx", "../../../app/components/pages/Auth/ForgotPassword/styles.ts", "../../../app/components/pages/Auth/Login/index.tsx", "../../../app/components/pages/Auth/Login/styles.ts", "../../../app/components/entities/MobileNavbar/index.tsx", "../../../app/components/common/ProgressBar/styles.ts", "../../../app/components/common/ProgressBar/index.tsx", "../../../app/components/entities/NavLink/index.tsx", "../../../app/components/entities/NavLink/styles.ts", "../../../app/components/entities/MobileNavbar/styles.ts", "../../../app/components/layouts/CommonLayout.tsx"],
  "sourcesContent": ["import { styled } from 'styled-components';\n\nexport const WrapperHeader = styled.div<{ sticky: boolean; type: string }>`\n  width: 100%;\n  background-color: ${({ type, theme, sticky }) =>\n    type === 'homePage' && !sticky ? 'none' : theme.navbar.wrapperHeaderBackgroundColor};\n  display: flex;\n  justify-content: center;\n  position: ${({ type, sticky }) => {\n    if (type === 'homePage' && sticky) return 'fixed';\n    return 'absolute';\n  }};\n  z-index: 10;\n  transition: all 0.2s cubic-bezier(0.2, 0, 0, 1);\n\n  & .transparent {\n    color: ${({ type, sticky }) => type === 'homePage' && !sticky && '#fff'};\n  }\n`;\n\nexport const ContainerHeader = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 12px 16px;\n  width: 100%;\n  @media (min-width: 768px) {\n    padding: 16px 44px;\n  }\n  @media (min-width: 1024px) {\n    padding: 16px 64px;\n  }\n  @media (min-width: 1280px) {\n    padding: 16px 32px;\n  }\n`;\n\nexport const LogoWrapper = styled.div`\n  cursor: pointer;\n  svg {\n    color: ${({ theme }) => theme.navbar.logoColor};\n    max-width: 99px;\n    height: 40px;\n    transition: all 0.2s cubic-bezier(0.2, 0, 0, 1);\n    @media (min-width: 768px) {\n      max-width: 118px;\n      height: 48px;\n    }\n  }\n\n  &:hover {\n    svg {\n      color: ${({ theme }) => theme.navbar.hoverColor};\n    }\n  }\n`;\n\nexport const BoxText = styled.div<{ lang: string; selectedLang: string }>`\n  cursor: pointer;\n  white-space: nowrap;\n  span:hover {\n    color: ${({ theme }) => theme.navbar.hoverColor};\n  }\n`;\n\nexport const MenuLinks = styled.div`\n  display: none;\n  span {\n    padding: 0 8px;\n  }\n  span:hover {\n    color: ${({ theme }) => theme.navbar.textLinkHoverColor};\n  }\n\n  @media (min-width: 1024px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 520px;\n  }\n`;\n\nexport const AvatarContainer = styled.button`\n  display: none;\n\n  @media (min-width: 1280px) {\n    display: block;\n    cursor: pointer;\n    width: 44px;\n    height: 44px;\n\n    img {\n      border-radius: 50%;\n      width: 44px;\n      height: 44px;\n      object-fit: cover;\n    }\n  }\n`;\n\nexport const MenuContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 25px;\n  @media (min-width: 768px) {\n    gap: 34px;\n  }\n`;\n\nexport const LeftContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 25px;\n  height: 40px;\n\n  @media (min-width: 768px) {\n    height: 48px;\n  }\n`;\n\nexport const TranslateBox = styled.div`\n  display: none;\n  @media (min-width: 768px) {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    gap: 16px;\n  }\n`;\n\nexport const IconButton = styled.button`\n  cursor: pointer;\n  display: block;\n  svg {\n    transition: all 0.2s cubic-bezier(0.2, 0, 0, 1);\n  }\n  &:hover {\n    svg {\n      color: ${({ theme }) => theme.navbar.svgHoverColor};\n    }\n  }\n`;\n\nexport const IconButtonBurger = styled.button`\n  cursor: pointer;\n  display: block;\n  svg {\n    transition: all 0.2s cubic-bezier(0.2, 0, 0, 1);\n  }\n  &:hover {\n    svg {\n      color: ${({ theme }) => theme.navbar.svgHoverColor};\n    }\n  }\n  @media (min-width: 1280px) {\n    display: none;\n  }\n`;\n\nexport const IconButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 25px;\n  @media (min-width: 768px) {\n    gap: 34px;\n  }\n`;\n", "import { Link } from '@remix-run/react';\nimport { memo } from 'react';\nimport routes from 'shared/routing/routes';\n\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\n\nimport {\n  BoxCopiright,\n  ContainerFooter,\n  IconsWrapper,\n  LinkItem,\n  LinksWrapper,\n  WrapperFooter,\n} from './styles';\n\nexport interface ILink {\n  id: string;\n  title: string;\n  href: string;\n}\n\nexport interface FooterProps {\n  links: ILink[];\n}\n\nexport const Footer = memo((): JSX.Element => {\n  const { theme, t } = useApp();\n\n  const navlinks: ILink[] = [\n    {\n      id: '1',\n      title: `${t('menu.about')}`,\n      href: routes.about,\n    },\n    {\n      id: '2',\n      title: `${t('menu.privacy_policy')}`,\n      href: routes.privacyPolicy.root,\n    },\n    // {\n    //   id: '3',\n    //   title: `${t('menu.articles')}`,\n    //   href: `${routes.materials.articles.root}`,\n    // },\n    {\n      id: '3',\n      title: `${t('menu.faq')}`,\n      href: `${routes.faq}`,\n    },\n    {\n      id: '4',\n      title: `${t('menu.news')}`,\n      href: `${routes.materials.news.root}`,\n    },\n  ];\n\n  return (\n    <WrapperFooter>\n      <ContainerFooter>\n        <LinksWrapper>\n          {navlinks.map(({ href, id, title }) => (\n            <Link key={id} to={href}>\n              <LinkItem>\n                <Text color={theme.footer.linkTextColor} variant={TextVariantEnum.textBody2}>\n                  {title}\n                </Text>\n              </LinkItem>\n            </Link>\n          ))}\n        </LinksWrapper>\n        <IconsWrapper>\n          {/* <Link to='#'>\n            <SosialImg>\n              <img src='/images/social/ln.jpg' alt='line' />\n            </SosialImg>\n          </Link>\n\n          <Link to='#'>\n            <SosialImg>\n              <img src='/images/social/fb.jpg' alt='facebook' />\n            </SosialImg>\n          </Link>\n\n          <Link to='#'>\n            <SosialImg>\n              <img src='/images/social/in.jpg' alt='instagram' />\n            </SosialImg>\n          </Link> */}\n        </IconsWrapper>\n        <BoxCopiright>\n          <Text color={theme.footer.linkTextColor} variant={TextVariantEnum.textSmall}>\n            {t('common:copyright')}\n          </Text>\n        </BoxCopiright>\n      </ContainerFooter>\n    </WrapperFooter>\n  );\n});\n", "import { styled } from 'styled-components';\n\nexport const WrapperFooter = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.footer.wrapperHeaderBackgroundColor};\n  display: flex;\n  justify-content: center;\n  border-top: 1px solid ${({ theme }) => theme.footer.borderColor};\n`;\n\nexport const ContainerFooter = styled.div`\n  display: flex;\n  position: relative;\n  flex-direction: column;\n  justify-content: space-between;\n  padding: 40px 60px;\n  width: 100%;\n  gap: 38px;\n  max-width: 1200px;\n  @media (min-width: 768px) {\n    padding: 48px 120px;\n    gap: 22px;\n  }\n  @media (min-width: 1280px) {\n    padding: 44px 0 52px;\n    gap: 28px;\n  }\n`;\n\nexport const LinksWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 32px;\n  row-gap: 16px;\n\n  @media (min-width: 1280px) {\n    justify-content: flex-start;\n    gap: 48px;\n    span {\n      line-height: 27px;\n    }\n  }\n`;\n\nexport const LinkItem = styled.div`\n  cursor: pointer;\n  span:hover {\n    color: ${({ theme }) => theme.footer.linkSpanColor};\n  }\n  @media (min-width: 1024px) {\n    span {\n      color: ${({ theme }) => theme.footer.linkSpanColorMedia1024};\n    }\n  }\n`;\n\nexport const IconsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  gap: 24px;\n\n  img {\n    width: 20px;\n    transition: all 0.15s ease-in;\n  }\n\n  @media (min-width: 1280px) {\n    position: absolute;\n    right: 0;\n    margin-top: 4px;\n  }\n`;\n\nexport const SosialImg = styled.div`\n  cursor: pointer;\n  img:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const BoxCopiright = styled.div`\n  display: flex;\n  justify-content: center;\n  text-align: center;\n\n  @media (min-width: 1280px) {\n    justify-content: flex-start;\n    text-align: flex-start;\n    span {\n      color: ${({ theme }) => theme.footer.boxCopirightSpanColorMedia1024};\n    }\n  }\n`;\n", "import { Link, NavLink, useLocation, useNavigate } from '@remix-run/react';\nimport { memo, useEffect, useState } from 'react';\nimport routes from 'shared/routing/routes';\n\nimport Button from '~/components/common/Button';\nimport SvgLogo from '~/components/common/Icons/Logo';\nimport SvgMenu from '~/components/common/Icons/Menu';\nimport { Switcher } from '~/components/common/Switcher';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport ForgotPasswordPage from '~/components/pages/Auth/ForgotPassword';\nimport Login from '~/components/pages/Auth/Login';\nimport { useApp, useRouteChecks } from '~/hooks';\nimport { LanguageEnum } from '~/types/enums/languageEnum';\nimport { DEFAULT_USER_AVATAR } from '~/utils/constants';\nimport { getImageUrl } from '~/utils/helpers.client';\n\nimport MobileNavbar from '../MobileNavbar';\nimport {\n  AvatarContainer,\n  BoxText,\n  ContainerHeader,\n  IconButtonBurger,\n  LeftContainer,\n  LogoWrapper,\n  MenuContainer,\n  MenuLinks,\n  TranslateBox,\n  WrapperHeader,\n} from './styles';\n\nexport const Navbar = memo((): JSX.Element => {\n  const [visibilityLogin, setVisibilityLogin] = useState(false);\n  const [initialRender, setInitialRender] = useState(false);\n  const [visibilityForgotPassword, setVisibilityForgotPassword] = useState(false);\n  const [visibleMobileNavbar, setVisibleMobileNavbar] = useState(false);\n  const [sticky, setSticky] = useState(false);\n\n  const { isHomePage, isSearchResume, isSearchVacancy, isSearchCompany } = useRouteChecks();\n  const { userContext, setUserContext, theme, t, i18n } = useApp();\n  function setLang(language: LanguageEnum) {\n    setUserContext((prevContext) => ({ ...prevContext, language }));\n  }\n\n  const changeLanguage = () =>\n    userContext?.language === LanguageEnum.TH\n      ? setUserContext((prevContext) => ({ ...prevContext, language: LanguageEnum.EN }))\n      : setUserContext((prevContext) => ({ ...prevContext, language: LanguageEnum.TH }));\n\n  useEffect(() => {\n    i18n.changeLanguage(userContext?.language);\n  }, [i18n, userContext?.language]);\n\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(location.search);\n    const loginParam = urlParams.get('login');\n    if (loginParam === 'true' && !visibilityLogin) {\n      setVisibilityLogin(true);\n    } else if ((!loginParam || loginParam === 'false') && visibilityLogin) {\n      setVisibilityLogin(false);\n    }\n  }, [location.search]);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window?.location?.search);\n\n    if (!initialRender) {\n      setInitialRender(true);\n    } else if (!visibilityLogin && urlParams.has('login')) {\n      urlParams.delete('login');\n      if (urlParams.toString() === '') {\n        navigate(`${location.pathname}`);\n      } else {\n        navigate(`${location.pathname}?${urlParams.toString()}`);\n      }\n    }\n\n    // Set initial render to false after the first render\n  }, [visibilityLogin]);\n\n  const handleOpenModal = (visibility: boolean) => {\n    const urlParams = new URLSearchParams(window?.location?.search);\n    urlParams.set('login', 'true');\n    const newUrl = `${location.pathname}?${urlParams.toString()}`;\n    window.history.pushState({}, '', newUrl);\n    setVisibilityLogin(!visibility);\n  };\n\n  useEffect(() => {\n    const stickyNavbar = () => {\n      const searchHeight = document.getElementById('searchSection');\n      const windowHeight = window.scrollY;\n      if (window !== undefined && searchHeight) {\n        if (windowHeight > searchHeight.offsetHeight) {\n          setSticky(true);\n        } else {\n          setSticky(false);\n        }\n      }\n    };\n    window.addEventListener('scroll', stickyNavbar);\n    return () => {\n      window.removeEventListener('scroll', stickyNavbar);\n    };\n  }, []);\n\n  return (\n    <WrapperHeader sticky={sticky} type={isHomePage ? 'homePage' : ''}>\n      <ContainerHeader>\n        <LeftContainer>\n          <Link to={routes.root}>\n            <LogoWrapper>\n              <SvgLogo className='transparent' />\n            </LogoWrapper>\n          </Link>\n          <TranslateBox>\n            {/* <BoxText\n              style={{ cursor: 'pointer' }}\n              lang={LanguageEnum.TH}\n              selectedLang={userContext?.language ?? ''}\n              onClick={() => setLang(LanguageEnum.TH)}\n            >\n              <Text\n                color={\n                  userContext?.language === LanguageEnum.TH\n                    ? theme.navbar.textActiveLangColor\n                    : theme.navbar.textNoActiveLangColor\n                }\n              >\n                ภาษาไทย\n              </Text>\n            </BoxText> */}\n            <Switcher\n              onChange={changeLanguage}\n              checked={userContext?.language === LanguageEnum.EN}\n              htmlLabel='lang'\n              variant='lang'\n            />\n            <BoxText\n              style={{ cursor: 'pointer' }}\n              lang={LanguageEnum.EN}\n              selectedLang={userContext?.language ?? ''}\n              onClick={() => {\n                if (userContext.language === 'th') setLang(LanguageEnum.EN);\n                if (userContext.language === 'en') setLang(LanguageEnum.TH);\n              }}\n            >\n              <Text\n                color={theme.navbar.textActiveLangColor}\n                variant={TextVariantEnum.textBody2}\n                className='transparent'\n              >\n                {userContext?.language === 'en' ? 'English' : 'ภาษาไทย'}\n              </Text>\n            </BoxText>\n          </TranslateBox>\n          <MenuLinks>\n            <NavLink to={routes.root}>\n              <Button priority='tertiary' isActive={isHomePage}>\n                <Text\n                  color={theme.navbar.textLinkColor}\n                  variant={TextVariantEnum.textBody2}\n                  className='transparent'\n                >\n                  {t('common:home')}\n                </Text>\n              </Button>\n            </NavLink>\n            <NavLink to={`/search/${userContext.search || ''}`}>\n              <Button\n                priority='tertiary'\n                isActive={isSearchResume || isSearchVacancy || isSearchCompany}\n              >\n                <Text\n                  color={theme.navbar.textLinkColor}\n                  variant={TextVariantEnum.textBody2}\n                  className='transparent'\n                >\n                  {t('home:search')}\n                </Text>\n              </Button>\n            </NavLink>\n          </MenuLinks>\n        </LeftContainer>\n\n        <MenuContainer>\n          {userContext.user?.isAuthenticated ? (\n            <>\n              {/* <IconButtons>\n                <IconButton>\n                  <SvgBell color={theme.navbar.svgColor} className='transparent' />\n                </IconButton>\n                <IconButton>\n                  <SvgEmail color={theme.navbar.svgColor} className='transparent' />\n                </IconButton>\n              </IconButtons> */}\n              <AvatarContainer onClick={() => setVisibleMobileNavbar(!visibleMobileNavbar)}>\n                {/* <Link to={routes.user.root}> */}\n                <img\n                  src={\n                    userContext.user.avatar\n                      ? getImageUrl(userContext.user.avatar)\n                      : DEFAULT_USER_AVATAR\n                  }\n                  alt='avatar'\n                />\n                {/* </Link> */}\n              </AvatarContainer>\n            </>\n          ) : (\n            <Button\n              onClick={() => handleOpenModal(visibilityLogin)}\n              priority={!sticky ? 'secondary' : 'primary'}\n            >\n              <Text variant={TextVariantEnum.textBody2}>{t('signIn')}</Text>\n            </Button>\n          )}\n          <IconButtonBurger onClick={() => setVisibleMobileNavbar(!visibleMobileNavbar)}>\n            <SvgMenu color={theme.navbar.svgColor} className='transparent' />\n          </IconButtonBurger>\n        </MenuContainer>\n      </ContainerHeader>\n      <Login\n        visibility={visibilityLogin}\n        setVisibility={setVisibilityLogin}\n        setVisibilityForgotPassword={setVisibilityForgotPassword}\n      />\n      <ForgotPasswordPage\n        visibility={visibilityForgotPassword}\n        setVisibility={setVisibilityForgotPassword}\n        setVisibilityLogin={setVisibilityLogin}\n      />\n      <MobileNavbar\n        visibility={visibleMobileNavbar}\n        setVisibility={setVisibleMobileNavbar}\n        visibilityLogin={visibilityLogin}\n        setVisibilityLogin={setVisibilityLogin}\n      />\n    </WrapperHeader>\n  );\n});\n", "import { Link, useFetcher } from '@remix-run/react';\nimport { useEffect, useRef } from 'react';\nimport routes from 'shared/routing/routes';\n\nimport Button from '~/components/common/Button';\nimport { Input } from '~/components/common/Input';\nimport { Modal } from '~/components/common/Modal';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\nimport type { IForgotPasswordResponse } from '~/types/interfaces/iForms';\n\nimport { BoxContainer, BoxTextWrapper, PoliciesText } from './styles';\n\nexport default function ForgotPasswordPage({\n  visibility,\n  setVisibility,\n  setVisibilityLogin,\n}: {\n  visibility: boolean;\n  setVisibility: (visibility: boolean) => void;\n  setVisibilityLogin: (visibility: boolean) => void;\n}) {\n  const { t, userContext } = useApp();\n\n  const forgotPassword = useFetcher<IForgotPasswordResponse>();\n  const emailRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (forgotPassword.data?.fieldErrors?.email) {\n      emailRef.current?.focus();\n    }\n\n    if (forgotPassword.data?.status === 200 || forgotPassword.data?.status === 200)\n      setVisibility(false);\n  }, [forgotPassword.data]);\n\n  return (\n    <Modal visibility={visibility} setVisibility={setVisibility}>\n      <BoxContainer>\n        <BoxTextWrapper>\n          <Text variant={TextVariantEnum.textHeading3} style={{ textAlign: 'center' }}>\n            {t('auth:forgot_your_password')}\n          </Text>\n          <Text variant={TextVariantEnum.textBody1medium} style={{ textAlign: 'center' }}>\n            {t('auth:no_problem_we_will_send')}\n          </Text>\n        </BoxTextWrapper>\n        <forgotPassword.Form\n          method='POST'\n          action='/auth/forgot-password'\n          style={{\n            width: '100%',\n            display: 'flex',\n            justifyContent: 'center',\n            flexDirection: 'column',\n            gap: '24px',\n          }}\n        >\n          <Input\n            htmlType='email'\n            placeholder={t('auth:enter_email')}\n            id='i_email'\n            name='email'\n            textHelper={t('auth:enter_your_email_to_retrieve_a_new_password')}\n            aria-invalid={\n              forgotPassword?.data?.fieldErrors?.email?.[userContext.language] ? true : undefined\n            }\n          />\n          <Button priority='primary' fullwidth type='submit'>\n            <Text variant={TextVariantEnum.textBody2}>{t('auth:send_password')}</Text>\n          </Button>\n        </forgotPassword.Form>\n\n        <PoliciesText>\n          <Text variant={TextVariantEnum.textBody2}>\n            {`${t('auth:by_clicking_send_password_i_agree_to_the')} `}\n          </Text>\n          <Link to={routes.privacyPolicy.terms}>\n            <Text\n              variant={TextVariantEnum.textBody2}\n              style={{ textDecoration: 'underline', cursor: 'pointer' }}\n            >\n              {t('auth:terms_of_use')}\n            </Text>\n          </Link>\n          <Text variant={TextVariantEnum.textBody2}>{` ${t('auth:and')} `}</Text>\n          <Link to={routes.privacyPolicy.root}>\n            <Text\n              variant={TextVariantEnum.textBody2}\n              style={{ textDecoration: 'underline', cursor: 'pointer' }}\n            >\n              {t('auth:privacy_policy')}.\n            </Text>\n          </Link>\n        </PoliciesText>\n\n        <Button\n          priority='secondary'\n          fullwidth\n          onClick={() => {\n            setVisibility(false);\n            setVisibilityLogin(true);\n          }}\n        >\n          <Text variant={TextVariantEnum.textBody2}>{t('auth:back_to_sign_in')}</Text>\n        </Button>\n      </BoxContainer>\n    </Modal>\n  );\n}\n", "import { styled } from 'styled-components';\n\nexport const BoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n  width: 100%;\n  max-width: 100%;\n  @media (min-width: 768px) {\n    max-width: 388px;\n  }\n  @media (min-width: 1024px) {\n    gap: 32px;\n  }\n`;\n\nexport const Wrapper = styled.div`\n  padding: 16px;\n  background-color: ${({ theme }) => theme.auth.backgroundRegisterPage};\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const BoxTextWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  @media (min-width: 768px) {\n    gap: 16px;\n  }\n`;\n\nexport const BoxForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  background-color: ${({ theme }) => theme.auth.backgroundRegisterContainerColor};\n  border-radius: 8px;\n  align-items: center;\n  padding: 16px;\n  gap: 24px;\n  @media (min-width: 768px) {\n    max-width: 476px;\n    padding: 40px;\n  }\n  @media (min-width: 1280px) {\n    padding: 48px 102px;\n    max-width: 792px;\n  }\n`;\n\nexport const BoxRadios = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  @media (min-width: 1280px) {\n    flex-direction: row;\n    justify-content: center;\n  }\n`;\n\nexport const RadioBtnWrapper = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const RadioBtn = styled.input`\n  accent-color: ${({ theme }) => theme.auth.radioButtonColor};\n  width: 20px;\n  height: 20px;\n`;\n\nexport const PoliciesText = styled.div`\n  text-align: center;\n`;\n", "import { Form, Link, useFetcher, useLocation } from '@remix-run/react';\nimport { useEffect } from 'react';\nimport routes from 'shared/routing/routes';\n\nimport Button from '~/components/common/Button';\nimport { Input } from '~/components/common/Input';\nimport { Modal } from '~/components/common/Modal';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\nimport { IconEnum } from '~/types/enums/iconEnum';\nimport type { ISignInResponse } from '~/types/interfaces/iForms';\nimport { removeLoginSearch } from '~/utils/helpers.client';\n\nimport { BoxContainer, BoxForm, BoxHelp, BoxSocial, HelpButton, PoliciesText } from './styles';\n\nexport default function Login({\n  visibility,\n  setVisibility,\n  setVisibilityForgotPassword,\n}: {\n  visibility: boolean;\n  setVisibility: (visibility: boolean) => void;\n  setVisibilityForgotPassword: (visibility: boolean) => void;\n}) {\n  const { t, theme, userContext } = useApp();\n  const location = useLocation();\n\n  const login = useFetcher<ISignInResponse>();\n\n  useEffect(() => {\n    if (login?.data?.success) {\n      setVisibility(false);\n    }\n  }, [login.data?.success]);\n\n  return (\n    <Modal visibility={visibility} setVisibility={setVisibility}>\n      <BoxContainer>\n        <Text variant={TextVariantEnum.textHeading3} style={{ textAlign: 'center' }}>\n          {t('auth:create_new_user_or_sign_in')}\n        </Text>\n        <login.Form method='POST' action='/auth/login' style={{ width: '100%' }}>\n          <BoxForm>\n            <Input\n              placeholder={t('auth:enter_email')}\n              id='i_email'\n              name='email'\n              aria-invalid={\n                login.data?.fieldErrors?.email?.[userContext.language] ? true : undefined\n              }\n              errorText={login.data?.fieldErrors?.email?.[userContext.language]}\n            />\n            <Input\n              placeholder={t('auth:enter_password')}\n              id='i_password'\n              name='password'\n              variant='password'\n              aria-invalid={\n                login.data?.fieldErrors?.password?.[userContext.language] ? true : undefined\n              }\n              errorText={login.data?.fieldErrors?.password?.[userContext.language]}\n            />\n            <Button type='submit' priority='primary' fullwidth>\n              <Text variant={TextVariantEnum.textBody2}>{t('auth:sign_in_with_email')}</Text>\n            </Button>\n          </BoxForm>\n        </login.Form>\n        <Text variant={TextVariantEnum.textBody2medium}>\n          {t('auth:or_register_with_social_users')}\n        </Text>\n        <BoxSocial>\n          <Form method='POST' action='/auth/login-google'>\n            <Button type='submit' priority='secondary' fullwidth iconName={IconEnum.google}>\n              <Text variant={TextVariantEnum.textBody2}>{t('auth:sign_with_google')}</Text>\n            </Button>\n            {/* to redirect to the same page from where the authorization was */}\n            <input\n              type='hidden'\n              name='path'\n              value={removeLoginSearch(`${location.pathname}${location.search}`) || ''}\n            />\n          </Form>\n          <Form method='POST' action='/auth/login-facebook'>\n            <Button type='submit' priority='secondary' fullwidth iconName={IconEnum.fb}>\n              <Text variant={TextVariantEnum.textBody2}>{t('auth:sign_with_facebook')}</Text>\n            </Button>\n            {/* to redirect to the same page from where the authorization was */}\n            <input\n              type='hidden'\n              name='path'\n              value={removeLoginSearch(`${location.pathname}${location.search}`) || ''}\n            />\n          </Form>\n        </BoxSocial>\n        <BoxHelp>\n          <HelpButton\n            onClick={() => {\n              setVisibility(false);\n              setVisibilityForgotPassword(true);\n            }}\n          >\n            <Text variant={TextVariantEnum.textBody2medium} color={theme.auth.helpButtonColor}>\n              {t('auth:forgot_password')}\n            </Text>\n          </HelpButton>\n          <HelpButton>\n            <Link to={routes.auth.register.root}>\n              <Text variant={TextVariantEnum.textBody2medium} color={theme.auth.helpButtonColor}>\n                {t('auth:registration')}\n              </Text>\n            </Link>\n          </HelpButton>\n        </BoxHelp>\n        <PoliciesText>\n          <Text variant={TextVariantEnum.textBody2}>\n            {`${t('auth:by_continuing_i_agree_to_the')} `}\n          </Text>\n          <Link to={routes.privacyPolicy.terms}>\n            <Text\n              variant={TextVariantEnum.textBody2}\n              style={{ textDecoration: 'underline', cursor: 'pointer' }}\n            >\n              {t('auth:terms_of_use')}\n            </Text>\n          </Link>\n          <Text variant={TextVariantEnum.textBody2}>{` ${t('auth:and')} `}</Text>\n          <Link to={routes.privacyPolicy.root}>\n            <Text\n              variant={TextVariantEnum.textBody2}\n              style={{ textDecoration: 'underline', cursor: 'pointer' }}\n            >\n              {t('auth:privacy_policy')}.\n            </Text>\n          </Link>\n        </PoliciesText>\n      </BoxContainer>\n    </Modal>\n  );\n}\n", "import { styled } from 'styled-components';\n\nexport const BoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n  width: 100%;\n  max-width: 100%;\n  @media (min-width: 768px) {\n    max-width: 388px;\n  }\n  @media (min-width: 1024px) {\n    gap: 32px;\n  }\n`;\n\nexport const BoxForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  gap: 24px;\n  margin-bottom: -8px;\n  @media (min-width: 1024px) {\n    margin-bottom: -16px;\n  }\n`;\n\nexport const BoxSocial = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  gap: 24px;\n  margin-top: -8px;\n  @media (min-width: 1024px) {\n    margin-top: -16px;\n  }\n`;\n\nexport const BoxHelp = styled.div`\n  cursor: pointer;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 24px;\n  justify-content: center;\n  margin-top: -8px;\n  @media (min-width: 1024px) {\n    margin-top: -16px;\n  }\n`;\n\nexport const PoliciesText = styled.div`\n  margin-top: -8px;\n  text-align: center;\n`;\n\nexport const HelpButton = styled.div`\n  &:hover,\n  &:focus {\n    span {\n      color: ${({ theme }) => theme.auth.helpButtonHoverColor};\n    }\n  }\n  &:active {\n    transform: scale(0.95);\n    span {\n      color: ${({ theme }) => theme.auth.helpButtonActiveColor};\n    }\n  }\n`;\n", "import { Form, Link, useLocation, useMatches } from '@remix-run/react';\nimport { Fragment, useEffect, useState } from 'react';\nimport routes from 'shared/routing/routes';\n\nimport { Box } from '~/components/common/Box';\nimport Button from '~/components/common/Button/';\nimport { Icon } from '~/components/common/Icon';\nimport { Modal } from '~/components/common/Modal';\nimport ProgressBar from '~/components/common/ProgressBar';\nimport { Switcher } from '~/components/common/Switcher';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\nimport { IconEnum } from '~/types/enums/iconEnum';\nimport { LanguageEnum } from '~/types/enums/languageEnum';\n\nimport ButtonCreate from '../ButtonCreate';\nimport ModalSelectCreateForm from '../ModalSelectCreateForm';\nimport { BoxText } from '../Navbar/styles';\nimport type { NavbarLink } from '../NavLink';\nimport { NavbarItem } from '../NavLink';\nimport { BoxContainer, ButtonsGroup, Section, TranslateBox } from './styles';\n\nexport default function MobileNavbar({\n  visibility,\n  setVisibility,\n  visibilityLogin,\n  setVisibilityLogin,\n}: {\n  visibility: boolean;\n  setVisibility: (visibility: boolean) => void;\n  visibilityLogin: boolean;\n  setVisibilityLogin: (visibility: boolean) => void;\n}) {\n  const matches = useMatches();\n  const indexMatches = matches.some((m) => m.id === 'routes/index');\n  const isUserMatches = matches.some((m) => m.id.includes('user'));\n  const userMatches = matches.some((m) => m.id === 'routes/user/myprofile');\n  const resumeMatches = matches.some((m) => m.id === 'routes/user/resume');\n  const vacancyMatches = matches.some((m) => m.id === 'routes/user/vacancy');\n  const companyMatches = matches.some((m) => m.id === 'routes/user/company');\n  const responsesMatches = matches.some((m) => m.id === 'routes/user/responses');\n  const searchVacancyMatches = matches.some((m) => m.id === 'routes/search/vacancy');\n  const searchResumeMatches = matches.some((m) => m.id === 'routes/search/resume');\n  const searchCompanyMatches = matches.some((m) => m.id === 'routes/search/company');\n\n  const { userContext, setUserContext, theme, t, i18n } = useApp();\n  function setLang(language: LanguageEnum) {\n    setUserContext((prevContext) => ({ ...prevContext, language }));\n  }\n\n  const changeLanguage = () =>\n    userContext?.language === LanguageEnum.TH\n      ? setUserContext((prevContext) => ({ ...prevContext, language: LanguageEnum.EN }))\n      : setUserContext((prevContext) => ({ ...prevContext, language: LanguageEnum.TH }));\n\n  function setSearch(search: 'vacancy' | 'resume' | 'company') {\n    setUserContext((prevContext) => ({ ...prevContext, search }));\n  }\n\n  const handleClickSearch = (search?: 'vacancy' | 'resume' | 'company') => {\n    if (search) setSearch(search);\n  };\n\n  useEffect(() => {\n    i18n.changeLanguage(userContext?.language);\n  }, [i18n, userContext?.language]);\n\n  const homeLinks: NavbarLink[] = [\n    {\n      id: 1,\n      title: t('common:home_page'),\n      href: routes.root,\n      isActive: indexMatches,\n    },\n  ];\n\n  const searchLinks: NavbarLink[] = [\n    {\n      id: 1,\n      title: t('home:find_job'),\n      href: routes.search.vacancy.root,\n      isActive: searchVacancyMatches,\n      search: 'vacancy',\n    },\n    {\n      id: 2,\n      title: t('home:find_employer'),\n      href: routes.search.resume.root,\n      isActive: searchResumeMatches,\n      search: 'resume',\n    },\n    {\n      id: 3,\n      title: t('home:find_company'),\n      href: routes.search.company.root,\n      isActive: searchCompanyMatches,\n      search: 'company',\n    },\n  ];\n\n  const userLinks: NavbarLink[] = [\n    {\n      id: 1,\n      title: t('user:my_profile'),\n      href: routes.user.root,\n      isActive: userMatches,\n    },\n    {\n      id: 2,\n      title: t('user:my_resumes'),\n      href: routes.user.resume.root,\n      isActive: resumeMatches,\n    },\n    {\n      id: 3,\n      title: t('user:my_vacancies'),\n      href: routes.user.vacancy.root,\n      isActive: vacancyMatches,\n    },\n    {\n      id: 4,\n      title: t('user:companies'),\n      href: routes.user.company.root,\n      isActive: companyMatches,\n    },\n    {\n      id: 5,\n      title: t('user:responses'),\n      href: routes.user.responses.root,\n      isActive: responsesMatches,\n    },\n  ];\n\n  const [visibleSelectionCreate, setSelectionCreate] = useState(false);\n  const [variantCreate, setVariantCreate] = useState<'vacancy' | 'resume'>('vacancy');\n  const loc = useLocation();\n\n  return (\n    <Modal variant='navbar' visibility={visibility} setVisibility={setVisibility}>\n      <BoxContainer>\n        {userContext.user?.isAuthenticated && isUserMatches && (\n          <Box flexDirection='column' gap='8px' style={{ margin: '8px 0 16px' }}>\n            <Box flexDirection='row' gap='4px' alignItems='center'>\n              <Icon\n                name={userContext.user.isEmailConfirm ? IconEnum.verifed : IconEnum.notVerifed}\n              />\n              <Text variant={TextVariantEnum.textSmallmedium}>{userContext.user?.email}</Text>\n            </Box>\n            <Box flexDirection='column' gap='8px'>\n              <Box flexDirection='row' justifyContent='space-between' alignItems='center'>\n                <Text variant='textSmall'>{t('common:profile_completeness')}</Text>\n                <Text variant='textSmall'>{`${userContext.user.progressInfo || ''}%`}</Text>\n              </Box>\n              <ProgressBar percent={userContext.user?.progressInfo} />\n            </Box>\n          </Box>\n        )}\n        <Section className='noDesktop'>\n          <Text variant={TextVariantEnum.textBody2medium}>{t('common:home')}</Text>\n          {homeLinks.map((item) => (\n            <Fragment key={item.id}>\n              <NavbarItem item={item} handleCloseBar={() => setVisibility(!visibility)} />\n            </Fragment>\n          ))}\n        </Section>\n\n        <Section className='noDesktop'>\n          <Text variant={TextVariantEnum.textBody2medium}>{t('common:search')}</Text>\n\n          {searchLinks.map((item) => (\n            <Fragment key={item.id}>\n              <NavbarItem\n                handleClickSearch={handleClickSearch}\n                item={item}\n                handleCloseBar={() => setVisibility(!visibility)}\n              />\n            </Fragment>\n          ))}\n        </Section>\n\n        {userContext.user?.isAuthenticated && (\n          <Section>\n            <Text variant={TextVariantEnum.textBody2medium}>{t('user:profile')}</Text>\n            {userLinks.map((item) => (\n              <Fragment key={item.id}>\n                <NavbarItem item={item} handleCloseBar={() => setVisibility(!visibility)} />\n              </Fragment>\n            ))}\n          </Section>\n        )}\n\n        <TranslateBox>\n          <Switcher\n            onChange={changeLanguage}\n            checked={userContext?.language === LanguageEnum.EN}\n            htmlLabel='lang'\n            variant='lang'\n          />\n          <BoxText\n            style={{ cursor: 'pointer' }}\n            lang={LanguageEnum.EN}\n            selectedLang={userContext?.language ?? ''}\n            onClick={() => {\n              if (userContext.language === 'th') setLang(LanguageEnum.EN);\n              if (userContext.language === 'en') setLang(LanguageEnum.TH);\n            }}\n          >\n            <Text color={theme.defaultTextColor} variant={TextVariantEnum.textBody2}>\n              {userContext?.language === 'en' ? 'English' : 'ภาษาไทย'}\n            </Text>\n          </BoxText>\n        </TranslateBox>\n\n        <ButtonsGroup>\n          <ButtonCreate\n            variant='resume'\n            fullwidth\n            setVariantCreate={setVariantCreate}\n            setSelectionCreate={setSelectionCreate}\n          />\n          <ButtonCreate\n            variant='vacancy'\n            fullwidth\n            setVariantCreate={setVariantCreate}\n            setSelectionCreate={setSelectionCreate}\n          />\n          <Link\n            to={\n              userContext.user.isAuthenticated\n                ? routes.user.company.create\n                : `${loc.pathname}${loc.search ? `${loc.search}&login=true` : '?login=true'}`\n            }\n          >\n            <Button priority='secondary' size='S' fullwidth>\n              <Text variant={TextVariantEnum.textBody2}> {t('user:create_company')}</Text>\n            </Button>\n          </Link>\n        </ButtonsGroup>\n        {!userContext.user?.isAuthenticated ? (\n          <Button\n            onClick={() => {\n              setVisibility(!visibility);\n              setVisibilityLogin(!visibilityLogin);\n            }}\n            priority='primary'\n            fullwidth\n          >\n            <Text>{t('common:log_in')}</Text>\n          </Button>\n        ) : (\n          <Form method='POST' action='/auth/logout'>\n            <Button\n              onClick={() => {\n                setVisibility(!visibility);\n                setVisibilityLogin(!visibilityLogin);\n              }}\n              priority='tertiary'\n              fullwidth\n              type='submit'\n            >\n              <Text>{t('common:log_out')}</Text>\n            </Button>\n          </Form>\n        )}\n      </BoxContainer>\n      <ModalSelectCreateForm\n        variant={variantCreate}\n        visibility={visibleSelectionCreate}\n        setVisibility={setSelectionCreate}\n      />\n    </Modal>\n  );\n}\n", "import { styled } from 'styled-components';\n\nexport const ProgresWrapper = styled.div`\n  background-color: ${({ theme }) => theme.pgoressBar.backgroundColor};\n  padding: 8px;\n  border-radius: 80px;\n`;\n\nexport const ProgressBarContainer = styled.div`\n  width: 100%;\n  height: 4px;\n  background-color: ${({ theme }) => theme.pgoressBar.containerColor};\n  border-radius: 10px;\n  overflow: hidden;\n`;\n\nexport const Progress = styled.div<{ percent: number }>`\n  height: 100%;\n  background-color: ${({ theme }) => theme.pgoressBar.aggregateColor};\n  width: ${({ percent }) => percent}%;\n`;\n", "import React from 'react';\n\nimport { Progress, ProgressBarContainer, ProgresWrapper } from './styles';\n\nexport type ProgressBarProps = React.ButtonHTMLAttributes<HTMLButtonElement> & {\n  percent?: string;\n};\n\nfunction ProgressBar({ percent = '0' }: ProgressBarProps) {\n  return (\n    <ProgresWrapper>\n      <ProgressBarContainer>\n        <Progress percent={+percent} />\n      </ProgressBarContainer>\n    </ProgresWrapper>\n  );\n}\n\nexport default ProgressBar;\n", "import { Link } from '@remix-run/react';\nimport { memo } from 'react';\nimport { styled } from 'styled-components';\n\nimport { Box } from '~/components/common/Box';\nimport { Icon } from '~/components/common/Icon';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\nimport { IconEnum } from '~/types/enums/iconEnum';\n\nimport { LinkContainer } from './styles';\n\nexport type NavbarLink = {\n  id: number;\n  title: string;\n  href: string;\n  isActive?: boolean;\n  icon?: IconEnum;\n  search?: 'company' | 'vacancy' | 'resume';\n};\n\ntype NavbarItemProps = {\n  item: NavbarLink;\n  handleCloseBar?: () => void;\n  handleClickSearch?: (id?: 'vacancy' | 'resume' | 'company') => void;\n};\n\nexport const NavbarItem = memo(\n  ({ item, handleCloseBar, handleClickSearch }: NavbarItemProps): JSX.Element => {\n    const { theme } = useApp();\n    return (\n      <Link\n        to={item.href}\n        onClick={() => {\n          if (handleCloseBar) {\n            handleCloseBar();\n          }\n          if (handleClickSearch) {\n            handleClickSearch(item.search);\n          }\n        }}\n      >\n        <LinkContainer isActive={item.isActive}>\n          <Box flexDirection='row' alignItems='center' gap='16px'>\n            {item.icon && (\n              <Icon\n                name={item.icon}\n                color={item.isActive ? theme.navbar.hoverColor : theme.defaultTextColor}\n              />\n            )}\n            <Text variant={TextVariantEnum.textBody2medium}>{item.title}</Text>\n          </Box>\n          {!item.isActive && <Icon name={IconEnum.arrowRight} />}\n        </LinkContainer>\n      </Link>\n    );\n  },\n);\n", "import { styled } from 'styled-components';\n\nexport const LinkContainer = styled.div<{ isActive?: boolean }>`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border: 1px solid ${({ theme }) => theme.navLinks.borderColor};\n  background-color: ${({ theme, isActive }) =>\n    isActive ? theme.navLinks.backgroundActiveColor : theme.navLinks.backgroundColor};\n  border-radius: 80px;\n  height: 40px;\n  padding: 8px 16px;\n  transition: all 0.2s cubic-bezier(0.2, 0, 0, 1);\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme, isActive }) =>\n      isActive ? theme.navLinks.backgroundActiveColor : theme.navLinks.hoverBackgroundColor};\n  }\n  &:active {\n    background-color: ${({ theme, isActive }) =>\n      isActive ? theme.navLinks.backgroundActiveColor : theme.navLinks.pressedBackgroundColor};\n  }\n\n  @media (min-width: 768px) {\n    height: 44px;\n    padding: 10px 16px;\n  }\n`;\n", "import { styled } from 'styled-components';\n\nexport const BoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  @media (min-width: 1280px) {\n    .noDesktop {\n      display: none;\n    }\n  }\n`;\n\nexport const Section = styled.div`\n  display: flex;\n  border-top: 1px solid ${({ theme }) => theme.user.borderColor};\n  padding: 16px 0 8px;\n  display: 'flex';\n  flex-direction: column;\n  gap: 8px;\n\n  &:first-child {\n    margin-top: 16px;\n  }\n\n  @media (min-width: 768px) {\n    padding: 16px 0 16px;\n  }\n\n  @media (min-width: 1280px) {\n    border-top: none;\n    border-bottom: 1px solid ${({ theme }) => theme.user.borderColor};\n    margin-bottom: 16px;\n  }\n`;\n\nexport const TranslateBox = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 8px;\n  padding: 16px 0;\n  border-top: 1px solid ${({ theme }) => theme.user.borderColor};\n  border-bottom: 1px solid ${({ theme }) => theme.user.borderColor};\n\n  @media (min-width: 1280px) {\n    display: none;\n  }\n`;\n\nexport const ButtonsGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 16px 0;\n  gap: 8px;\n  border-bottom: 1px solid ${({ theme }) => theme.user.borderColor};\n  margin-bottom: 16px;\n\n  @media (min-width: 1280px) {\n    display: none;\n  }\n`;\n", "import { styled } from 'styled-components';\n\nimport { Box } from '../common/Box';\nimport { Footer } from '../entities/Footer';\nimport { Navbar } from '../entities/Navbar';\n\ntype Props = {\n  children: JSX.Element | JSX.Element[];\n};\n\nconst Container = styled(Box)`\n  background-color: ${({ theme }) => theme.backgroundColor};\n`;\n\nexport function CommonLayout({ children }: Props): JSX.Element {\n  return (\n    <Container flexDirection='column' minHeight='100vh'>\n      <Navbar />\n\n      <Box\n        width='100%'\n        flexDirection='column'\n        alignItems='center'\n        flexGrow='1'\n        backgroundColor='#E4E6E9'\n      >\n        {children}\n      </Box>\n\n      <Footer />\n    </Container>\n  );\n}\n"],
  "mappings": "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",
  "names": ["import_react", "Footer", "memo", "theme", "t", "useApp", "navlinks", "id", "title", "href", "routes", "about", "privacyPolicy", "root", "faq", "materials", "news", "map", "footer", "linkTextColor", "TextVariantEnum", "textBody2", "textSmall", "import_react", "import_react", "import_jsx_dev_runtime", "visibility", "setVisibility", "setVisibilityLogin", "t", "userContext", "useApp", "forgotPassword", "useFetcher", "emailRef", "useRef", "useEffect", "data", "fieldErrors", "email", "current", "focus", "status", "TextVariantEnum", "textHeading3", "textAlign", "textBody1medium", "width", "display", "justifyContent", "flexDirection", "gap", "language", "undefined", "textBody2", "routes", "privacyPolicy", "terms", "textDecoration", "cursor", "root", "import_react", "BoxContainer", "BoxForm", "PoliciesText", "import_jsx_dev_runtime", "visibility", "setVisibility", "setVisibilityForgotPassword", "t", "theme", "userContext", "useApp", "location", "useLocation", "login", "useFetcher", "useEffect", "data", "success", "BoxContainer", "TextVariantEnum", "textHeading3", "textAlign", "width", "BoxForm", "fieldErrors", "email", "language", "undefined", "password", "textBody2", "textBody2medium", "IconEnum", "google", "removeLoginSearch", "pathname", "search", "fb", "auth", "helpButtonColor", "routes", "register", "root", "PoliciesText", "privacyPolicy", "terms", "textDecoration", "cursor", "import_react", "import_jsx_dev_runtime", "ProgressBar", "percent", "import_react", "import_jsx_dev_runtime", "NavbarItem", "memo", "item", "handleCloseBar", "handleClickSearch", "theme", "useApp", "href", "search", "isActive", "icon", "navbar", "hoverColor", "defaultTextColor", "TextVariantEnum", "textBody2medium", "title", "IconEnum", "arrowRight", "BoxContainer", "TranslateBox", "import_jsx_dev_runtime", "visibility", "setVisibility", "visibilityLogin", "setVisibilityLogin", "matches", "useMatches", "indexMatches", "some", "m", "id", "isUserMatches", "includes", "userMatches", "resumeMatches", "vacancyMatches", "companyMatches", "responsesMatches", "searchVacancyMatches", "searchResumeMatches", "searchCompanyMatches", "userContext", "setUserContext", "theme", "t", "i18n", "useApp", "setLang", "language", "prevContext", "changeLanguage", "LanguageEnum", "TH", "EN", "setSearch", "search", "handleClickSearch", "useEffect", "homeLinks", "title", "href", "routes", "root", "isActive", "searchLinks", "vacancy", "resume", "company", "userLinks", "user", "responses", "visibleSelectionCreate", "setSelectionCreate", "useState", "variantCreate", "setVariantCreate", "loc", "useLocation", "BoxContainer", "isAuthenticated", "margin", "isEmailConfirm", "IconEnum", "verifed", "notVerifed", "TextVariantEnum", "textSmallmedium", "email", "progressInfo", "textBody2medium", "map", "item", "TranslateBox", "cursor", "defaultTextColor", "textBody2", "create", "pathname", "import_jsx_dev_runtime", "Navbar", "memo", "visibilityLogin", "setVisibilityLogin", "useState", "initialRender", "setInitialRender", "visibilityForgotPassword", "setVisibilityForgotPassword", "visibleMobileNavbar", "setVisibleMobileNavbar", "sticky", "setSticky", "isHomePage", "isSearchResume", "isSearchVacancy", "isSearchCompany", "useRouteChecks", "userContext", "setUserContext", "theme", "t", "i18n", "useApp", "setLang", "language", "prevContext", "changeLanguage", "LanguageEnum", "TH", "EN", "useEffect", "location", "useLocation", "navigate", "useNavigate", "urlParams", "URLSearchParams", "search", "loginParam", "get", "window", "has", "delete", "toString", "pathname", "handleOpenModal", "visibility", "set", "newUrl", "history", "pushState", "stickyNavbar", "searchHeight", "document", "getElementById", "windowHeight", "scrollY", "undefined", "offsetHeight", "addEventListener", "removeEventListener", "routes", "root", "cursor", "navbar", "textActiveLangColor", "TextVariantEnum", "textBody2", "textLinkColor", "user", "isAuthenticated", "avatar", "getImageUrl", "DEFAULT_USER_AVATAR", "svgColor", "import_jsx_dev_runtime", "Container", "styled", "Box", "withConfig", "displayName", "componentId", "theme", "backgroundColor", "CommonLayout", "children"]
}
