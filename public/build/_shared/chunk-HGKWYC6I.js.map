{
  "version": 3,
  "sources": ["../../../app/components/entities/ButtonCreate/index.tsx", "../../../app/components/entities/ModalSelectCreateForm/index.tsx", "../../../app/components/entities/ModalSelectCreateForm/styles.tsx"],
  "sourcesContent": ["import { Link, useLocation } from '@remix-run/react';\nimport routes from 'shared/routing/routes';\n\nimport Button from '~/components/common/Button';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\n\nexport default function ButtonCreate({\n  variant,\n  priority = 'secondary',\n  setSelectionCreate,\n  setVariantCreate,\n  fullwidth = false,\n}: {\n  variant: 'resume' | 'vacancy';\n  priority?: 'primary' | 'secondary';\n  setSelectionCreate?: (value: boolean) => void;\n  setVariantCreate?: (value: 'resume' | 'vacancy') => void;\n  fullwidth?: boolean;\n}) {\n  const { t, userContext } = useApp();\n  const loc = useLocation();\n\n  return (\n    <>\n      {variant === 'resume' &&\n        (userContext.user.isAuthenticated ? (\n          <>\n            {userContext.forms?.resume && (\n              <Button\n                priority={priority}\n                size='S'\n                fullwidth={fullwidth}\n                onClick={() => {\n                  setVariantCreate?.('resume');\n                  setSelectionCreate?.(true);\n                }}\n              >\n                <Text variant={TextVariantEnum.textBody2}> {t('user:create_resume')}</Text>\n              </Button>\n            )}\n\n            {!userContext.forms?.resume && (\n              <Link to={routes.user.resume.create}>\n                <Button priority={priority} size='S' fullwidth={fullwidth}>\n                  <Text variant={TextVariantEnum.textBody2}>{t('user:create_resume')}</Text>\n                </Button>\n              </Link>\n            )}\n          </>\n        ) : (\n          <Link to={`${loc.pathname}${loc.search ? `${loc.search}&login=true` : '?login=true'}`}>\n            <Button priority={priority} size='S' fullwidth={fullwidth}>\n              <Text variant={TextVariantEnum.textBody2}> {t('user:create_resume')}</Text>\n            </Button>\n          </Link>\n        ))}\n\n      {variant === 'vacancy' &&\n        (userContext.user.isAuthenticated ? (\n          <>\n            {userContext.forms?.vacancy && (\n              <Button\n                priority={priority}\n                size='S'\n                fullwidth={fullwidth}\n                onClick={() => {\n                  setVariantCreate?.('vacancy');\n                  setSelectionCreate?.(true);\n                }}\n              >\n                <Text variant={TextVariantEnum.textBody2}> {t('user:create_vacancy')}</Text>\n              </Button>\n            )}\n\n            {!userContext.forms?.vacancy && (\n              <Link to={routes.user.vacancy.create}>\n                <Button priority={priority} size='S' fullwidth={fullwidth}>\n                  <Text variant={TextVariantEnum.textBody2}>{t('user:create_vacancy')}</Text>\n                </Button>\n              </Link>\n            )}\n          </>\n        ) : (\n          <Link to={`${loc.pathname}${loc.search ? `${loc.search}&login=true` : '?login=true'}`}>\n            <Button priority={priority} size='S' fullwidth={fullwidth}>\n              <Text variant={TextVariantEnum.textBody2}> {t('user:create_vacancy')}</Text>\n            </Button>\n          </Link>\n        ))}\n    </>\n  );\n}\n", "import { Form } from '@remix-run/react';\n\nimport { Box } from '~/components/common/Box';\nimport Button from '~/components/common/Button';\nimport { Modal } from '~/components/common/Modal';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\n\nimport { BoxContainer, ButtonsControl, LabelRadio } from './styles';\n\nexport default function ModalSelectCreateForm({\n  visibility,\n  setVisibility,\n  variant,\n}: {\n  visibility: boolean;\n  setVisibility: (visibility: boolean) => void;\n  variant: 'resume' | 'vacancy';\n}) {\n  const { t } = useApp();\n\n  return (\n    <Modal visibility={visibility} setVisibility={setVisibility}>\n      <BoxContainer>\n        <Text variant={TextVariantEnum.textHeading3} style={{ textAlign: 'center' }}>\n          {t('user:choose_an_action')}\n        </Text>\n\n        {variant === 'resume' ? (\n          <Text variant={TextVariantEnum.textBody1medium} style={{ textAlign: 'center' }}>\n            {t('user:you_already_have_an_unfinished_resume_what_would_you_like_to_do_now')}\n          </Text>\n        ) : (\n          <Text variant={TextVariantEnum.textBody1medium} style={{ textAlign: 'center' }}>\n            {t('user:you_already_have_an_unfinished_vacancy_what_would_you_like_to_do_now')}\n          </Text>\n        )}\n\n        <ButtonsControl>\n          <Form method='POST' action='/actions/set-forms' style={{ width: '100%' }}>\n            <Box flexDirection='column' width='100%' gap='10px'>\n              <LabelRadio htmlFor='continue'>\n                <input\n                  name='selection'\n                  value='continue'\n                  type='radio'\n                  id='continue'\n                  defaultChecked\n                />\n                {variant === 'resume' ? (\n                  <Text variant={TextVariantEnum.textBody2}>\n                    {t('user:continue_filling_out_an_existing_resume')}\n                  </Text>\n                ) : (\n                  <Text variant={TextVariantEnum.textBody2}>\n                    {t('user:continue_filling_out_an_existing_vacancy')}\n                  </Text>\n                )}\n              </LabelRadio>\n              <LabelRadio htmlFor='delete'>\n                <input name='selection' value='delete' type='radio' id='delete' />\n                {variant === 'resume' ? (\n                  <Text variant={TextVariantEnum.textBody2}>{t('user:create_a_new_resume')}</Text>\n                ) : (\n                  <Text variant={TextVariantEnum.textBody2}>{t('user:create_a_new_vacancy')}</Text>\n                )}\n              </LabelRadio>\n              <Button\n                priority='primary'\n                type='submit'\n                fullwidth\n                onClick={() => setVisibility(false)}\n              >\n                <Text variant={TextVariantEnum.textBody2}>{t('common:confirm')}</Text>\n              </Button>\n              <input type='hidden' name='form' value={variant} />\n            </Box>\n          </Form>\n\n          <Button priority='secondary' onClick={() => setVisibility(false)} fullwidth>\n            <Text variant={TextVariantEnum.textBody2}>{t('common:cancel')}</Text>\n          </Button>\n        </ButtonsControl>\n      </BoxContainer>\n    </Modal>\n  );\n}\n", "import styled from 'styled-components';\n\nexport const BoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  gap: 24px;\n  width: 100%;\n  max-width: 100%;\n  @media (min-width: 768px) {\n    max-width: 388px;\n  }\n  @media (min-width: 1024px) {\n    gap: 32px;\n  }\n`;\n\nexport const ButtonsControl = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  gap: 16px;\n  @media (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const LabelRadio = styled.label`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 8px;\n  cursor: pointer;\n\n  input {\n    height: 16px;\n    width: 16px;\n    margin-bottom: 4px;\n  }\n`;\n"],
  "mappings": "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",
  "names": ["variant", "priority", "setSelectionCreate", "setVariantCreate", "fullwidth", "t", "userContext", "useApp", "loc", "useLocation", "user", "isAuthenticated", "forms", "resume", "TextVariantEnum", "textBody2", "routes", "create", "pathname", "search", "vacancy", "BoxContainer", "styled", "div", "withConfig", "displayName", "componentId", "ButtonsControl", "LabelRadio", "label", "import_jsx_dev_runtime", "visibility", "setVisibility", "variant", "t", "useApp", "TextVariantEnum", "textHeading3", "textAlign", "textBody1medium", "width", "textBody2"]
}
