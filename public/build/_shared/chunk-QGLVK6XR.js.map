{
  "version": 3,
  "sources": ["../../../app/components/entities/DataFIeld/index.tsx", "../../../app/components/entities/DataFIeld/styles.ts"],
  "sourcesContent": ["import { useLocation } from '@remix-run/react';\nimport type { ReactNode } from 'react';\nimport { memo, useEffect, useRef } from 'react';\n\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\n\nimport { BoxData, FieldWrapper } from './styles';\n\nexport const DataField = memo(\n  ({\n    label,\n    variant = 'default',\n    data,\n    children,\n    color,\n  }: {\n    label?: string;\n    variant?: 'default' | 'custom';\n    data?: string;\n    children?: ReactNode;\n    color?: string;\n  }): JSX.Element => {\n    const boxDataRef = useRef<HTMLDivElement>(null);\n    const location = useLocation();\n\n    useEffect(() => {\n      const { current } = boxDataRef;\n      if (current) {\n        if (current.scrollHeight > 44) {\n          current.style.borderRadius = `8px`;\n        } else {\n          current.style.borderRadius = `80px`;\n        }\n      }\n    }, [location]);\n\n    return (\n      <FieldWrapper>\n        {label && <Text variant={TextVariantEnum.textBody2}>{label}</Text>}\n        {variant === 'default' ? (\n          <BoxData ref={boxDataRef}>\n            <Text variant={TextVariantEnum.textBody2medium} color={color}>\n              {data || ''}\n            </Text>\n          </BoxData>\n        ) : (\n          children\n        )}\n      </FieldWrapper>\n    );\n  },\n);\n", "import { styled } from 'styled-components';\n\nexport const FieldWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  width: 100%;\n`;\n\nexport const BoxData = styled.div`\n  padding: 11px 16px 9px;\n  border-radius: 80px;\n  display: flex;\n  align-items: center;\n  min-height: 40px;\n  height: fit-content;\n  border: 1px solid ${({ theme }) => theme.user.borderColor};\n\n  @media (min-width: 768px) {\n    min-height: 44px;\n    padding: 10px 16px 8px;\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAEA,IAAAA,gBAAwC;;;ACAjC,IAAM,eAAe,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAO5B,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAOR,CAAC,EAAE,MAAM,MAAM,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ADuB9B;AA9BX,IAAMC,gBAAYC,oBACvB,CAAC;EACCC;EACAC,UAAU;EACVC;EACAC;EACAC;AAOF,MAAmB;AACjB,QAAMC,iBAAaC,sBAAuB,IAAI;AAC9C,QAAMC,WAAWC,YAAY;AAE7BC,+BAAU,MAAM;AACd,UAAM;MAAEC;IAAQ,IAAIL;AACpB,QAAIK,SAAS;AACX,UAAIA,QAAQC,eAAe,IAAI;AAC7BD,gBAAQE,MAAMC,eAAgB;MAChC,OAAO;AACLH,gBAAQE,MAAMC,eAAgB;MAChC;IACF;EACF,GAAG,CAACN,QAAQ,CAAC;AAEb,SACE,mDAAC,gBACEP;aAAS,mDAAC,QAAK,SAASc,gBAAgBC,WAAYf,mBAA3C;;;;WAAiD;IAC1DC,YAAY,YACX,mDAAC,WAAQ,KAAKI,YACZ,6DAAC,QAAK,SAASS,gBAAgBE,iBAAiB,OAC7Cd,kBAAQ,MADX;;;;WAEA,KAHF;;;;WAIA,IAEAC;OATJ;;;;SAWA;AAEJ,CACF;",
  "names": ["import_react", "DataField", "memo", "label", "variant", "data", "children", "color", "boxDataRef", "useRef", "location", "useLocation", "useEffect", "current", "scrollHeight", "style", "borderRadius", "TextVariantEnum", "textBody2", "textBody2medium"]
}
