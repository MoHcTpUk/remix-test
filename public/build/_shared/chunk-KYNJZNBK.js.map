{
  "version": 3,
  "sources": ["../../../app/components/common/Input/styles.ts"],
  "sourcesContent": ["import styled from 'styled-components';\n\nimport { FONT_SIZES_DESC, FONT_SIZES_MOB } from '../Text';\n\nexport const Wrapper = styled.div<{ disabled?: boolean }>`\n  display: flex;\n  flex-direction: column;\n  align-items: 'flex-start';\n  width: 100%;\n  position: relative;\n  opacity: ${({ disabled }) => disabled && '0.5'};\n`;\n\nexport const WrapperInner = styled.div<{ variant?: string }>`\n  display: flex;\n  width: 100%;\n  min-height: ${({ variant }) => variant === 'textarea' && '40px'};\n  height: ${({ variant }) => (variant === 'textarea' ? 'auto' : '40px')};\n  position: relative;\n  @media (min-width: 768px) {\n    height: ${({ variant }) => variant !== 'textarea' && '44px'};\n  }\n`;\n\nexport const InputComponent = styled.input<{\n  background?: string;\n  error?: boolean;\n  disabled?: boolean;\n}>`\n  cursor: ${({ disabled }) => disabled && 'auto'};\n  width: 100%;\n  height: 40px;\n  border: ${({ theme, error }) =>\n    error ? `2px solid ${theme.errorTextColor}` : `1px solid ${theme.inputs.borderColor}`};\n\n  background-color: transparent;\n  border-radius: 80px;\n  padding: 11px 16px;\n  font-size: ${FONT_SIZES_MOB.textBody2};\n  line-height: 18px;\n\n  &:focus::-webkit-textfield-decoration-container {\n    visibility: hidden;\n    pointer-events: none;\n    position: absolute;\n    border: 2px solid ${({ theme, disabled }) => !disabled && theme.inputs.borderFocusColor};\n  }\n\n  &:focus ~ .editPencil {\n    display: none;\n  }\n\n  @supports (not (-ms-ime-align: auto)) {\n    &:focus + .placeholder {\n      transform: translate(16px, -50px) scale(0.8);\n      transform-origin: center left;\n      z-index: 1;\n      padding: 0px 4px;\n      background: ${({ theme, background }) => background || theme.inputs.backgroundDefaultColor};\n      color: ${({ theme }) => theme.inputs.borderFocusColor};\n    }\n    &:not(:placeholder-shown) ~ .placeholder {\n      transform: translate(16px, -50px) scale(0.8);\n      transform-origin: center left;\n      z-index: 1;\n      padding: 0px 4px;\n      background: ${({ theme, background }) => background || theme.inputs.backgroundDefaultColor};\n    }\n\n    &:focus,\n    :active {\n      border: ${({ theme, disabled }) =>\n        !disabled\n          ? `2px solid ${theme.inputs.borderFocusColor}`\n          : `1px solid ${theme.inputs.borderColor}`};\n    }\n  }\n\n  @media (min-width: 768px) {\n    height: 44px;\n    padding: 10px 16px;\n    font-size: ${FONT_SIZES_DESC.textBody2};\n    line-height: 24px;\n\n    @supports (not (-ms-ime-align: auto)) {\n      &:focus + .placeholder {\n        transform: translate(16px, -50px) scale(0.8);\n        transform-origin: center left;\n        padding: 0px 6px;\n        color: ${({ theme }) => theme.inputs.borderFocusColor};\n      }\n      &:not(:placeholder-shown) ~ .placeholder {\n        transform: translate(16px, -50px) scale(0.8);\n        transform-origin: center left;\n        padding: 0px 6px;\n        background: ${({ theme, background }) => background || theme.inputs.backgroundDefaultColor};\n      }\n    }\n  }\n`;\n\nexport const TextareaComponent = styled.textarea<{ background?: string; variant?: string }>`\n  display: flex;\n  width: 100%;\n  min-height: 40px;\n  overflow: hidden;\n  border: ${({ theme }) => `1px solid ${theme.inputs.borderColor}`};\n  background-color: transparent;\n  border-radius: 80px;\n  padding: 8px 16px;\n  font-size: ${FONT_SIZES_MOB.textBody2};\n  line-height: 18px;\n  resize: none;\n\n  &:focus::-webkit-textfield-decoration-container {\n    visibility: hidden;\n    pointer-events: none;\n    position: absolute;\n    outline-color: ${({ theme }) => theme.inputs.borderFocusColor};\n    border: 2px solid ${({ theme }) => theme.inputs.borderFocusColor};\n  }\n  &:focus ~ .editPencil {\n    display: none;\n  }\n\n  @supports (not (-ms-ime-align: auto)) {\n    &:focus + .placeholder {\n      transform: translate(-10px, -50px) scale(0.8);\n      transform-origin: center left;\n      z-index: 1;\n      padding: 0px 4px;\n      background: ${({ theme, background }) => background || theme.inputs.backgroundDefaultColor};\n      color: ${({ theme }) => theme.inputs.borderFocusColor};\n    }\n    &:not(:placeholder-shown) ~ .placeholder {\n      transform: translate(-10px, -50px) scale(0.8);\n      transform-origin: center left;\n      z-index: 1;\n      padding: 0px 4px;\n      background: ${({ theme, background }) => background || theme.inputs.backgroundDefaultColor};\n    }\n\n    &:focus,\n    :active {\n      outline-color: ${({ theme }) => theme.inputs.borderFocusColor};\n      border: 2px solid ${({ theme, disabled }) => !disabled && theme.inputs.borderFocusColor};\n    }\n  }\n\n  @media (min-width: 768px) {\n    min-height: 44px;\n    font-size: ${FONT_SIZES_DESC.textBody2};\n    line-height: 24px;\n    border-radius: 80px;\n    padding: 8px 16px;\n\n    @supports (not (-ms-ime-align: auto)) {\n      &:focus + .placeholder {\n        transform: translate(-9px, -50px) scale(0.8);\n        transform-origin: center left;\n        padding: 0px 6px;\n      }\n      &:not(:placeholder-shown) ~ .placeholder {\n        transform: translate(-9px, -50px) scale(0.8);\n        transform-origin: center left;\n        z-index: 1;\n        padding: 0px 6px;\n      }\n    }\n  }\n`;\n\nexport const PlaceHolder = styled.label<{ error?: boolean; variant?: string }>`\n  display: block;\n  line-height: 0;\n  color: ${({ theme, error }) => (error ? theme.errorTextColor : theme.defaultTextColor)};\n  position: absolute;\n  font-size: ${FONT_SIZES_MOB.textBody2};\n  line-height: 18px;\n  top: 40px;\n  left: ${({ variant }) => (variant === 'textarea' ? '26px' : null)};\n\n  @supports (not (-ms-ime-align: auto)) {\n    transform: translate(16px, -28px);\n    transition: all 0.2s cubic-bezier(0.84, -0.03, 0.49, 0.23);\n  }\n\n  @media (min-width: 768px) {\n    top: 39px;\n    font-size: ${FONT_SIZES_DESC.textBody2};\n    line-height: 24px;\n  }\n`;\n\nexport const BoxErrors = styled.div<{ isText?: boolean; isDropdownOpen?: boolean }>`\n  position: absolute;\n  left: 16px;\n  top: 38px;\n  display: ${({ isDropdownOpen }) => isDropdownOpen && 'none'};\n\n  @media (min-width: 768px) {\n    top: 42px;\n  }\n`;\n\nexport const ButtonClear = styled.button<{ disabled?: boolean }>`\n  cursor: ${({ disabled }) => (disabled ? 'auto' : 'pointer')};\n  position: absolute;\n  top: 8px;\n  right: 10px;\n  width: 24px;\n  height: 24px;\n  background-color: ${({ theme }) => theme.inputs.backgroundDefaultColor};\n\n  &:hover,\n  :focus,\n  :active {\n    background-color: ${({ theme }) => theme.inputs.backgroundDefaultColor};\n  }\n  @media (min-width: 768px) {\n    top: 10px;\n    right: 12px;\n  }\n`;\nexport const TextareaIcon = styled.div`\n  position: absolute;\n  top: 8px;\n  left: 10px;\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n  @media (min-width: 768px) {\n    top: 10px;\n    left: 12px;\n  }\n`;\n\nexport const AttentionErrorIcon = styled.div`\n  position: absolute;\n  top: 8px;\n  right: 10px;\n  svg {\n    width: 24px;\n    height: 24px;\n  }\n  @media (min-width: 768px) {\n    top: 10px;\n    right: 12px;\n  }\n`;\n"],
  "mappings": ";;;;;;;AAIO,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAMjB,CAAC,EAAE,SAAS,MAAM,YAAY;AAAA;AAGpC,IAAM,eAAe,sCAAO;AAAA;AAAA;AAAA,gBAGnB,CAAC,EAAE,QAAQ,MAAM,YAAY,cAAc;AAAA,YAC/C,CAAC,EAAE,QAAQ,MAAO,YAAY,aAAa,SAAS;AAAA;AAAA;AAAA,cAGlD,CAAC,EAAE,QAAQ,MAAM,YAAY,cAAc;AAAA;AAAA;AAIlD,IAAM,iBAAiB,sCAAO;AAAA,YAKzB,CAAC,EAAE,SAAS,MAAM,YAAY;AAAA;AAAA;AAAA,YAG9B,CAAC,EAAE,OAAO,MAAM,MACxB,QAAQ,aAAa,MAAM,mBAAmB,aAAa,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,eAK7D,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAON,CAAC,EAAE,OAAO,SAAS,MAAM,CAAC,YAAY,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAavD,CAAC,EAAE,OAAO,WAAW,MAAM,cAAc,MAAM,OAAO;AAAA,eAC3D,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOvB,CAAC,EAAE,OAAO,WAAW,MAAM,cAAc,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,gBAK1D,CAAC,EAAE,OAAO,SAAS,MAC3B,CAAC,WACG,aAAa,MAAM,OAAO,qBAC1B,aAAa,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAOrB,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAQhB,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAMvB,CAAC,EAAE,OAAO,WAAW,MAAM,cAAc,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAMrE,IAAM,oBAAoB,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA,YAK5B,CAAC,EAAE,MAAM,MAAM,aAAa,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA,eAItC,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAQT,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA,wBACzB,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAYhC,CAAC,EAAE,OAAO,WAAW,MAAM,cAAc,MAAM,OAAO;AAAA,eAC3D,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOvB,CAAC,EAAE,OAAO,WAAW,MAAM,cAAc,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKnD,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA,0BACzB,CAAC,EAAE,OAAO,SAAS,MAAM,CAAC,YAAY,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAM5D,gBAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqB1B,IAAM,cAAc,sCAAO;AAAA;AAAA;AAAA,WAGvB,CAAC,EAAE,OAAO,MAAM,MAAO,QAAQ,MAAM,iBAAiB,MAAM;AAAA;AAAA,eAExD,eAAe;AAAA;AAAA;AAAA,UAGpB,CAAC,EAAE,QAAQ,MAAO,YAAY,aAAa,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAS7C,gBAAgB;AAAA;AAAA;AAAA;AAK1B,IAAM,YAAY,sCAAO;AAAA;AAAA;AAAA;AAAA,aAInB,CAAC,EAAE,eAAe,MAAM,kBAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAOhD,IAAM,cAAc,sCAAO;AAAA,YACtB,CAAC,EAAE,SAAS,MAAO,WAAW,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAM7B,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA,wBAK1B,CAAC,EAAE,MAAM,MAAM,MAAM,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAO7C,IAAM,eAAe,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAc5B,IAAM,qBAAqB,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;",
  "names": []
}
