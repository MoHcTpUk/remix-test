{
  "version": 3,
  "sources": ["../../../app/components/ui/RouteLayout/index.tsx", "../../../app/components/entities/Sidebar/index.tsx", "../../../app/components/entities/Sidebar/styles.ts", "../../../app/components/ui/RouteLayout/styles.ts"],
  "sourcesContent": ["import { Outlet } from '@remix-run/react';\n\nimport { Box } from '~/components/common/Box';\nimport { Heading } from '~/components/common/Heading';\nimport { Sidebar } from '~/components/entities/Sidebar';\nimport { CommonLayout } from '~/components/layouts/CommonLayout';\nimport { useRouteChecks } from '~/hooks';\n\nimport { BoxContainer, Wrapper } from './styles';\n\ntype Props = {\n  variant: 'user' | 'fixedWidth';\n  noHeading?: boolean;\n};\n\nexport function RouteLayout({ variant, noHeading = false }: Props) {\n  const { isUserResponses } = useRouteChecks();\n\n  return (\n    <CommonLayout>\n      <Wrapper>\n        <BoxContainer variant={variant} isUserResponses={isUserResponses}>\n          {!noHeading && <Heading />}\n          <Box flexDirection={variant === 'user' ? 'row' : 'column'} gap='24px'>\n            {variant === 'user' && <Sidebar />}\n            <Outlet />\n          </Box>\n        </BoxContainer>\n      </Wrapper>\n    </CommonLayout>\n  );\n}\n", "import { useMatches } from '@remix-run/react';\nimport { Fragment, memo } from 'react';\nimport routes from 'shared/routing/routes';\n\nimport { BoxCard } from '~/components/common/Card';\nimport { useApp } from '~/hooks';\nimport { IconEnum } from '~/types/enums/iconEnum';\nimport { VariantCardEnum } from '~/types/enums/variantCardEnum';\n\nimport type { NavbarLink } from '../NavLink';\nimport { NavbarItem } from '../NavLink';\nimport { Wrapper } from './styles';\n\nexport const Sidebar = memo((): JSX.Element => {\n  const { t } = useApp();\n\n  const matches = useMatches();\n  const userMatches = matches.some((m) => m.id.includes('routes/user/myprofile'));\n  const resumeMatches = matches.some((m) => m.id.includes('routes/user/resume'));\n  const vacancyMatches = matches.some((m) => m.id.includes('routes/user/vacancy'));\n  const companyMatches = matches.some((m) => m.id.includes('routes/user/company'));\n  const responsesMatches = matches.some((m) => m.id === 'routes/user/responses');\n\n  const userLinks: NavbarLink[] = [\n    {\n      id: 1,\n      title: t('user:my_profile'),\n      href: routes.user.root,\n      isActive: userMatches,\n      icon: IconEnum.user,\n    },\n    {\n      id: 2,\n      title: t('user:my_resumes'),\n      href: routes.user.resume.root,\n      isActive: resumeMatches,\n      icon: IconEnum.noteEdit,\n    },\n    {\n      id: 3,\n      title: t('user:my_vacancies'),\n      href: routes.user.vacancy.root,\n      isActive: vacancyMatches,\n      icon: IconEnum.noteSearch,\n    },\n    {\n      id: 4,\n      title: t('user:companies'),\n      href: routes.user.company.root,\n      isActive: companyMatches,\n      icon: IconEnum.navi,\n    },\n    {\n      id: 5,\n      title: t('user:responses'),\n      href: routes.user.responses.root,\n      isActive: responsesMatches,\n      icon: IconEnum.chat,\n    },\n  ];\n  return (\n    <Wrapper>\n      <BoxCard variant={VariantCardEnum.sidebar}>\n        {userLinks.map((item) => (\n          <Fragment key={item.id}>\n            <NavbarItem item={item} />\n          </Fragment>\n        ))}\n      </BoxCard>\n    </Wrapper>\n  );\n});\n", "import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: none;\n\n  @media (min-width: 1280px) {\n    display: block;\n    min-width: 282px;\n    min-height: calc(100vh - 419px);\n    background-color: ${({ theme }) => theme.user.backgroundCardColor};\n    border-radius: 12px;\n    gap: 8px;\n  }\n`;\n", "import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  background-color: ${({ theme }) => theme.user.backgroundPageColor};\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const BoxContainer = styled.div<{\n  variant: 'user' | 'fixedWidth';\n  isUserResponses: boolean;\n}>`\n  display: flex;\n  flex-direction: column;\n  padding: 80px 16px 16px;\n\n  gap: 16px;\n  background-color: ${({ theme }) => theme.user.backgroundPageColor};\n  width: 100%;\n\n  @media (min-width: 768px) {\n    max-width: ${({ variant, isUserResponses }) =>\n      !isUserResponses && variant === 'user' && '506px'};\n    padding: ${({ variant }) => (variant === 'user' ? '96px 0 16px' : '96px 40px 16px')};\n    padding: ${({ variant, isUserResponses }) => {\n      if (variant === 'user' && !isUserResponses) return '96px 0 16px';\n      // if (variant === 'user' && isUserResponses) return '96px 24px 16px';\n      return '96px 40px 16px';\n    }};\n  }\n\n  @media (min-width: 1024px) {\n    max-width: ${({ variant, isUserResponses }) => {\n      if (variant === 'user' && !isUserResponses) return '606px';\n      // if (variant === 'user' && isUserResponses) return '100%';\n      return '816px';\n    }};\n    padding: ${({ isUserResponses }) => (!isUserResponses ? '104px 0 24px' : '104px 24px')};\n    gap: 24px;\n  }\n\n  @media (min-width: 1280px) {\n    max-width: ${({ isUserResponses }) => (!isUserResponses ? '996px' : '100%')};\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACAA;AACA,IAAAA,gBAA+B;;;ACCxB,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAON,CAAC,EAAE,MAAM,MAAM,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;;;ADwDtC;AApDL,IAAMC,cAAUC,oBAAK,MAAmB;AAC7C,QAAM;IAAEC;EAAE,IAAIC,OAAO;AAErB,QAAMC,UAAUC,WAAW;AAC3B,QAAMC,cAAcF,QAAQG,KAAMC,OAAMA,EAAEC,GAAGC,SAAS,uBAAuB,CAAC;AAC9E,QAAMC,gBAAgBP,QAAQG,KAAMC,OAAMA,EAAEC,GAAGC,SAAS,oBAAoB,CAAC;AAC7E,QAAME,iBAAiBR,QAAQG,KAAMC,OAAMA,EAAEC,GAAGC,SAAS,qBAAqB,CAAC;AAC/E,QAAMG,iBAAiBT,QAAQG,KAAMC,OAAMA,EAAEC,GAAGC,SAAS,qBAAqB,CAAC;AAC/E,QAAMI,mBAAmBV,QAAQG,KAAMC,OAAMA,EAAEC,OAAO,uBAAuB;AAE7E,QAAMM,YAA0B,CAC9B;IACEN,IAAI;IACJO,OAAOd,EAAE,iBAAiB;IAC1Be,MAAMC,eAAOC,KAAKC;IAClBC,UAAUf;IACVgB,MAAMC,SAASJ;EACjB,GACA;IACEV,IAAI;IACJO,OAAOd,EAAE,iBAAiB;IAC1Be,MAAMC,eAAOC,KAAKK,OAAOJ;IACzBC,UAAUV;IACVW,MAAMC,SAASE;EACjB,GACA;IACEhB,IAAI;IACJO,OAAOd,EAAE,mBAAmB;IAC5Be,MAAMC,eAAOC,KAAKO,QAAQN;IAC1BC,UAAUT;IACVU,MAAMC,SAASI;EACjB,GACA;IACElB,IAAI;IACJO,OAAOd,EAAE,gBAAgB;IACzBe,MAAMC,eAAOC,KAAKS,QAAQR;IAC1BC,UAAUR;IACVS,MAAMC,SAASM;EACjB,GACA;IACEpB,IAAI;IACJO,OAAOd,EAAE,gBAAgB;IACzBe,MAAMC,eAAOC,KAAKW,UAAUV;IAC5BC,UAAUP;IACVQ,MAAMC,SAASQ;EACjB,CAAC;AAEH,SACE,mDAAC,WACC,6DAAC,WAAQ,SAASC,gBAAgBC,SAC/BlB,oBAAUmB,IAAKC,UACd,mDAAC,0BACC,6DAAC,cAAW,QAAZ;;;;SAAuB,KADVA,KAAK1B,IAApB;;;;SAEA,CACD,KALH;;;;SAMA,KAPF;;;;SAQA;AAEJ,CAAC;;;AErEM,IAAM2B,WAAU,sCAAO;AAAA;AAAA,sBAER,CAAC,EAAE,MAAM,MAAM,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAMzC,IAAM,eAAe,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBASb,CAAC,EAAE,MAAM,MAAM,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA,iBAI/B,CAAC,EAAE,SAAS,gBAAgB,MACvC,CAAC,mBAAmB,YAAY,UAAU;AAAA,eACjC,CAAC,EAAE,QAAQ,MAAO,YAAY,SAAS,gBAAgB;AAAA,eACvD,CAAC,EAAE,SAAS,gBAAgB,MAAM;AAC3C,MAAI,YAAY,UAAU,CAAC;AAAiB,WAAO;AAEnD,SAAO;AACT;AAAA;AAAA;AAAA;AAAA,iBAIa,CAAC,EAAE,SAAS,gBAAgB,MAAM;AAC7C,MAAI,YAAY,UAAU,CAAC;AAAiB,WAAO;AAEnD,SAAO;AACT;AAAA,eACW,CAAC,EAAE,gBAAgB,MAAO,CAAC,kBAAkB,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAK5D,CAAC,EAAE,gBAAgB,MAAO,CAAC,kBAAkB,UAAU;AAAA;AAAA;;;AHtB/C,IAAAC,0BAAA;AAPlB,SAASC,YAAY;EAAEC;EAASC,YAAY;AAAa,GAAG;AACjE,QAAM;IAAEC;EAAgB,IAAIC,eAAe;AAE3C,SACE,oDAAC,gBACC,8DAACC,UAAA,EACC,8DAAC,gBAAa,SAAkB,iBAC7B;KAACH,aAAa,oDAAC,aAAD;;;;WAAQ;IACvB,oDAAC,OAAI,eAAeD,YAAY,SAAS,QAAQ,UAAU,KAAI,QAC5DA;kBAAY,UAAU,oDAAC,aAAD;;;;aAAQ;MAC/B,oDAAC,YAAD;;;;aAAO;SAFT;;;;WAGA;OALF;;;;SAMA,KAPF;;;;SAQA,KATF;;;;SAUA;AAEJ;",
  "names": ["import_react", "Sidebar", "memo", "t", "useApp", "matches", "useMatches", "userMatches", "some", "m", "id", "includes", "resumeMatches", "vacancyMatches", "companyMatches", "responsesMatches", "userLinks", "title", "href", "routes", "user", "root", "isActive", "icon", "IconEnum", "resume", "noteEdit", "vacancy", "noteSearch", "company", "navi", "responses", "chat", "VariantCardEnum", "sidebar", "map", "item", "Wrapper", "import_jsx_dev_runtime", "RouteLayout", "variant", "noHeading", "isUserResponses", "useRouteChecks", "Wrapper"]
}
