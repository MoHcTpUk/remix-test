{
  "version": 3,
  "sources": ["../../../app/types/enums/entityVariantEnum.ts", "../../../app/types/enums/pageVariantEnum.ts", "../../../app/types/enums/responseCardVariantEnum.ts", "../../../app/types/enums/sizeCardVariantEnum.ts", "../../../app/components/ui/Card/BoxHeading/styles.ts", "../../../app/components/ui/Card/BoxHeading/index.tsx", "../../../app/components/ui/Card/HeadingInformation/styles.ts", "../../../app/components/ui/Card/HeadingInformation/index.tsx", "../../../app/components/ui/DataBox/styles.ts", "../../../app/components/ui/DataBox/index.tsx"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/no-redeclare */\nimport type { ValueOf } from 'shared/utils';\n\nexport const EntityVariantEnum = {\n  resume: 'resume',\n  vacancy: 'vacancy',\n  company: 'company',\n} as const;\n\nexport type EntityVariantEnum = ValueOf<typeof EntityVariantEnum>;\n", "/* eslint-disable @typescript-eslint/no-redeclare */\nimport type { ValueOf } from 'shared/utils';\n\nexport const PageVariantEnum = {\n  user: 'user',\n  search: 'search',\n  response: 'response',\n} as const;\n\nexport type PageVariantEnum = ValueOf<typeof PageVariantEnum>;\n", "/* eslint-disable @typescript-eslint/no-redeclare */\nimport type { ValueOf } from 'shared/utils';\n\nexport const ResponseCardVariantEnum = {\n  main: 'main',\n  inner: 'inner',\n  heading: 'heading',\n} as const;\n\nexport type ResponseCardVariantEnum = ValueOf<typeof ResponseCardVariantEnum>;\n", "/* eslint-disable @typescript-eslint/no-redeclare */\nimport type { ValueOf } from 'shared/utils';\n\nexport const SizeCardVariantEnum = {\n  full: 'full',\n  part: 'part',\n} as const;\n\nexport type SizeCardVariantEnum = ValueOf<typeof SizeCardVariantEnum>;\n", "import styled from 'styled-components';\n\nimport type { EntityVariantEnum } from '~/types/enums/entityVariantEnum';\nimport { PageVariantEnum } from '~/types/enums/pageVariantEnum';\nimport { ResponseCardVariantEnum } from '~/types/enums/responseCardVariantEnum';\nimport { SizeCardVariantEnum } from '~/types/enums/sizeCardVariantEnum';\n\nexport const Wrapper = styled.div<{\n  variant?: EntityVariantEnum;\n  className?: string;\n  pageVariant?: PageVariantEnum;\n  sizeVariant?: SizeCardVariantEnum;\n  variantResponseCard?: ResponseCardVariantEnum;\n}>`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n  align-items: flex-start;\n  padding-bottom: ${({ pageVariant, variantResponseCard }) =>\n    (pageVariant !== PageVariantEnum.response ||\n      variantResponseCard === ResponseCardVariantEnum.main) &&\n    '16px'};\n  border-bottom: ${({ theme, variant, sizeVariant }) => {\n    if (sizeVariant === SizeCardVariantEnum.full) return `1px solid ${theme.user.borderColor}`;\n    return 'none';\n  }};\n  width: 100%;\n  img {\n    border-radius: 50%;\n    width: 64px;\n    height: 64px;\n    object-fit: cover;\n  }\n\n  @media (min-width: 768px) {\n    img {\n      width: ${({ className, sizeVariant }) => sizeVariant === SizeCardVariantEnum.full && '104px'};\n      height: ${({ className, sizeVariant }) =>\n        sizeVariant === SizeCardVariantEnum.full && '104px'};\n    }\n  }\n`;\n", "import type { ReactNode } from 'react';\n\nimport type { EntityVariantEnum } from '~/types/enums/entityVariantEnum';\nimport type { PageVariantEnum } from '~/types/enums/pageVariantEnum';\nimport type { ResponseCardVariantEnum } from '~/types/enums/responseCardVariantEnum';\nimport type { SizeCardVariantEnum } from '~/types/enums/sizeCardVariantEnum';\n\nimport { Wrapper } from './styles';\n\ntype Props = {\n  variant?: EntityVariantEnum;\n  pageVariant?: PageVariantEnum;\n  sizeVariant?: SizeCardVariantEnum;\n  children: ReactNode;\n  className?: string;\n  variantResponseCard?: ResponseCardVariantEnum;\n};\n\nexport function BoxHeading({\n  children,\n  variant,\n  pageVariant,\n  className,\n  sizeVariant,\n  variantResponseCard,\n}: Props) {\n  return (\n    <Wrapper\n      variant={variant}\n      className={className}\n      pageVariant={pageVariant}\n      sizeVariant={sizeVariant}\n      variantResponseCard={variantResponseCard}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n", "import styled from 'styled-components';\n\nimport { FONT_SIZES_DESC, LINE_HEIGHTS_DESC } from '~/components/common/Text';\nimport { EntityVariantEnum } from '~/types/enums/entityVariantEnum';\nimport type { ResponseCardVariantEnum } from '~/types/enums/responseCardVariantEnum';\n\nexport const Wrapper = styled.div<{\n  variant?: EntityVariantEnum;\n  variantResponseCard?: ResponseCardVariantEnum;\n}>`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n  gap: 4px;\n  overflow-x: ${({ variant }) => variant === EntityVariantEnum.company && 'hidden'};\n\n  @media (min-width: 768px) {\n    gap: 8px;\n    .title {\n      font-size: ${FONT_SIZES_DESC.textHeading3};\n      line-height: ${LINE_HEIGHTS_DESC.textHeading3};\n    }\n  }\n`;\n", "import type { ReactNode } from 'react';\n\nimport type { EntityVariantEnum } from '~/types/enums/entityVariantEnum';\nimport type { ResponseCardVariantEnum } from '~/types/enums/responseCardVariantEnum';\n\nimport { Wrapper } from './styles';\n\ntype Props = {\n  variant?: EntityVariantEnum;\n  variantResponseCard?: ResponseCardVariantEnum;\n  children: ReactNode;\n};\n\nexport function HeadingInformation({ children, variant, variantResponseCard }: Props) {\n  return (\n    <Wrapper variant={variant} variantResponseCard={variantResponseCard}>\n      {children}\n    </Wrapper>\n  );\n}\n", "import styled from 'styled-components';\n\nimport { EntityVariantEnum } from '~/types/enums/entityVariantEnum';\nimport type { PageVariantEnum } from '~/types/enums/pageVariantEnum';\nimport { SizeCardVariantEnum } from '~/types/enums/sizeCardVariantEnum';\n\nexport const Wrapper = styled.div<{\n  variant?: EntityVariantEnum | SizeCardVariantEnum;\n  borderBottom?: boolean;\n  borderTop?: boolean;\n  padding?: string;\n  pageVariant?: PageVariantEnum;\n  variantSize?: SizeCardVariantEnum;\n}>`\n  display: flex;\n  flex-direction: row;\n  gap: 16px;\n  padding: ${({ variant, padding, variantSize }) => {\n    if (padding) return padding;\n    if (variantSize === SizeCardVariantEnum.full) return '4px 0 12px';\n    if (variant === EntityVariantEnum.company) return '0';\n    if (variant === EntityVariantEnum.vacancy || EntityVariantEnum.resume) return '16px 0';\n    return '16px 0 12px';\n  }};\n  border-bottom: ${({ theme, borderBottom }) =>\n    borderBottom && `1px solid ${theme.user.borderColor}`};\n  border-top: ${({ theme, borderTop }) => borderTop && `1px solid ${theme.user.borderColor}`};\n  @media (min-width: 768px) {\n    gap: 32px;\n  }\n`;\n", "import type { ReactNode } from 'react';\nimport type { CSSProperties } from 'styled-components';\n\nimport type { EntityVariantEnum } from '~/types/enums/entityVariantEnum';\nimport type { PageVariantEnum } from '~/types/enums/pageVariantEnum';\nimport type { SizeCardVariantEnum } from '~/types/enums/sizeCardVariantEnum';\n\nimport { Wrapper } from './styles';\n\ntype Props = {\n  variant?: EntityVariantEnum;\n  variantSize?: SizeCardVariantEnum;\n  pageVariant?: PageVariantEnum;\n  children: ReactNode;\n  borderBottom?: boolean;\n  borderTop?: boolean;\n  padding?: string;\n  style?: CSSProperties;\n};\n\nexport function DataBox({\n  children,\n  variant,\n  borderBottom,\n  borderTop,\n  padding,\n  pageVariant,\n  variantSize,\n  style,\n}: Props) {\n  return (\n    <Wrapper\n      borderBottom={borderBottom}\n      borderTop={borderTop}\n      variant={variant}\n      padding={padding}\n      pageVariant={pageVariant}\n      variantSize={variantSize}\n      style={style}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;AAGO,IAAM,oBAAoB;AAAA,EAC/B,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,SAAS;AACX;;;ACJO,IAAM,kBAAkB;AAAA,EAC7B,MAAM;AAAA,EACN,QAAQ;AAAA,EACR,UAAU;AACZ;;;ACJO,IAAM,0BAA0B;AAAA,EACrC,MAAM;AAAA,EACN,OAAO;AAAA,EACP,SAAS;AACX;;;ACJO,IAAM,sBAAsB;AAAA,EACjC,MAAM;AAAA,EACN,MAAM;AACR;;;ACCO,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWV,CAAC,EAAE,aAAa,oBAAoB,OACnD,gBAAgB,gBAAgB,YAC/B,wBAAwB,wBAAwB,SAClD;AAAA,mBACe,CAAC,EAAE,OAAO,SAAS,YAAY,MAAM;AACpD,MAAI,gBAAgB,oBAAoB;AAAM,WAAO,aAAa,MAAM,KAAK;AAC7E,SAAO;AACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAWa,CAAC,EAAE,WAAW,YAAY,MAAM,gBAAgB,oBAAoB,QAAQ;AAAA,gBAC3E,CAAC,EAAE,WAAW,YAAY,MAClC,gBAAgB,oBAAoB,QAAQ;AAAA;AAAA;AAAA;;;ACXhD;AATG,SAASA,WAAW;EACzBC;EACAC;EACAC;EACAC;EACAC;EACAC;AACK,GAAG;AACR,SACE,mDAAC,WACC,SACA,WACA,aACA,aACA,qBAECL,YAPH;;;;SAQA;AAEJ;;;AC/BO,IAAMM,WAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBASd,CAAC,EAAE,QAAQ,MAAM,YAAY,kBAAkB,WAAW;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKvD,gBAAgB;AAAA,qBACd,kBAAkB;AAAA;AAAA;AAAA;;;ACNnC,IAAAC,0BAAA;AAFG,SAASC,mBAAmB;EAAEC;EAAUC;EAASC;AAA2B,GAAG;AACpF,SACE,oDAACC,UAAA,EAAQ,SAAkB,qBACxBH,YADH;;;;SAEA;AAEJ;;;ACbO,IAAMI,WAAU,sCAAO;AAAA;AAAA;AAAA;AAAA,aAWjB,CAAC,EAAE,SAAS,SAAS,YAAY,MAAM;AAChD,MAAI;AAAS,WAAO;AACpB,MAAI,gBAAgB,oBAAoB;AAAM,WAAO;AACrD,MAAI,YAAY,kBAAkB;AAAS,WAAO;AAClD,MAAI,YAAY,kBAAkB,WAAW,kBAAkB;AAAQ,WAAO;AAC9E,SAAO;AACT;AAAA,mBACiB,CAAC,EAAE,OAAO,aAAa,MACtC,gBAAgB,aAAa,MAAM,KAAK;AAAA,gBAC5B,CAAC,EAAE,OAAO,UAAU,MAAM,aAAa,aAAa,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;;;ACK3E,IAAAC,0BAAA;AAXG,SAASC,QAAQ;EACtBC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;AACK,GAAG;AACR,SACE,oDAACC,UAAA,EACC,cACA,WACA,SACA,SACA,aACA,aACA,OAECR,YATH;;;;SAUA;AAEJ;",
  "names": ["BoxHeading", "children", "variant", "pageVariant", "className", "sizeVariant", "variantResponseCard", "Wrapper", "import_jsx_dev_runtime", "HeadingInformation", "children", "variant", "variantResponseCard", "Wrapper", "Wrapper", "import_jsx_dev_runtime", "DataBox", "children", "variant", "borderBottom", "borderTop", "padding", "pageVariant", "variantSize", "style", "Wrapper"]
}
