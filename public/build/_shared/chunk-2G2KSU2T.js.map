{
  "version": 3,
  "sources": ["../../../app/routes/materials/news.tsx", "../../../app/components/pages/Materials/News/index.tsx", "../../../app/components/pages/Materials/News/styles.ts"],
  "sourcesContent": ["import type { LoaderArgs } from '@remix-run/cloudflare';\nimport { json } from '@remix-run/cloudflare';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { Materials } from 'shared/client/Materials';\nimport { styled } from 'styled-components';\n\nimport Button from '~/components/common/Button';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { NewsComponent } from '~/components/pages/Materials/News';\nimport { useApp } from '~/hooks';\n\nexport const BoxPagination = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const loader = async ({ request, context }: LoaderArgs) => {\n  const clientNews = new Materials();\n  const url = new URL(request.url);\n  const limit = url.searchParams.get('limit');\n\n  const [news] = await Promise.all([\n    await clientNews.newsList({\n      limit: limit ? +limit : 12,\n    }),\n  ]);\n\n  return json({ news, limit });\n};\n\nexport default function Index() {\n  const data = useLoaderData<typeof loader>();\n  const { t } = useApp();\n\n  const news = data.news.data.data;\n  const newsLimit = +data.limit! || 12;\n\n  return (\n    <>\n      <NewsComponent news={news} />\n      {/* when news will be more then 7\n      {data?.news?.data?.hasMore && ( */}\n      <Form method='GET' preventScrollReset>\n        <BoxPagination>\n          <Button priority='secondary' name='limit' type='submit' value={newsLimit + 12}>\n            <Text variant={TextVariantEnum.textBody2}>{t('user:show_more')}</Text>\n          </Button>\n        </BoxPagination>\n      </Form>\n      {/* )} */}\n    </>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { motion } from 'framer-motion';\nimport { memo } from 'react';\nimport type { EntityMaterial } from 'shared/client/data-contracts';\nimport { lng } from 'shared/utils';\n\nimport { Box } from '~/components/common/Box';\nimport { BoxCard } from '~/components/common/Card';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport type { ISlide } from '~/components/entities/Slider';\nimport { useApp, useScreenWidth } from '~/hooks';\nimport type { LanguageEnum } from '~/types/enums/languageEnum';\nimport { VariantCardEnum } from '~/types/enums/variantCardEnum';\nimport { getImageUrl } from '~/utils/helpers.client';\n\nimport { CardContent, Image, Wrapper } from './styles';\n\nfunction mapMaterialsToViewModel(material: EntityMaterial, language: LanguageEnum): ISlide {\n  return {\n    id: material.id,\n    title: lng(material.en?.title, material.th?.title, language),\n    shorttext: lng(material.en?.text, material.th?.text, language),\n    image: material.image,\n  } as ISlide;\n}\n\nexport const NewsComponent = memo(({ news }: { news?: EntityMaterial[] | null }): JSX.Element => {\n  const widthScreen = useScreenWidth();\n  const { theme, userContext } = useApp();\n  const newsItems = news?.map((item) => mapMaterialsToViewModel(item, userContext.language));\n\n  return (\n    <Box\n      flexDirection='column'\n      width='100%'\n      gap={widthScreen > 1024 ? '24px' : '16px'}\n      as={motion.div}\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n    >\n      {newsItems?.map((newsItem) => (\n        <BoxCard key={newsItem?.id} variant={VariantCardEnum.materials}>\n          <Link to={newsItem?.id || '#'}>\n            <Wrapper>\n              <Image>\n                <img\n                  src={\n                    newsItem?.image\n                      ? getImageUrl(newsItem?.image)\n                      : '/images/user/squareAvatarDefault.png'\n                  }\n                  alt='news card'\n                />\n              </Image>\n              <CardContent>\n                <Text className='cardTitle' variant={TextVariantEnum.textHeading3}>\n                  {newsItem.title}\n                </Text>\n                <Text\n                  className='cardText'\n                  variant={TextVariantEnum.textBody2}\n                  color={theme.mainPage.titleColor}\n                >\n                  {newsItem.shorttext}\n                </Text>\n              </CardContent>\n            </Wrapper>\n          </Link>\n        </BoxCard>\n      ))}\n    </Box>\n  );\n});\n", "import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n\nexport const Image = styled.div`\n  background: ${({ theme }) => theme.\u0441ards.imageBackground};\n  min-width: 100%;\n  height: 100%;\n  display: flex;\n  border-radius: 4px;\n\n  img {\n    width: 100%;\n    height: 180px;\n    border-radius: 4px;\n  }\n\n  @media (min-width: 768px) {\n    min-width: 180px;\n\n    img {\n      width: 180px;\n      height: 180px;\n      border-radius: 8px;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  overflow: hidden;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n    height: 180px;\n  }\n\n  .cardTitle {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 4;\n\n    @media (min-width: 768px) {\n      flex: none;\n      -webkit-line-clamp: 3;\n    }\n    @media (min-width: 1024px) {\n      -webkit-line-clamp: 3;\n    }\n    @media (min-width: 1280px) {\n      -webkit-line-clamp: 2;\n    }\n  }\n  .cardText {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 2;\n\n    @media (min-width: 768px) {\n      flex: none;\n      max-height: calc(5 * 24px);\n      -webkit-line-clamp: unset;\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,wBAAqB;AACrB;;;ACFA;AAEA,IAAAA,gBAAqB;;;ACAd,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWvB,IAAM,QAAQ,sCAAO;AAAA,gBACZ,CAAC,EAAE,MAAM,MAAM,MAAM,WAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBpC,IAAM,cAAc,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ADUlB;AA7BhB,SAASC,wBAAwBC,UAA0BC,UAAgC;AACzF,SAAO;IACLC,IAAIF,SAASE;IACbC,OAAOC,IAAIJ,SAASK,IAAIF,OAAOH,SAASM,IAAIH,OAAOF,QAAQ;IAC3DM,WAAWH,IAAIJ,SAASK,IAAIG,MAAMR,SAASM,IAAIE,MAAMP,QAAQ;IAC7DQ,OAAOT,SAASS;EAClB;AACF;AAEO,IAAMC,oBAAgBC,oBAAK,CAAC;EAAEC;AAAyC,MAAmB;AAC/F,QAAMC,cAAcC,eAAe;AACnC,QAAM;IAAEC;IAAOC;EAAY,IAAIC,OAAO;AACtC,QAAMC,YAAYN,MAAMO,IAAKC,UAASrB,wBAAwBqB,MAAMJ,YAAYf,QAAQ,CAAC;AAEzF,SACE,mDAAC,OACC,eAAc,UACd,OAAM,QACN,KAAKY,cAAc,OAAO,SAAS,QACnC,IAAIQ,OAAOC,KACX,SAAS;IAAEC,SAAS;EAAE,GACtB,SAAS;IAAEA,SAAS;EAAE,GACtB,MAAM;IAAEA,SAAS;EAAE,GAElBL,qBAAWC,IAAKK,cACf,mDAAC,WAA2B,SAASC,gBAAgBC,WACnD,6DAAC,QAAK,IAAIF,UAAUtB,MAAM,KACxB,6DAAC,WACC;uDAAC,SACC,6DAAC,SACC,KACEsB,UAAUf,QACNkB,YAAYH,UAAUf,KAAK,IAC3B,wCAEN,KAAI,eANN;;;;WAMiB,KAPnB;;;;WASA;IACA,mDAAC,eACC;yDAAC,QAAK,WAAU,aAAY,SAASmB,gBAAgBC,cAClDL,mBAASrB,SADZ;;;;aAEA;MACA,mDAAC,QACC,WAAU,YACV,SAASyB,gBAAgBE,WACzB,OAAOf,MAAMgB,SAASC,YAErBR,mBAASjB,aALZ;;;;aAMA;SAVF;;;;WAWA;OAtBF;;;;SAuBA,KAxBF;;;;SAyBA,KA1BYiB,UAAUtB,IAAxB;;;;SA2BA,CACD,KAtCH;;;;SAuCA;AAEJ,CAAC;;;ADjCG,IAAA+B,0BAAA;AA7BG,IAAMC,gBAAgBC,sCAAOC,IAAGC,WAAA;EAAAC,aAAA;EAAAC,aAAA;AAAA,CAAA,EAAA,CAAA,oEAAA,CAAA;AAqBxB,SAAf,QAAgC;AAC9B,QAAMC,OAAOC,cAA6B;AAC1C,QAAM;IAAEC;EAAE,IAAIC,OAAO;AAErB,QAAMC,OAAOJ,KAAKI,KAAKJ,KAAKA;AAC5B,QAAMK,YAAY,CAACL,KAAKM,SAAU;AAElC,SACE,wFACE;wDAAC,iBAAc,QAAf;;;;WAA0B;IAG1B,oDAAC,QAAK,QAAO,OAAM,oBAAkB,MACnC,8DAAC,iBACC,8DAAC,kBAAO,UAAS,aAAY,MAAK,SAAQ,MAAK,UAAS,OAAOD,YAAY,IACzE,8DAAC,QAAK,SAASE,gBAAgBC,WAAYN,YAAE,gBAAgB,KAA7D;;;;WAA+D,KADjE;;;;WAEA,KAHF;;;;WAIA,KALF;;;;WAMA;OAVF;;;;SAYA;AAEJ;",
  "names": ["import_react", "mapMaterialsToViewModel", "material", "language", "id", "title", "lng", "en", "th", "shorttext", "text", "image", "NewsComponent", "memo", "news", "widthScreen", "useScreenWidth", "theme", "userContext", "useApp", "newsItems", "map", "item", "motion", "div", "opacity", "newsItem", "VariantCardEnum", "materials", "getImageUrl", "TextVariantEnum", "textHeading3", "textBody2", "mainPage", "titleColor", "import_jsx_dev_runtime", "BoxPagination", "styled", "div", "withConfig", "displayName", "componentId", "data", "useLoaderData", "t", "useApp", "news", "newsLimit", "limit", "TextVariantEnum", "textBody2"]
}
