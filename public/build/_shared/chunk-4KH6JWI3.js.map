{
  "version": 3,
  "sources": ["../../../app/components/entities/cardComponents/partCard/VacancyPartCardInfo/index.tsx"],
  "sourcesContent": ["import type { Vacancy } from 'shared/v2/vacancies';\n\nimport { Box } from '~/components/common/Box';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { DataBox } from '~/components/ui/DataBox';\nimport { Field } from '~/components/ui/Field';\nimport { useApp } from '~/hooks';\nimport { EntityVariantEnum } from '~/types/enums/entityVariantEnum';\nimport type { PageVariantEnum } from '~/types/enums/pageVariantEnum';\nimport { getValueLang } from '~/utils/helpers.client';\n\nexport function VacancyPartCardInfo({\n  vacancy,\n  variant,\n}: {\n  vacancy?: Vacancy;\n  variant?: PageVariantEnum;\n}): JSX.Element {\n  const { theme, t, userContext } = useApp();\n\n  return (\n    <DataBox\n      variant={EntityVariantEnum.vacancy}\n      borderBottom={variant !== 'response'}\n      borderTop={variant !== 'response'}\n    >\n      <Field>\n        <Text variant={TextVariantEnum.textBody2} color={theme.user.descriptionTextColor}>\n          {t('user:district')}\n        </Text>\n        <Text variant={TextVariantEnum.textBody2medium}>\n          {getValueLang(vacancy?.location?.city_name, userContext.language)}\n        </Text>\n      </Field>\n      <Field>\n        <Text variant={TextVariantEnum.textBody2} color={theme.user.descriptionTextColor}>\n          {t('user:employment')}\n        </Text>\n        <Box flexDirection='column' gap='4px'>\n          {vacancy?.vacancy_page?.employment_type_names?.map((employment) => (\n            <Text key={employment.en} variant={TextVariantEnum.textBody2medium}>\n              {getValueLang(employment, userContext.language)}\n            </Text>\n          ))}\n        </Box>\n      </Field>\n      <Field>\n        <Text variant={TextVariantEnum.textBody2} color={theme.user.descriptionTextColor}>\n          {t('user:work_features')}\n        </Text>\n        <Box flexDirection='column' gap='4px'>\n          {vacancy?.vacancy_page?.work_feature_names?.map((feature) => (\n            <Text key={feature.en} variant={TextVariantEnum.textBody2medium}>\n              {getValueLang(feature, userContext.language)}\n            </Text>\n          ))}\n        </Box>\n      </Field>\n    </DataBox>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AA4BQ;AAhBD,SAASA,oBAAoB;EAClCC;EACAC;AAIF,GAAgB;AACd,QAAM;IAAEC;IAAOC;IAAGC;EAAY,IAAIC,OAAO;AAEzC,SACE,mDAAC,WACC,SAASC,kBAAkBN,SAC3B,cAAcC,YAAY,YAC1B,WAAWA,YAAY,YAEvB;uDAAC,SACC;yDAAC,QAAK,SAASM,gBAAgBC,WAAW,OAAON,MAAMO,KAAKC,sBACzDP,YAAE,eAAe,KADpB;;;;aAEA;MACA,mDAAC,QAAK,SAASI,gBAAgBI,iBAC5BC,uBAAaZ,SAASa,UAAUC,WAAWV,YAAYW,QAAQ,KADlE;;;;aAEA;SANF;;;;WAOA;IACA,mDAAC,SACC;yDAAC,QAAK,SAASR,gBAAgBC,WAAW,OAAON,MAAMO,KAAKC,sBACzDP,YAAE,iBAAiB,KADtB;;;;aAEA;MACA,mDAAC,OAAI,eAAc,UAAS,KAAI,OAC7BH,mBAASgB,cAAcC,uBAAuBC,IAAKC,gBAClD,mDAAC,QAAyB,SAASZ,gBAAgBI,iBAChDC,uBAAaO,YAAYf,YAAYW,QAAQ,KADrCI,WAAWC,IAAtB;;;;aAEA,CACD,KALH;;;;aAMA;SAVF;;;;WAWA;IACA,mDAAC,SACC;yDAAC,QAAK,SAASb,gBAAgBC,WAAW,OAAON,MAAMO,KAAKC,sBACzDP,YAAE,oBAAoB,KADzB;;;;aAEA;MACA,mDAAC,OAAI,eAAc,UAAS,KAAI,OAC7BH,mBAASgB,cAAcK,oBAAoBH,IAAKI,aAC/C,mDAAC,QAAsB,SAASf,gBAAgBI,iBAC7CC,uBAAaU,SAASlB,YAAYW,QAAQ,KADlCO,QAAQF,IAAnB;;;;aAEA,CACD,KALH;;;;aAMA;SAVF;;;;WAWA;OApCF;;;;SAqCA;AAEJ;",
  "names": ["VacancyPartCardInfo", "vacancy", "variant", "theme", "t", "userContext", "useApp", "EntityVariantEnum", "TextVariantEnum", "textBody2", "user", "descriptionTextColor", "textBody2medium", "getValueLang", "location", "city_name", "language", "vacancy_page", "employment_type_names", "map", "employment", "en", "work_feature_names", "feature"]
}
