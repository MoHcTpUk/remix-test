{
  "version": 3,
  "sources": ["../../../app/components/ui/Card/CardContainer/styles.ts", "../../../app/components/ui/Card/CardContainer/index.tsx"],
  "sourcesContent": ["import { styled } from 'styled-components';\n\nexport const Wrapper = styled.div<{ withGrowingBtn?: boolean }>`\n  display: grid;\n  grid-template-rows: 1fr;\n  gap: 8px;\n\n  & button {\n    justify-self: ${({ withGrowingBtn }) => withGrowingBtn && 'end'};\n  }\n`;\n", "import type { ForwardRefComponent, HTMLMotionProps } from 'framer-motion';\nimport type { ReactNode } from 'react';\nimport React from 'react';\n\nimport { Wrapper } from './styles';\n\ntype Props = {\n  children: ReactNode;\n  as?: ForwardRefComponent<HTMLDivElement, HTMLMotionProps<'div'>>;\n  id?: string;\n  initial?: {\n    opacity: number;\n  };\n  animate?: {\n    opacity: number;\n  };\n  exit?: {\n    opacity: number;\n  };\n  transition?: {\n    type: string;\n    bounce: number;\n    duration: number;\n  };\n  style?: {\n    alignItems?: string;\n    justifyContent?: string;\n    gap?: string;\n  };\n  withGrowingBtn?: boolean;\n};\n\nexport function CardContainer({\n  children,\n  as,\n  id,\n  initial,\n  animate,\n  exit,\n  transition,\n  style,\n  withGrowingBtn,\n}: Props) {\n  return (\n    <Wrapper\n      as={as}\n      id={id}\n      initial={initial}\n      animate={animate}\n      exit={exit}\n      transition={transition}\n      style={style}\n      withGrowingBtn={withGrowingBtn}\n    >\n      {children}\n    </Wrapper>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;AAEO,IAAM,UAAU,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMV,CAAC,EAAE,eAAe,MAAM,kBAAkB;AAAA;AAAA;;;ACoC1D;AAZG,SAASA,cAAc;EAC5BC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;EACAC;AACK,GAAG;AACR,SACE,mDAAC,WACC,IACA,IACA,SACA,SACA,MACA,YACA,OACA,gBAECR,YAVH;;;;SAWA;AAEJ;",
  "names": ["CardContainer", "children", "as", "id", "initial", "animate", "exit", "transition", "style", "withGrowingBtn"]
}
