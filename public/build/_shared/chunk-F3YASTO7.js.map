{
  "version": 3,
  "sources": ["../../../app/components/pages/Search/Resumes/Resume/index.tsx", "../../../app/components/pages/Search/Resumes/Resume/styles.ts"],
  "sourcesContent": ["import { useState } from 'react';\nimport type { Company } from 'shared/v2/companies';\nimport type { Resume } from 'shared/v2/resumes';\nimport type { Vacancy } from 'shared/v2/vacancies';\n\nimport { ResumeFullCardWidget } from '~/components/entities/cardWidgets';\nimport ModalRequestList from '~/components/entities/ModalRequestList';\nimport { useApp, useScreenWidth } from '~/hooks';\nimport type { IDictionaries } from '~/types/interfaces/iDictionaries';\n\nimport SignInForRequest from '../../SignInForRequest';\nimport { BoxContainer } from './styles';\n\nexport default function ResumeSearchCard({\n  resume,\n  dictionaries,\n  myVacancies,\n  myCompanies,\n}: {\n  resume?: Resume;\n  dictionaries?: IDictionaries;\n  myVacancies?: Vacancy[] | null;\n  myCompanies?: Company[] | null;\n}) {\n  const { userContext } = useApp();\n\n  const [visibleRequest, setVisibleRequest] = useState(false);\n  const widthScreen = useScreenWidth();\n\n  const handleRequest = () => {\n    setVisibleRequest(!visibleRequest);\n  };\n\n  return (\n    <BoxContainer>\n      <ResumeFullCardWidget\n        resume={resume}\n        dictionaries={dictionaries}\n        handleRequest={handleRequest}\n        variant='search'\n      />\n\n      {!userContext?.user?.isAuthenticated && widthScreen < 1280 && (\n        <SignInForRequest variant='resume' />\n      )}\n\n      <ModalRequestList\n        variant='vacancy'\n        visibility={visibleRequest}\n        setVisibility={setVisibleRequest}\n        vacancies={myVacancies}\n        companies={myCompanies}\n        resumeId={resume?.id}\n      />\n    </BoxContainer>\n  );\n}\n", "import styled from 'styled-components';\n\nexport const BoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: sticky;\n  width: 100%;\n  align-items: center;\n  min-height: 100%;\n  justify-content: center;\n  gap: 16px;\n  @media (min-width: 1280px) {\n    min-height: 100%;\n    position: sticky;\n    top: 0;\n    /* overflow: hidden; */\n    justify-content: flex-start;\n    gap: 24px;\n  }\n`;\n\nexport const BoxControl = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  border-top: 1px solid ${({ theme }) => theme.user.borderColor};\n\n  form {\n    align-items: center;\n    padding-top: 16px;\n  }\n\n  @media (min-width: 768px) {\n    align-items: flex-end;\n\n    form {\n      display: flex;\n      flex-direction: row;\n      justify-content: flex-end;\n      align-items: center;\n      width: 100%;\n      align-items: flex-end;\n    }\n  }\n\n  @media (min-width: 1280px) {\n    .requestCard {\n      justify-content: center;\n    }\n  }\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA,mBAAyB;;;ACElB,IAAM,eAAe,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmB5B,IAAM,aAAa,sCAAO;AAAA;AAAA;AAAA;AAAA,0BAIP,CAAC,EAAE,MAAM,MAAM,MAAM,KAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ADU9C;AAtBS,SAAf,iBAAyC;EACvCA;EACAC;EACAC;EACAC;AAMF,GAAG;AACD,QAAM;IAAEC;EAAY,IAAIC,OAAO;AAE/B,QAAM,CAACC,gBAAgBC,iBAAiB,QAAIC,uBAAS,KAAK;AAC1D,QAAMC,cAAcC,eAAe;AAEnC,QAAMC,gBAAgBA,MAAM;AAC1BJ,sBAAkB,CAACD,cAAc;EACnC;AAEA,SACE,mDAAC,gBACC;uDAAC,wBACC,QACA,cACA,eACA,SAAQ,YAJV;;;;WAIkB;IAGjB,CAACF,aAAaQ,MAAMC,mBAAmBJ,cAAc,QACpD,mDAAC,oBAAiB,SAAQ,YAA1B;;;;WAAkC;IAGpC,mDAAC,oBACC,SAAQ,WACR,YAAYH,gBACZ,eAAeC,mBACf,WAAWL,aACX,WAAWC,aACX,UAAUH,QAAQc,MANpB;;;;WAMuB;OAlBzB;;;;SAoBA;AAEJ;",
  "names": ["resume", "dictionaries", "myVacancies", "myCompanies", "userContext", "useApp", "visibleRequest", "setVisibleRequest", "useState", "widthScreen", "useScreenWidth", "handleRequest", "user", "isAuthenticated", "id"]
}
