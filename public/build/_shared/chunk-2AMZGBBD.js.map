{
  "version": 3,
  "sources": ["../../../app/components/entities/ModalRequestConfirm/index.tsx", "../../../app/components/entities/ModalRequestConfirm/styles.tsx"],
  "sourcesContent": ["import { Form } from '@remix-run/react';\n\nimport { Box } from '~/components/common/Box';\nimport Button from '~/components/common/Button';\nimport { Modal } from '~/components/common/Modal';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\n\nimport { BoxContainer } from './styles';\n\nexport default function ModalRequestConfirm({\n  visibility,\n  setVisibility,\n  variant,\n  id,\n}: {\n  visibility: boolean;\n  setVisibility: (visibility: boolean) => void;\n  variant: 'resume' | 'vacancy';\n  id?: string;\n}) {\n  const { t, userContext } = useApp();\n\n  return (\n    <Modal visibility={visibility} setVisibility={setVisibility}>\n      <BoxContainer>\n        <Text variant={TextVariantEnum.textHeading3}>{t('user:send_request')}</Text>\n\n        <Text style={{ textAlign: 'center' }} variant={TextVariantEnum.textBody1medium}>\n          {variant === 'resume'\n            ? t('user:are_you_sure_you_want_to_send_this_resume')\n            : t('user:are_you_sure_you_want_to_send_this_vacancy')}\n        </Text>\n\n        <Box gap='24px' flexDirection='column' width='100%'>\n          <Button priority='secondary' fullwidth onClick={() => setVisibility(!visibility)}>\n            <Text variant={TextVariantEnum.textBody2}>{t('common:cancel')}</Text>\n          </Button>\n\n          <Form method='POST' style={{ width: '100%' }}>\n            <input type='hidden' name='id' value={id} />\n            <Button\n              type='submit'\n              fullwidth\n              priority='primary'\n              onClick={() => setVisibility(!visibility)}\n            >\n              <Text variant={TextVariantEnum.textBody2}>{t('common:yes')}</Text>\n            </Button>\n          </Form>\n        </Box>\n      </BoxContainer>\n    </Modal>\n  );\n}\n", "import styled from 'styled-components';\n\nexport const BoxContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  width: 100%;\n  max-width: 100%;\n  @media (min-width: 768px) {\n    max-width: 388px;\n  }\n`;\n\nexport const BoxInput = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  border-radius: 8px;\n  border: 1px solid ${({ theme }) => theme.user.borderCustomFieldData};\n  padding: 12px;\n\n  .link {\n    overflow: hidden;\n    white-space: nowrap;\n  }\n`;\n\nexport const BoxIcons = styled.div`\n  overflow: auto;\n`;\n\nexport const IconsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  overflow: visible;\n  min-width: max-content;\n  gap: 8px;\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;ACEO,IAAMA,eAAeC,sCAAOC,IAAGC,WAAA;EAAAC,aAAA;EAAAC,aAAA;AAAA,CAAA,EAAA,CAAA,uKAAA,CAAA;AAc/B,IAAMC,WAAWL,sCAAOC,IAAGC,WAAA;EAAAC,aAAA;EAAAC,aAAA;AAAA,CAAA,EAAA,CAAA,mIAAA,0DAAA,GAOZ,CAAC;EAAEE;AAAM,MAAMA,MAAMC,KAAKC,qBAAqB;AAS9D,IAAMC,WAAWT,sCAAOC,IAAGC,WAAA;EAAAC,aAAA;EAAAC,aAAA;AAAA,CAAA,EAAA,CAAA,gBAAA,CAAA;AAI3B,IAAMM,iBAAiBV,sCAAOC,IAAGC,WAAA;EAAAC,aAAA;EAAAC,aAAA;AAAA,CAAA,EAAA,CAAA,iFAAA,CAAA;;;ADThC;AAhBO,SAAf,oBAA4C;EAC1CO;EACAC;EACAC;EACAC;AAMF,GAAG;AACD,QAAM;IAAEC;IAAGC;EAAY,IAAIC,OAAO;AAElC,SACE,mDAAC,SAAM,YAAwB,eAC7B,6DAAC,gBACC;uDAAC,QAAK,SAASC,gBAAgBC,cAAeJ,YAAE,mBAAmB,KAAnE;;;;WAAqE;IAErE,mDAAC,QAAK,OAAO;MAAEK,WAAW;IAAS,GAAG,SAASF,gBAAgBG,iBAC5DR,sBAAY,WACTE,EAAE,gDAAgD,IAClDA,EAAE,iDAAiD,KAHzD;;;;WAIA;IAEA,mDAAC,OAAI,KAAI,QAAO,eAAc,UAAS,OAAM,QAC3C;yDAAC,kBAAO,UAAS,aAAY,WAAS,MAAC,SAAS,MAAMH,cAAc,CAACD,UAAU,GAC7E,6DAAC,QAAK,SAASO,gBAAgBI,WAAYP,YAAE,eAAe,KAA5D;;;;aAA8D,KADhE;;;;aAEA;MAEA,mDAAC,QAAK,QAAO,QAAO,OAAO;QAAEQ,OAAO;MAAO,GACzC;2DAAC,WAAM,MAAK,UAAS,MAAK,MAAK,OAAOT,MAAtC;;;;eAAyC;QACzC,mDAAC,kBACC,MAAK,UACL,WAAS,MACT,UAAS,WACT,SAAS,MAAMF,cAAc,CAACD,UAAU,GAExC,6DAAC,QAAK,SAASO,gBAAgBI,WAAYP,YAAE,YAAY,KAAzD;;;;eAA2D,KAN7D;;;;eAOA;WATF;;;;aAUA;SAfF;;;;WAgBA;OAzBF;;;;SA0BA,KA3BF;;;;SA4BA;AAEJ;",
  "names": ["BoxContainer", "styled", "div", "withConfig", "displayName", "componentId", "BoxInput", "theme", "user", "borderCustomFieldData", "BoxIcons", "IconsContainer", "visibility", "setVisibility", "variant", "id", "t", "userContext", "useApp", "TextVariantEnum", "textHeading3", "textAlign", "textBody1medium", "textBody2", "width"]
}
