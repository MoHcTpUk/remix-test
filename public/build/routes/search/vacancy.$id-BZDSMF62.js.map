{
  "version": 3,
  "sources": ["../../../../app/routes/search/vacancy.$id.tsx"],
  "sourcesContent": ["import type { LoaderArgs } from '@remix-run/cloudflare';\nimport { json } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { ClientFactory } from 'shared/clientFactory';\nimport { VacanciesApi } from 'shared/v2/vacancies';\n\nimport { Box } from '~/components/common/Box';\nimport VacancySearchCard from '~/components/pages/Search/Vacancies/Vacancy';\n\nexport const loader = async ({ params, context }: LoaderArgs) => {\n  const clientVacancy = ClientFactory.createClient(VacanciesApi, context.session);\n\n  const vacancyId = params.id;\n\n  const [genders, specializations, location, employment, workfeatures, vacancy] = await Promise.all(\n    [\n      context.references.gendersMap,\n      context.references.specializationsMap,\n      context.references.locationMap,\n      context.references.employmentsMap,\n      context.references.workFeaturesMap,\n      clientVacancy.getVacancy({ id: vacancyId || '' }),\n    ],\n  );\n\n  const dictionaries = {\n    genders: genders.ToArray(),\n    specializations: specializations.ToArray(),\n    location: location.ToArray(),\n    employment: employment.ToArray(),\n    workfeatures: workfeatures.ToArray(),\n  };\n\n  return json({ vacancy, dictionaries });\n};\n\nexport default function Index() {\n  const request = useLoaderData<typeof loader>();\n  // const resume = request.resume\n  const { dictionaries } = request;\n\n  // return <h1>HEY</h1>;\n  return (\n    <Box width='100%' maxWidth='920px'>\n      <VacancySearchCard vacancy={request?.vacancy} dictionaries={dictionaries} />;\n    </Box>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,wBAAqB;AACrB;AA0CM;AARS,SAAf,QAAgC;AAC9B,QAAMA,UAAUC,cAA6B;AAE7C,QAAM;IAAEC;EAAa,IAAIF;AAGzB,SACE,mDAAC,OAAI,OAAM,QAAO,UAAS,SACzB;uDAAC,qBAAkB,SAASA,SAASG,SAAS,gBAA9C;;;;WAAyE;IAAG;OAD9E;;;;SAEA;AAEJ;",
  "names": ["request", "useLoaderData", "dictionaries", "vacancy"]
}
