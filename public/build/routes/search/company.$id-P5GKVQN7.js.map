{
  "version": 3,
  "sources": ["../../../../app/routes/search/company.$id.tsx"],
  "sourcesContent": ["import type { LoaderArgs } from '@remix-run/cloudflare';\nimport { json } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { ClientFactory } from 'shared/clientFactory';\nimport { CompaniesApi } from 'shared/v2/companies';\nimport { VacanciesApi } from 'shared/v2/vacancies';\n\nimport { Box } from '~/components/common/Box';\nimport CompanySearchCard from '~/components/pages/Search/Companies/Company';\n\nexport const loader = async ({ params, context }: LoaderArgs) => {\n  const clientVacancies = ClientFactory.createClient(VacanciesApi, context.session);\n  const clientCompanies = ClientFactory.createClient(CompaniesApi, context.session);\n\n  const companyId = params.id;\n\n  const [\n    genders,\n    specializations,\n    location,\n    employment,\n    workfeatures,\n    educationLevel,\n    yearsOfExperience,\n    employeeNumbers,\n    company,\n    vacancies,\n  ] = await Promise.all([\n    context.references.gendersMap,\n    context.references.specializationsMap,\n    context.references.locationMap,\n    context.references.employmentsMap,\n    context.references.workFeaturesMap,\n    context.references.educationLevelMap,\n    context.references.yearsOfExperienceMap,\n    context.references.employeeNumbersMap,\n    clientCompanies.getCompany({ id: companyId || '' }),\n    // TODO: add filter to get vacancies for companyID\n    clientVacancies.getVacancies(),\n  ]);\n\n  const dictionaries = {\n    genders: genders.ToArray(),\n    specializations: specializations.ToArray(),\n    location: location.ToArray(),\n    employment: employment.ToArray(),\n    workfeatures: workfeatures.ToArray(),\n    educationLevel: educationLevel.ToArray(),\n    yearsOfExperience: yearsOfExperience.ToArray(),\n    employeeNumbers: employeeNumbers.ToArray(),\n  };\n\n  return json({ company, vacancies, dictionaries });\n};\n\nexport default function Index() {\n  const request = useLoaderData<typeof loader>();\n  const vacancies = request?.vacancies.data;\n  const company = request?.company;\n\n  const { dictionaries } = request;\n\n  return (\n    <Box width='100%' maxWidth='920px'>\n      <CompanySearchCard vacancies={vacancies} company={company} dictionaries={dictionaries} />;\n    </Box>\n  );\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,wBAAqB;AACrB;AA8DM;AATS,SAAf,QAAgC;AAC9B,QAAMA,UAAUC,cAA6B;AAC7C,QAAMC,YAAYF,SAASE,UAAUC;AACrC,QAAMC,UAAUJ,SAASI;AAEzB,QAAM;IAAEC;EAAa,IAAIL;AAEzB,SACE,mDAAC,OAAI,OAAM,QAAO,UAAS,SACzB;uDAAC,qBAAkB,WAAsB,SAAkB,gBAA3D;;;;WAAsF;IAAG;OAD3F;;;;SAEA;AAEJ;",
  "names": ["request", "useLoaderData", "vacancies", "data", "company", "dictionaries"]
}
