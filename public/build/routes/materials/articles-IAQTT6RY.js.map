{
  "version": 3,
  "sources": ["../../../../app/routes/materials/articles.tsx", "../../../../app/components/pages/Materials/Articles/index.tsx", "../../../../app/components/pages/Materials/Articles/styles.ts"],
  "sourcesContent": ["import type { LoaderArgs } from '@remix-run/cloudflare';\nimport { json } from '@remix-run/cloudflare';\nimport { Form, useLoaderData } from '@remix-run/react';\nimport { Materials } from 'shared/client/Materials';\nimport styled from 'styled-components';\n\nimport Button from '~/components/common/Button';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { ArticlesComponent } from '~/components/pages/Materials/Articles';\nimport { useApp } from '~/hooks';\n\nexport const BoxPagination = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const loader = async ({ request, context }: LoaderArgs) => {\n  const clientArticles = new Materials();\n  const url = new URL(request.url);\n  const limit = url.searchParams.get('limit');\n\n  const [articles] = await Promise.all([\n    await clientArticles.articlesList({\n      limit: limit ? +limit : 12,\n    }),\n  ]);\n\n  return json({ articles, limit });\n};\n\nexport default function Index() {\n  const data = useLoaderData<typeof loader>();\n  const { t } = useApp();\n\n  const articles = data.articles.data.data;\n  const articlesLimit = +data.limit! || 12;\n\n  return (\n    <>\n      <ArticlesComponent articles={articles} />\n      {/* when articles will be more then 7\n      {data?.articles?.data?.hasMore && ( */}\n      <Form method='GET' preventScrollReset>\n        <BoxPagination>\n          <Button priority='secondary' name='limit' type='submit' value={articlesLimit + 12}>\n            <Text variant={TextVariantEnum.textBody2}>{t('user:show_more')}</Text>\n          </Button>\n        </BoxPagination>\n      </Form>\n      {/* )} */}\n    </>\n  );\n}\n", "import { Link } from '@remix-run/react';\nimport { motion } from 'framer-motion';\nimport { memo, useRef } from 'react';\nimport type { EntityMaterial } from 'shared/client/data-contracts';\nimport { lng } from 'shared/utils';\n\nimport { Box } from '~/components/common/Box';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport type { ISlide } from '~/components/entities/Slider';\nimport { useApp, useScreenWidth } from '~/hooks';\nimport type { LanguageEnum } from '~/types/enums/languageEnum';\nimport { VariantCardEnum } from '~/types/enums/variantCardEnum';\nimport { getImageUrl } from '~/utils/helpers';\n\nimport { BoxCard } from '../../../common/Card';\nimport { CardContent, Image, Wrapper } from './styles';\n\nfunction mapMaterialsToViewModel(material: EntityMaterial, language: LanguageEnum): ISlide {\n  return {\n    id: material.id,\n    title: lng(material.en?.title, material.th?.title, language),\n    shorttext: lng(material.en?.text, material.th?.text, language),\n    image: material.image,\n  } as ISlide;\n}\n\nexport const ArticlesComponent = memo(\n  ({ articles }: { articles?: EntityMaterial[] | null }): JSX.Element => {\n    const widthScreen = useScreenWidth();\n    const { theme, t, userContext } = useApp();\n    const articlesItems = articles?.map((item) =>\n      mapMaterialsToViewModel(item, userContext.language),\n    );\n\n    return (\n      <Box\n        flexDirection='column'\n        width='100%'\n        gap={widthScreen > 1024 ? '24px' : '16px'}\n        as={motion.div}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        {articlesItems?.map((articlesItem) => (\n          <BoxCard key={articlesItem?.id} variant={VariantCardEnum.materials}>\n            <Link to={articlesItem?.id || '#'}>\n              <Wrapper>\n                <Image>\n                  <img\n                    src={\n                      articlesItem?.image\n                        ? getImageUrl(articlesItem?.image)\n                        : '/images/user/squareAvatarDefault.png'\n                    }\n                    alt='article card'\n                  />\n                </Image>\n                <CardContent>\n                  <Text className='cardTitle' variant={TextVariantEnum.textHeading3}>\n                    {articlesItem.title}\n                  </Text>\n                  <Text\n                    className='cardText'\n                    variant={TextVariantEnum.textBody2}\n                    color={theme.mainPage.titleColor}\n                  >\n                    {articlesItem.shorttext}\n                  </Text>\n                </CardContent>\n              </Wrapper>\n            </Link>\n          </BoxCard>\n        ))}\n      </Box>\n    );\n  },\n);\n", "import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 24px;\n  }\n`;\n\nexport const Image = styled.div`\n  background: ${({ theme }) => theme.\u0441ards.imageBackground};\n  min-width: 100%;\n  height: 100%;\n  display: flex;\n  border-radius: 4px;\n\n  img {\n    width: 100%;\n    height: 180px;\n    border-radius: 4px;\n  }\n\n  @media (min-width: 768px) {\n    min-width: 180px;\n\n    img {\n      width: 180px;\n      height: 180px;\n      border-radius: 8px;\n    }\n  }\n`;\n\nexport const CardContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  gap: 8px;\n\n  @media (min-width: 768px) {\n    gap: 16px;\n    height: 180px;\n  }\n\n  .cardTitle {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 4;\n\n    @media (min-width: 768px) {\n      -webkit-line-clamp: 3;\n    }\n    @media (min-width: 1024px) {\n      -webkit-line-clamp: 3;\n    }\n    @media (min-width: 1280px) {\n      -webkit-line-clamp: 2;\n    }\n  }\n  .cardText {\n    display: -webkit-box;\n    -webkit-box-orient: vertical;\n    overflow: hidden;\n    -webkit-line-clamp: 2;\n\n    @media (min-width: 768px) {\n      flex: none;\n      max-height: calc(5 * 24px);\n      -webkit-line-clamp: unset;\n    }\n  }\n`;\n"],
  "mappings": "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",
  "names": ["import_react", "mapMaterialsToViewModel", "material", "language", "id", "title", "lng", "en", "th", "shorttext", "text", "image", "ArticlesComponent", "memo", "articles", "widthScreen", "useScreenWidth", "theme", "t", "userContext", "useApp", "articlesItems", "map", "item", "motion", "div", "opacity", "articlesItem", "VariantCardEnum", "materials", "getImageUrl", "TextVariantEnum", "textHeading3", "textBody2", "mainPage", "titleColor", "import_jsx_dev_runtime", "BoxPagination", "styled", "div", "withConfig", "displayName", "componentId", "data", "useLoaderData", "t", "useApp", "articles", "articlesLimit", "limit", "TextVariantEnum", "textBody2"]
}
