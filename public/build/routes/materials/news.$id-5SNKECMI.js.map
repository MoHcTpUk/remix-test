{
  "version": 3,
  "sources": ["../../../../app/routes/materials/news.$id.tsx", "../../../../app/components/pages/Materials/News/NewsItem/index.tsx", "../../../../app/components/pages/Materials/News/NewsItem/styles.ts"],
  "sourcesContent": ["import type { LoaderArgs } from '@remix-run/cloudflare';\nimport { json } from '@remix-run/cloudflare';\nimport { Link, useLoaderData } from '@remix-run/react';\nimport { Materials } from 'shared/client/Materials';\nimport routes from 'shared/routing/routes';\n\nimport Button from '~/components/common/Button';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { NewsItemComponent } from '~/components/pages/Materials/News/NewsItem';\nimport { useApp } from '~/hooks';\n\nimport { BoxPagination } from './news';\n\nexport const loader = async ({ params, context }: LoaderArgs) => {\n  const clientNews = new Materials();\n  const newsItemId = params.id;\n\n  const [news] = await Promise.all([clientNews.newsDetail(newsItemId || '')]);\n\n  return json({ news });\n};\n\nexport default function Index() {\n  const data = useLoaderData<typeof loader>();\n  const { t } = useApp();\n\n  const newsItem = data.news.data;\n\n  return (\n    <>\n      <NewsItemComponent newsItem={newsItem} />\n      <BoxPagination>\n        <Link to={routes.materials.news.root}>\n          <Button priority='secondary'>\n            <Text variant={TextVariantEnum.textBody2}>{t('home:see_all_news')}</Text>\n          </Button>\n        </Link>\n      </BoxPagination>\n    </>\n  );\n}\n", "import { format, parseISO } from 'date-fns';\nimport { enGB, th } from 'date-fns/locale';\nimport { motion } from 'framer-motion';\nimport { memo } from 'react';\nimport type { EntityMaterial } from 'shared/client/data-contracts';\nimport { lng } from 'shared/utils';\n\nimport { Box } from '~/components/common/Box';\nimport { BoxCard } from '~/components/common/Card';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport type { ISlide } from '~/components/entities/Slider';\nimport { useApp, useScreenWidth } from '~/hooks';\nimport type { LanguageEnum } from '~/types/enums/languageEnum';\nimport { VariantCardEnum } from '~/types/enums/variantCardEnum';\nimport { getImageUrl } from '~/utils/helpers';\n\nimport { CardHeader, Image, TitleWrapper, Wrapper } from './styles';\n\nfunction mapMaterialsToViewModel(material: EntityMaterial, language: LanguageEnum): ISlide {\n  return {\n    id: material.id,\n    title: lng(material.en?.title, material.th?.title, language),\n    text: lng(material.en?.text, material.th?.text, language),\n    date: material.published_at_utc,\n    image: material.image,\n  } as ISlide;\n}\n\nexport const NewsItemComponent = memo(\n  ({ newsItem }: { newsItem?: EntityMaterial | null }): JSX.Element => {\n    const widthScreen = useScreenWidth();\n    const { theme, t, userContext } = useApp();\n    const newsItemData = mapMaterialsToViewModel(newsItem!, userContext.language);\n\n    const formatDate = newsItemData.date;\n    const formatDateTH = format(parseISO(formatDate!), 'd MMMM yyyy', { locale: th });\n    const formatDateEN = format(parseISO(formatDate!), 'd MMMM yyyy', { locale: enGB });\n\n    return (\n      <Box\n        flexDirection='column'\n        width='100%'\n        gap={widthScreen > 1024 ? '24px' : '16px'}\n        as={motion.div}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        <BoxCard key={newsItem?.id} variant={VariantCardEnum.materials}>\n          <Wrapper>\n            <CardHeader>\n              <TitleWrapper>\n                <Text variant={TextVariantEnum.textHeading3}>{newsItemData.title}</Text>\n                <Text\n                  className='cardDate'\n                  variant={TextVariantEnum.textBody2medium}\n                  color={theme.сards.descriptionTextColor}\n                >\n                  {userContext.language === 'en' ? formatDateEN : formatDateTH}\n                </Text>\n              </TitleWrapper>\n              <Image>\n                <img\n                  src={\n                    newsItemData?.image\n                      ? getImageUrl(newsItemData?.image)\n                      : '/images/user/squareAvatarDefault.png'\n                  }\n                  alt='news card'\n                />\n              </Image>\n            </CardHeader>\n\n            <Text\n              className='cardText'\n              variant={TextVariantEnum.textBody2}\n              color={theme.mainPage.titleColor}\n            >\n              {newsItemData.text}\n            </Text>\n          </Wrapper>\n        </BoxCard>\n      </Box>\n    );\n  },\n);\n", "import styled from 'styled-components';\n\nimport {\n  FONT_SIZES_DESC,\n  FONT_SIZES_MOB,\n  LINE_HEIGHTS_DESC,\n  LINE_HEIGHTS_MOB,\n} from '~/components/common/Text';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  @media (min-width: 768px) {\n    gap: 24px;\n  }\n`;\n\nexport const CardHeader = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  gap: 16px;\n  padding-top: 8px;\n\n  @media (min-width: 768px) {\n    flex-direction: column;\n    gap: 24px;\n  }\n`;\nexport const TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n\n  .cardDate {\n    font-size: ${FONT_SIZES_MOB.textSmallmedium};\n    line-height: ${LINE_HEIGHTS_MOB.textSmallmedium};\n    border-bottom: 1px solid ${({ theme }) => theme.user.borderColor};\n    padding-bottom: 16px;\n\n    @media (min-width: 768px) {\n      font-size: ${FONT_SIZES_DESC.textBody2medium};\n      line-height: ${LINE_HEIGHTS_DESC.textBody2medium};\n      border-bottom: none;\n      padding-bottom: 0;\n    }\n  }\n`;\n\nexport const Image = styled.div`\n  background: ${({ theme }) => theme.\u0441ards.imageBackground};\n  width: 100%;\n  display: flex;\n  border-radius: 8px;\n  position: relative;\n  padding-top: 56.25%;\n  overflow: hidden;\n\n  img {\n    border-radius: 8px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    bottom: 0;\n    right: 0;\n    width: 100%;\n  }\n`;\n"],
  "mappings": "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",
  "names": ["mapMaterialsToViewModel", "material", "language", "id", "title", "lng", "en", "th", "text", "date", "published_at_utc", "image", "NewsItemComponent", "memo", "newsItem", "widthScreen", "useScreenWidth", "theme", "t", "userContext", "useApp", "newsItemData", "formatDate", "formatDateTH", "format", "parseISO", "locale", "formatDateEN", "enGB", "motion", "div", "opacity", "VariantCardEnum", "materials", "TextVariantEnum", "textHeading3", "textBody2medium", "\u0441ards", "descriptionTextColor", "getImageUrl", "textBody2", "mainPage", "titleColor", "import_jsx_dev_runtime", "data", "useLoaderData", "t", "useApp", "newsItem", "news", "routes", "materials", "root", "TextVariantEnum", "textBody2"]
}
