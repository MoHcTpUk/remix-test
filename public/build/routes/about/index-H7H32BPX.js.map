{
  "version": 3,
  "sources": ["../../../../app/routes/about/index.tsx", "../../../../app/components/pages/About/index.tsx", "../../../../app/components/pages/About/styles.ts"],
  "sourcesContent": ["import type { LoaderArgs } from '@remix-run/cloudflare';\nimport { json } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { StaticPages } from 'shared/client/StaticPages';\n\nimport { AboutComponent } from '~/components/pages/About';\n\nexport const loader = async ({ request, context }: LoaderArgs) => {\n  const client = new StaticPages();\n\n  const [about] = await Promise.all([await client.staticPagesDetail('about')]);\n\n  return json({ about });\n};\n\nexport default function Index() {\n  const data = useLoaderData<typeof loader>();\n  const aboutText = data.about.data;\n  return <AboutComponent about={aboutText} />;\n}\n", "import { motion } from 'framer-motion';\nimport { memo } from 'react';\nimport type { EntityStaticPage } from 'shared/client/data-contracts';\nimport { lng } from 'shared/utils';\n\nimport { Box } from '~/components/common/Box';\nimport { BoxCard } from '~/components/common/Card';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\nimport type { LanguageEnum } from '~/types/enums/languageEnum';\nimport { VariantCardEnum } from '~/types/enums/variantCardEnum';\nimport type { IStaticPageContent } from '~/types/interfaces/iStaticPages';\n\nimport { ContentWrapper, TitleWrapper } from './styles';\n\nfunction mapMaterialsToViewModel(\n  material: EntityStaticPage,\n  language: LanguageEnum,\n): IStaticPageContent {\n  return {\n    id: material.id,\n    title: lng(material.en?.title, material.th?.title, language),\n    text: lng(material.en?.text, material.th?.text, language),\n  } as IStaticPageContent;\n}\n\nexport const AboutComponent = memo(\n  ({ about }: { about?: EntityStaticPage | null }): JSX.Element => {\n    const { userContext } = useApp();\n    const aboutData = mapMaterialsToViewModel(about!, userContext.language);\n\n    return (\n      <Box\n        flexDirection='column'\n        width='100%'\n        as={motion.div}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        <BoxCard variant={VariantCardEnum.about}>\n          <TitleWrapper>\n            <Text variant={TextVariantEnum.textHeading2}>{aboutData.title}</Text>\n          </TitleWrapper>\n\n          <ContentWrapper>\n            <Text variant={TextVariantEnum.textBody2}>{aboutData.text}</Text>\n          </ContentWrapper>\n        </BoxCard>\n      </Box>\n    );\n  },\n);\n", "import styled from 'styled-components';\n\nimport {\n  FONT_SIZES_DESC,\n  FONT_SIZES_MOB,\n  FONT_WEIGHTS_DESC,\n  FONT_WEIGHTS_MOB,\n  LINE_HEIGHTS_DESC,\n  LINE_HEIGHTS_MOB,\n} from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  span {\n    font-size: ${FONT_SIZES_MOB[TextVariantEnum.textHeading2]};\n    font-weight: ${FONT_WEIGHTS_MOB[TextVariantEnum.textHeading2]};\n    line-height: ${LINE_HEIGHTS_MOB[TextVariantEnum.textHeading2]};\n  }\n\n  @media (min-width: 768px) {\n    span {\n      font-size: ${FONT_SIZES_DESC[TextVariantEnum.textHeading3]};\n      font-weight: ${FONT_WEIGHTS_DESC[TextVariantEnum.textHeading3]};\n      line-height: ${LINE_HEIGHTS_DESC[TextVariantEnum.textHeading3]};\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  /* gap: 16px; */\n  white-space: pre-wrap;\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,wBAAqB;AACrB;;;ACDA,mBAAqB;;;ACWd,IAAM,eAAe,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKlB,eAAe,gBAAgB,YAAY;AAAA,mBACzC,iBAAiB,gBAAgB,YAAY;AAAA,mBAC7C,iBAAiB,gBAAgB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,mBAK7C,gBAAgB,gBAAgB,YAAY;AAAA,qBAC1C,kBAAkB,gBAAgB,YAAY;AAAA,qBAC9C,kBAAkB,gBAAgB,YAAY;AAAA;AAAA;AAAA;AAK5D,IAAM,iBAAiB,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;;;ADYzB;AA3BZ,SAASA,wBACPC,UACAC,UACoB;AACpB,SAAO;IACLC,IAAIF,SAASE;IACbC,OAAOC,IAAIJ,SAASK,IAAIF,OAAOH,SAASM,IAAIH,OAAOF,QAAQ;IAC3DM,MAAMH,IAAIJ,SAASK,IAAIE,MAAMP,SAASM,IAAIC,MAAMN,QAAQ;EAC1D;AACF;AAEO,IAAMO,qBAAiBC,mBAC5B,CAAC;EAAEC;AAA2C,MAAmB;AAC/D,QAAM;IAAEC;EAAY,IAAIC,OAAO;AAC/B,QAAMC,YAAYd,wBAAwBW,OAAQC,YAAYV,QAAQ;AAEtE,SACE,mDAAC,OACC,eAAc,UACd,OAAM,QACN,IAAIa,OAAOC,KACX,SAAS;IAAEC,SAAS;EAAE,GACtB,SAAS;IAAEA,SAAS;EAAE,GACtB,MAAM;IAAEA,SAAS;EAAE,GAEnB,6DAAC,WAAQ,SAASC,gBAAgBP,OAChC;uDAAC,gBACC,6DAAC,QAAK,SAASQ,gBAAgBC,cAAeN,oBAAUV,SAAxD;;;;WAA8D,KADhE;;;;WAEA;IAEA,mDAAC,kBACC,6DAAC,QAAK,SAASe,gBAAgBE,WAAYP,oBAAUN,QAArD;;;;WAA0D,KAD5D;;;;WAEA;OAPF;;;;SAQA,KAhBF;;;;SAiBA;AAEJ,CACF;;;ADnCS,IAAAc,0BAAA;AAHM,SAAf,QAAgC;AAC9B,QAAMC,OAAOC,cAA6B;AAC1C,QAAMC,YAAYF,KAAKG,MAAMH;AAC7B,SAAO,oDAAC,kBAAe,OAAOE,aAAvB;;;;SAAiC;AAC1C;",
  "names": ["mapMaterialsToViewModel", "material", "language", "id", "title", "lng", "en", "th", "text", "AboutComponent", "memo", "about", "userContext", "useApp", "aboutData", "motion", "div", "opacity", "VariantCardEnum", "TextVariantEnum", "textHeading2", "textBody2", "import_jsx_dev_runtime", "data", "useLoaderData", "aboutText", "about"]
}
