{
  "version": 3,
  "sources": ["../../../../app/routes/privacy_policy/index.tsx", "../../../../app/components/pages/PrivacyPolicy/index.tsx", "../../../../app/components/pages/PrivacyPolicy/styles.ts"],
  "sourcesContent": ["import type { LoaderArgs } from '@remix-run/cloudflare';\nimport { json } from '@remix-run/cloudflare';\nimport { useLoaderData } from '@remix-run/react';\nimport { StaticPages } from 'shared/client/StaticPages';\n\nimport { PrivacyPolicyComponent } from '~/components/pages/PrivacyPolicy';\n\nexport const loader = async ({ request, context }: LoaderArgs) => {\n  const client = new StaticPages();\n\n  const [privacyPolicy] = await Promise.all([await client.staticPagesDetail('privacy')]);\n\n  return json({ privacyPolicy });\n};\n\nexport default function Index() {\n  const data = useLoaderData<typeof loader>();\n  const privacyText = data.privacyPolicy.data;\n  return <PrivacyPolicyComponent privacy={privacyText} />;\n}\n", "import { useLocation } from '@remix-run/react';\nimport { motion } from 'framer-motion';\nimport { memo, useEffect } from 'react';\nimport type { EntityStaticPage } from 'shared/client/data-contracts';\nimport { lng } from 'shared/utils';\n\nimport { Box } from '~/components/common/Box';\nimport { BoxCard } from '~/components/common/Card';\nimport { Text } from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\nimport { useApp } from '~/hooks';\nimport type { LanguageEnum } from '~/types/enums/languageEnum';\nimport { VariantCardEnum } from '~/types/enums/variantCardEnum';\nimport type { IStaticPageContent } from '~/types/interfaces/iStaticPages';\n\nimport { ContentWrapper, TitleWrapper } from './styles';\n\nfunction mapMaterialsToViewModel(\n  material: EntityStaticPage,\n  language: LanguageEnum,\n): IStaticPageContent {\n  return {\n    id: material.id,\n    title: lng(material.en?.title, material.th?.title, language),\n    text: lng(material.en?.text, material.th?.text, language),\n  } as IStaticPageContent;\n}\n\nexport const PrivacyPolicyComponent = memo(\n  ({ privacy }: { privacy?: EntityStaticPage | null }): JSX.Element => {\n    const { userContext } = useApp();\n    const location = useLocation();\n\n    const privacyData = mapMaterialsToViewModel(privacy!, userContext.language);\n    const sections = privacyData?.text?.split('\\n\\n');\n    const privacyStatement = sections?.[0];\n    const cookies = sections?.[1];\n    const termsAndConditions = sections?.[2];\n\n    useEffect(() => {\n      if (location.hash) {\n        const elem = document.getElementById(location.hash);\n        if (elem) {\n          elem.scrollIntoView({ behavior: 'smooth' });\n        }\n      } else {\n        window.scrollTo({ top: 0, left: 0, behavior: 'smooth' });\n      }\n    }, [location]);\n\n    return (\n      <Box\n        flexDirection='column'\n        width='100%'\n        as={motion.div}\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        exit={{ opacity: 0 }}\n      >\n        <BoxCard variant={VariantCardEnum.about}>\n          <TitleWrapper>\n            <Text variant={TextVariantEnum.textHeading2}>{privacyData.title}</Text>\n          </TitleWrapper>\n\n          <ContentWrapper>\n            <Text variant={TextVariantEnum.textBody2}>{privacyStatement}</Text>\n            <Text variant={TextVariantEnum.textBody2}>{cookies}</Text>\n            <Text variant={TextVariantEnum.textBody2} id='terms'>\n              {termsAndConditions}\n            </Text>\n          </ContentWrapper>\n        </BoxCard>\n      </Box>\n    );\n  },\n);\n", "import styled from 'styled-components';\n\nimport {\n  FONT_SIZES_DESC,\n  FONT_SIZES_MOB,\n  FONT_WEIGHTS_DESC,\n  FONT_WEIGHTS_MOB,\n  LINE_HEIGHTS_DESC,\n  LINE_HEIGHTS_MOB,\n} from '~/components/common/Text';\nimport { TextVariantEnum } from '~/components/common/Text/enums';\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  span {\n    font-size: ${FONT_SIZES_MOB[TextVariantEnum.textHeading2]};\n    font-weight: ${FONT_WEIGHTS_MOB[TextVariantEnum.textHeading2]};\n    line-height: ${LINE_HEIGHTS_MOB[TextVariantEnum.textHeading2]};\n  }\n\n  @media (min-width: 768px) {\n    span {\n      font-size: ${FONT_SIZES_DESC[TextVariantEnum.textHeading3]};\n      font-weight: ${FONT_WEIGHTS_DESC[TextVariantEnum.textHeading3]};\n      line-height: ${LINE_HEIGHTS_DESC[TextVariantEnum.textHeading3]};\n    }\n  }\n`;\n\nexport const ContentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  white-space: pre-line;\n`;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,wBAAqB;AACrB;;;ACFA;AAEA,IAAAA,gBAAgC;;;ACUzB,IAAM,eAAe,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA,iBAKlB,eAAe,gBAAgB,YAAY;AAAA,mBACzC,iBAAiB,gBAAgB,YAAY;AAAA,mBAC7C,iBAAiB,gBAAgB,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,mBAK7C,gBAAgB,gBAAgB,YAAY;AAAA,qBAC1C,kBAAkB,gBAAgB,YAAY;AAAA,qBAC9C,kBAAkB,gBAAgB,YAAY;AAAA;AAAA;AAAA;AAK5D,IAAM,iBAAiB,sCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;;;AD8BzB;AA5CZ,SAASC,wBACPC,UACAC,UACoB;AACpB,SAAO;IACLC,IAAIF,SAASE;IACbC,OAAOC,IAAIJ,SAASK,IAAIF,OAAOH,SAASM,IAAIH,OAAOF,QAAQ;IAC3DM,MAAMH,IAAIJ,SAASK,IAAIE,MAAMP,SAASM,IAAIC,MAAMN,QAAQ;EAC1D;AACF;AAEO,IAAMO,6BAAyBC,oBACpC,CAAC;EAAEC;AAA+C,MAAmB;AACnE,QAAM;IAAEC;EAAY,IAAIC,OAAO;AAC/B,QAAMC,WAAWC,YAAY;AAE7B,QAAMC,cAAchB,wBAAwBW,SAAUC,YAAYV,QAAQ;AAC1E,QAAMe,WAAWD,aAAaR,MAAMU,MAAM,MAAM;AAChD,QAAMC,mBAAmBF,WAAW,CAAC;AACrC,QAAMG,UAAUH,WAAW,CAAC;AAC5B,QAAMI,qBAAqBJ,WAAW,CAAC;AAEvCK,+BAAU,MAAM;AACd,QAAIR,SAASS,MAAM;AACjB,YAAMC,OAAOC,SAASC,eAAeZ,SAASS,IAAI;AAClD,UAAIC,MAAM;AACRA,aAAKG,eAAe;UAAEC,UAAU;QAAS,CAAC;MAC5C;IACF,OAAO;AACLC,aAAOC,SAAS;QAAEC,KAAK;QAAGC,MAAM;QAAGJ,UAAU;MAAS,CAAC;IACzD;EACF,GAAG,CAACd,QAAQ,CAAC;AAEb,SACE,mDAAC,OACC,eAAc,UACd,OAAM,QACN,IAAImB,OAAOC,KACX,SAAS;IAAEC,SAAS;EAAE,GACtB,SAAS;IAAEA,SAAS;EAAE,GACtB,MAAM;IAAEA,SAAS;EAAE,GAEnB,6DAAC,WAAQ,SAASC,gBAAgBC,OAChC;uDAAC,gBACC,6DAAC,QAAK,SAASC,gBAAgBC,cAAevB,sBAAYZ,SAA1D;;;;WAAgE,KADlE;;;;WAEA;IAEA,mDAAC,kBACC;yDAAC,QAAK,SAASkC,gBAAgBE,WAAYrB,8BAA3C;;;;aAA4D;MAC5D,mDAAC,QAAK,SAASmB,gBAAgBE,WAAYpB,qBAA3C;;;;aAAmD;MACnD,mDAAC,QAAK,SAASkB,gBAAgBE,WAAW,IAAG,SAC1CnB,gCADH;;;;aAEA;SALF;;;;WAMA;OAXF;;;;SAYA,KApBF;;;;SAqBA;AAEJ,CACF;;;ADzDS,IAAAoB,0BAAA;AAHM,SAAf,QAAgC;AAC9B,QAAMC,OAAOC,cAA6B;AAC1C,QAAMC,cAAcF,KAAKG,cAAcH;AACvC,SAAO,oDAAC,0BAAuB,SAASE,eAAjC;;;;SAA6C;AACtD;",
  "names": ["import_react", "mapMaterialsToViewModel", "material", "language", "id", "title", "lng", "en", "th", "text", "PrivacyPolicyComponent", "memo", "privacy", "userContext", "useApp", "location", "useLocation", "privacyData", "sections", "split", "privacyStatement", "cookies", "termsAndConditions", "useEffect", "hash", "elem", "document", "getElementById", "scrollIntoView", "behavior", "window", "scrollTo", "top", "left", "motion", "div", "opacity", "VariantCardEnum", "about", "TextVariantEnum", "textHeading2", "textBody2", "import_jsx_dev_runtime", "data", "useLoaderData", "privacyText", "privacyPolicy"]
}
