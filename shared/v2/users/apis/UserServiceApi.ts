/* tslint:disable */
/* eslint-disable */
/**
 * Users API
 * Users API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from './../../runtime';
import type {
  GetUsersMe200Response,
  UpdateUserInfo,
  UserInfo,
} from '../models';

export interface PatchUsersMeRequest {
    update_user_info?: UpdateUserInfo;
}

/**
 * 
 */
export class UserServiceApi extends runtime.BaseAPI {

    /**
     * Request to get current user info
     * Get current user info
     */
    async getUsersMeRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GetUsersMe200Response>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v2/users/me`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Request to get current user info
     * Get current user info
     */
    async getUsersMe(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GetUsersMe200Response> {
        const response = await this.getUsersMeRaw(initOverrides);
        return await response.value();
    }

    /**
     * Request to update current user info
     * Update current user info
     */
    async patchUsersMeRaw(requestParameters: PatchUsersMeRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserInfo>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v2/users/me`,
            method: 'PATCH',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.update_user_info,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     * Request to update current user info
     * Update current user info
     */
    async patchUsersMe(requestParameters: PatchUsersMeRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserInfo> {
        const response = await this.patchUsersMeRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
