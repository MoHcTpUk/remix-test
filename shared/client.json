{
  "schemes": ["http", "https"],
  "swagger": "2.0",
  "info": {
    "description": "",
    "title": "Upjob API",
    "contact": {},
    "version": "1.0"
  },
  "host": "upjob.com",
  "basePath": "/api/v1",
  "paths": {
    "/citizenship": {
      "get": {
        "description": "return citizenship",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "parameters": [
          {
            "type": "string",
            "description": "title",
            "name": "title",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "id or ids",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/companies": {
      "get": {
        "description": "return companies",
        "produces": ["application/json"],
        "tags": ["companies"],
        "parameters": [
          {
            "type": "boolean",
            "description": "show companies created by the current user",
            "name": "only_my",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "show companies on main page",
            "name": "on_main_page",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by company name \u0026 city",
            "name": "search_text",
            "in": "query"
          },
          {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "default": 10,
            "description": "minimum value: 0, maximum value: 100",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "default value: 0",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetCompaniesResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      },
      "post": {
        "description": "create company",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["companies"],
        "parameters": [
          {
            "description": "add company request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateCompanyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Company"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/companies/{id}": {
      "get": {
        "description": "return company by id",
        "produces": ["application/json"],
        "tags": ["companies"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Company"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete company by id",
        "produces": ["application/json"],
        "tags": ["companies"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/compliance-of-requirements": {
      "get": {
        "description": "return dictionary for compliance of requirements",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/countries": {
      "get": {
        "description": "return countries",
        "produces": ["application/json"],
        "tags": ["countries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/countries/{country_id}/regions": {
      "get": {
        "description": "return regions",
        "produces": ["application/json"],
        "tags": ["countries"],
        "parameters": [
          {
            "type": "string",
            "description": "country_id",
            "name": "country_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/countries/{country_id}/regions/{region_id}/location": {
      "get": {
        "description": "return locations",
        "produces": ["application/json"],
        "tags": ["countries"],
        "parameters": [
          {
            "type": "string",
            "description": "country_id",
            "name": "country_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "region_id",
            "name": "region_id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/currency": {
      "get": {
        "description": "return currencies",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/driving-licenses": {
      "get": {
        "description": "return driving licenses",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/education-level": {
      "get": {
        "description": "return education level",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/email-notifications-settings": {
      "get": {
        "description": "return dictionary for email notification settings",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/employee/numbers": {
      "get": {
        "description": "return number of employees",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/internal_services_models.Employee"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/employments": {
      "get": {
        "description": "return employments",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/faq": {
      "get": {
        "description": "returns questions for the question page",
        "produces": ["application/json"],
        "tags": ["faq"],
        "parameters": [
          {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "default": 10,
            "description": "minimum value: 0, maximum value: 100",
            "name": "limit",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.Faq"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/feedback": {
      "post": {
        "description": "create feedback",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["feedback"],
        "parameters": [
          {
            "description": "create feedback request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateFeedbackRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/file/upload": {
      "post": {
        "description": "Upload file (only jpeg)",
        "consumes": ["multipart/form-data"],
        "produces": ["application/json"],
        "tags": ["upload"],
        "parameters": [
          {
            "type": "file",
            "description": "file to upload",
            "name": "file",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/models.UploadResponse"
            }
          },
          "400": {
            "description": "file is missed",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "403": {
            "description": "session is missed",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/genders": {
      "get": {
        "description": "return genders",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/init/index": {
      "get": {
        "description": "get main page feed",
        "produces": ["application/json"],
        "tags": ["init"],
        "summary": "Main page feed",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.MainPageResponse"
            }
          }
        }
      }
    },
    "/job-types": {
      "get": {
        "description": "return job types",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/language-level": {
      "get": {
        "description": "return language levels",
        "produces": ["application/json"],
        "tags": ["languages"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/languages": {
      "get": {
        "description": "return languages",
        "produces": ["application/json"],
        "tags": ["languages"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/location": {
      "get": {
        "description": "return locations",
        "produces": ["application/json"],
        "tags": ["countries"],
        "parameters": [
          {
            "type": "string",
            "description": "title",
            "name": "title",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "id or ids",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/marital-statuses": {
      "get": {
        "description": "return marital statuses",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/materials/articles": {
      "get": {
        "description": "return articles for the main page and articles page",
        "produces": ["application/json"],
        "tags": ["materials"],
        "parameters": [
          {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "default": 10,
            "description": "minimum value: 0, maximum value: 100",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "format: 2006-01-02T15:04:05",
            "name": "scroll",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "is article in main page",
            "name": "onmainpage",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.FindPublishedByTypeResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/materials/articles/{id}": {
      "get": {
        "description": "return article by id",
        "produces": ["application/json"],
        "tags": ["materials"],
        "parameters": [
          {
            "type": "string",
            "description": "article id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Material"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/materials/news": {
      "get": {
        "description": "return news for the main page and news page",
        "produces": ["application/json"],
        "tags": ["materials"],
        "parameters": [
          {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "default": 10,
            "description": "minimum value: 0, maximum value: 100",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "format": "date",
            "description": "format: 2006-01-02T15:04:05",
            "name": "scroll",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "is news in main page",
            "name": "onmainpage",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.FindPublishedByTypeResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/materials/news/{id}": {
      "get": {
        "description": "return news by id",
        "produces": ["application/json"],
        "tags": ["materials"],
        "parameters": [
          {
            "type": "string",
            "description": "news id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Material"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/payout-periods": {
      "get": {
        "description": "return payout periods",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/religions": {
      "get": {
        "description": "return religions",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/relocations": {
      "get": {
        "description": "return relocations",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/requirements-level": {
      "get": {
        "description": "return dictionary for show requirements level",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/response-can-be-done-by": {
      "get": {
        "description": "return dictionary for vacancy (response can be done by)",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/resume": {
      "post": {
        "description": "create resume for current user",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["resume"],
        "parameters": [
          {
            "description": "create resume request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateResumeRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Resume"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/resumes": {
      "get": {
        "description": "return published resumes",
        "produces": ["application/json"],
        "tags": ["resume"],
        "parameters": [
          {
            "enum": [0, 1, 2, 3],
            "type": "integer",
            "description": "0 [last 24 hours], 1 [last 5 days], 2 [last 14 days], 3 [last month]",
            "name": "date_of_post",
            "in": "query"
          },
          {
            "type": "number",
            "description": "657.89",
            "name": "salary_estimate_to",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "specialization id(s)",
            "name": "specialization",
            "in": "query"
          },
          {
            "type": "string",
            "description": "currency id",
            "name": "currency",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "employment id(s)",
            "name": "employment",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "features id(s)",
            "name": "features",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "education level id(s)",
            "name": "education_level",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by job title",
            "name": "search_by_job_tile",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by city",
            "name": "search_by_city",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "show resumes created by the current user",
            "name": "only_my",
            "in": "query"
          },
          {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "default": 10,
            "description": "minimum value: 0, maximum value: 100",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "default value: 0",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetResumesResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/resumes/request-personal-data/{id}": {
      "get": {
        "description": "Request by json personal data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["resume"],
        "summary": "Request personal data of resume",
        "parameters": [
          {
            "type": "string",
            "description": "resume id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "en or th",
            "name": "locale",
            "in": "query"
          },
          {
            "type": "string",
            "description": "vacancy id",
            "name": "vacancy_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.RequestPersonalDataResponse"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/resumes/{id}": {
      "get": {
        "description": "return published or created by current user resume",
        "produces": ["application/json"],
        "tags": ["resume"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Resume"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete resume by id",
        "produces": ["application/json"],
        "tags": ["resume"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/resumes/{id}/copy": {
      "post": {
        "description": "copy resume",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["resume"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Resume"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/resumes/{id}/provide": {
      "get": {
        "description": "Provide by json access",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["resume"],
        "summary": "Provide access to resume",
        "parameters": [
          {
            "type": "string",
            "description": "resume id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user id (who want access)",
            "name": "user_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "en or th",
            "name": "locale",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ProvideAccessToResumeRequest"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/resumes/{id}/publish": {
      "post": {
        "description": "publish resume by id",
        "produces": ["application/json"],
        "tags": ["resume"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Resume"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/resumes/{id}/unpublish": {
      "post": {
        "description": "unpublish resume by id",
        "produces": ["application/json"],
        "tags": ["resume"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Resume"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/show-email": {
      "get": {
        "description": "return dictionary for show email",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/show-phone-number": {
      "get": {
        "description": "return dictionary for show phone number",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/skills": {
      "get": {
        "description": "return skills",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "parameters": [
          {
            "type": "string",
            "description": "title",
            "name": "title",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "id or ids",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/source_of_information": {
      "get": {
        "description": "return source of information",
        "produces": ["application/json"],
        "tags": ["source-of-information"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/internal_services_models.SourceOfInformation"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/specializations": {
      "get": {
        "description": "return specializations",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "parameters": [
          {
            "type": "string",
            "description": "title",
            "name": "title",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "id or ids",
            "name": "ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/specializations/{specialization_id}/job-positions": {
      "get": {
        "description": "return job positions for chosen specializations",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "parameters": [
          {
            "type": "string",
            "description": "specialization id",
            "name": "specialization_id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "title",
            "name": "title",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "position id or ids",
            "name": "position_ids",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/static-pages/{urn}": {
      "get": {
        "description": "return static page by urn",
        "produces": ["application/json"],
        "tags": ["static-pages"],
        "parameters": [
          {
            "type": "string",
            "description": "urn",
            "name": "urn",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.StaticPage"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/user-service/forgot-password": {
      "post": {
        "description": "restore password by email",
        "tags": ["user-service"],
        "parameters": [
          {
            "description": "forgot password request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ForgotPasswordRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/user-service/forgot-password-verify/{secret}": {
      "get": {
        "description": "verify secret that sent to email",
        "tags": ["user-service"],
        "parameters": [
          {
            "type": "string",
            "description": "secret",
            "name": "secret",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "406": {
            "description": "custom codes: 17 (user not existed), 18 (forgot password not requested for secret)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/user-service/info": {
      "get": {
        "description": "return info about current user",
        "produces": ["application/json"],
        "tags": ["user-service"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetUserInfoResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      },
      "put": {
        "description": "update info of current user",
        "produces": ["application/json"],
        "tags": ["user-service"],
        "parameters": [
          {
            "description": "update info request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.UpdateUserInfoRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/user-service/info/{id}": {
      "get": {
        "description": "return user info by id",
        "produces": ["application/json"],
        "tags": ["user-service"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetUserInfoResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/user-service/login": {
      "post": {
        "description": "sign in with email and password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user-service"],
        "parameters": [
          {
            "description": "sign in request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.SignInRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "custom codes: 12 (bad request)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "401": {
            "description": "custom codes: 1 (incorrect email or password)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "custom codes: 4 (can't receive data from service)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/user-service/login/facebook": {
      "get": {
        "description": "sign in with facebook",
        "tags": ["user-service"],
        "responses": {
          "500": {
            "description": "custom codes: 7 (can't prepare oauth url)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/user-service/login/google": {
      "get": {
        "description": "sign in with google",
        "tags": ["user-service"],
        "responses": {
          "500": {
            "description": "custom codes: 7 (can't prepare oauth url)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/user-service/logout": {
      "post": {
        "description": "sign out",
        "tags": ["user-service"],
        "responses": {}
      }
    },
    "/user-service/me": {
      "get": {
        "description": "return info about current user",
        "produces": ["application/json"],
        "tags": ["user-service"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetMeResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/user-service/registration": {
      "post": {
        "description": "sign up with email and password",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["user-service"],
        "parameters": [
          {
            "description": "sign up request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.SignUpRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "custom codes: 12 (bad request)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "409": {
            "description": "custom codes: 2 (user already exists)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "custom codes: 4 (can't receive data from service)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/user-service/registration/confirm/{hash}": {
      "get": {
        "description": "confirm email",
        "produces": ["application/json"],
        "tags": ["user-service"],
        "parameters": [
          {
            "type": "string",
            "description": "hash",
            "name": "hash",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "400": {
            "description": "custom codes: 12 (bad request)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "custom codes: 11 (can't confirm email)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/user-service/registration/facebook/callback": {
      "get": {
        "description": "callback for sign in with facebook",
        "produces": ["application/json"],
        "tags": ["user-service"],
        "parameters": [
          {
            "type": "string",
            "description": "code",
            "name": "code",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "custom codes: 6 (code is empty); 8 (can't receive token)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "custom codes: 10 (can't receive user info); 3 (can't prepare request to service); 4 (can't receive data from service)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/user-service/registration/google/callback": {
      "get": {
        "description": "callback for sign in with google",
        "produces": ["application/json"],
        "tags": ["user-service"],
        "parameters": [
          {
            "type": "string",
            "description": "code",
            "name": "code",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "401": {
            "description": "custom codes: 6 (code is empty); 8 (can't receive token)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "custom codes: 9 (can't parse user info url); 10 (can't receive user info); 3 (can't prepare request to service); 4 (can't receive data from service)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/user-service/reset-password": {
      "post": {
        "description": "reset password",
        "tags": ["user-service"],
        "parameters": [
          {
            "description": "reset password request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "406": {
            "description": "custom codes: 17 (user not existed)",
            "schema": {
              "$ref": "#/definitions/users_controllers.ErrResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/vacancies": {
      "get": {
        "description": "return published vacancies",
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "parameters": [
          {
            "type": "string",
            "description": "show company's vacancies",
            "name": "company_id",
            "in": "query"
          },
          {
            "enum": [0, 1, 2, 3],
            "type": "integer",
            "description": "0 [last 24 hours], 1 [last 5 days], 2 [last 14 days], 3 [last month]",
            "name": "date_of_post",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "specialization id(s)",
            "name": "specialization",
            "in": "query"
          },
          {
            "type": "number",
            "description": "657.89",
            "name": "salary_estimate_from",
            "in": "query"
          },
          {
            "type": "string",
            "description": "currency id",
            "name": "currency",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "employment id(s)",
            "name": "employment",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "features id(s)",
            "name": "features",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "education level id(s)",
            "name": "education_level",
            "in": "query"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "description": "work experience id(s)",
            "name": "work_experience",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by job title",
            "name": "search_by_job_tile",
            "in": "query"
          },
          {
            "type": "string",
            "description": "search by city",
            "name": "search_by_city",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "include archived vacancies",
            "name": "show_archived",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "show vacancies created by the current user",
            "name": "only_my",
            "in": "query"
          },
          {
            "maximum": 100,
            "minimum": 0,
            "type": "integer",
            "default": 10,
            "description": "minimum value: 0, maximum value: 100",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "description": "default value: 0",
            "name": "offset",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.GetVacanciesResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/vacancies/request-personal-data/{id}": {
      "get": {
        "description": "Request by json personal data",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "summary": "Request personal data of vacancy",
        "parameters": [
          {
            "type": "string",
            "description": "vacancy id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "en or th",
            "name": "locale",
            "in": "query"
          },
          {
            "type": "string",
            "description": "resume id",
            "name": "resume_id",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.RequestPersonalDataResponse"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vacancies/{id}": {
      "get": {
        "description": "return published or created by current user vacancy",
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Vacancy"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      },
      "delete": {
        "description": "delete vacancy by id",
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/vacancies/{id}/archive": {
      "post": {
        "description": "archive vacancy by id",
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/vacancies/{id}/provide": {
      "get": {
        "description": "Provide by json access",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "summary": "Provide access to vacancy",
        "parameters": [
          {
            "type": "string",
            "description": "vacancy id",
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "user id (who want access)",
            "name": "user_id",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "en or th",
            "name": "locale",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.ProvideAccessToVacancyResponse"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vacancies/{id}/publish": {
      "post": {
        "description": "publish vacancy by id",
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/vacancies/{id}/unarchive": {
      "post": {
        "description": "unarchive vacancy by id",
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/vacancies/{id}/unpublish": {
      "post": {
        "description": "unpublish vacancy by id",
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "parameters": [
          {
            "type": "string",
            "description": "id",
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/vacancy": {
      "post": {
        "description": "create vacancy",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "tags": ["vacancy"],
        "parameters": [
          {
            "description": "create vacancy request",
            "name": "request",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/entity.CreateVacancyRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/entity.Vacancy"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/internal_controllers.ErrResponse"
            }
          }
        }
      }
    },
    "/work-features": {
      "get": {
        "description": "return work features",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    },
    "/years-of-experience": {
      "get": {
        "description": "return education level",
        "produces": ["application/json"],
        "tags": ["dictionaries"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/entity.CommonDictionary"
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/controllers.EmptyResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "controllers.EmptyResponse": {
      "type": "object"
    },
    "entity.CommonDictionary": {
      "type": "object",
      "properties": {
        "en": {
          "$ref": "#/definitions/entity.TitleField"
        },
        "id": {
          "type": "string",
          "example": "5915aea0-cc50-48a0-9052-fa1593724ec7"
        },
        "th": {
          "$ref": "#/definitions/entity.TitleField"
        }
      }
    },
    "entity.Company": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "example": "9/123-124 Moo1"
        },
        "canEdit": {
          "type": "boolean",
          "example": true
        },
        "city": {
          "type": "string",
          "example": "a909ded0-c6c5-4108-a01a-0c9f544370e8"
        },
        "description": {
          "type": "string",
          "example": "The Acme Corporation is a fictional corporation that features prominently in the Road Runner/Wile E. Coyote animated shorts as a running gag featuring outlandish products that fail or backfire catastrophically at the worst possible times."
        },
        "employee": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "example": "4ba4fb61-85fa-491a-b63d-829afd14fa8f"
        },
        "logo": {
          "type": "string",
          "example": "path_to_logo"
        },
        "name": {
          "type": "string",
          "example": "ACME"
        },
        "onMainPage": {
          "type": "boolean",
          "example": true
        },
        "phone": {
          "type": "string",
          "example": "+6621321888"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "vacancies": {
          "$ref": "#/definitions/entity.GetCompanyVacancies"
        },
        "website": {
          "type": "string",
          "example": "acme.com"
        },
        "zip": {
          "type": "string",
          "example": "84330"
        }
      }
    },
    "entity.CreateCompanyRequest": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "example": "9/123-124 Moo1"
        },
        "city": {
          "type": "string",
          "example": "a909ded0-c6c5-4108-a01a-0c9f544370e8"
        },
        "description": {
          "type": "string",
          "example": "The Acme Corporation is a fictional corporation that features prominently in the Road Runner/Wile E. Coyote animated shorts as a running gag featuring outlandish products that fail or backfire catastrophically at the worst possible times."
        },
        "employee": {
          "type": "string",
          "example": "8975e988-575b-4080-844e-c9bb9b03764b"
        },
        "id": {
          "type": "string",
          "example": "4ba4fb61-85fa-491a-b63d-829afd14fa8f"
        },
        "logo": {
          "type": "string",
          "example": "path_to_logo"
        },
        "name": {
          "type": "string",
          "example": "ACME"
        },
        "phone": {
          "type": "string",
          "example": "+6621321888"
        },
        "website": {
          "type": "string",
          "example": "acme.com"
        },
        "zip": {
          "type": "string",
          "example": "84330"
        }
      }
    },
    "entity.CreateFeedbackRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "miranda.kertzmann@yahoo.com"
        },
        "name": {
          "type": "string",
          "example": "Miranda"
        },
        "subject": {
          "type": "string",
          "example": "How can I place a vacancy?"
        },
        "text": {
          "type": "string",
          "example": "Hi! I want to try to post a job...'"
        }
      }
    },
    "entity.CreateResumeRequest": {
      "type": "object",
      "properties": {
        "additionalInformation": {
          "$ref": "#/definitions/entity.ResumeAdditionalInformation"
        },
        "education": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ResumeEducation"
          }
        },
        "id": {
          "type": "string",
          "example": "b766bd4c-dd3e-478a-8539-57aee6665a61"
        },
        "information": {
          "$ref": "#/definitions/entity.ResumeInformation"
        },
        "jobPosition": {
          "$ref": "#/definitions/entity.ResumeJobPosition"
        },
        "location": {
          "$ref": "#/definitions/entity.ResumeLocation"
        },
        "settings": {
          "$ref": "#/definitions/entity.ResumeSettings"
        },
        "workExperience": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ResumeWorkExperience"
          }
        }
      }
    },
    "entity.CreateVacancyRequest": {
      "type": "object",
      "properties": {
        "additional": {
          "$ref": "#/definitions/entity.VacancyAdditional"
        },
        "companyId": {
          "type": "string",
          "example": "862c9851-a1b9-44bd-988c-d0c99bf727c9"
        },
        "employer": {
          "$ref": "#/definitions/entity.VacancyEmployer"
        },
        "location": {
          "$ref": "#/definitions/entity.VacancyLocation"
        },
        "requirements": {
          "$ref": "#/definitions/entity.VacancyRequirements"
        },
        "responses": {
          "$ref": "#/definitions/entity.VacancyResponses"
        },
        "vacancy": {
          "$ref": "#/definitions/entity.VacancyInRequest"
        },
        "vacancyId": {
          "type": "string",
          "example": "e0fdaf30-ba59-4b55-9a25-9753934af91b"
        }
      }
    },
    "entity.EmailNotificationsType": {
      "type": "integer",
      "enum": [0, 1],
      "x-enum-varnames": ["Response", "Never"]
    },
    "entity.Faq": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "en": {
          "$ref": "#/definitions/entity.MultiLanguageField"
        },
        "id": {
          "type": "string"
        },
        "published": {
          "type": "boolean"
        },
        "sort_order": {
          "type": "integer"
        },
        "th": {
          "$ref": "#/definitions/entity.MultiLanguageField"
        },
        "updated_at": {
          "type": "string"
        }
      }
    },
    "entity.FindPublishedByTypeResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Material"
          }
        },
        "hasMore": {
          "type": "boolean"
        }
      }
    },
    "entity.ForgotPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "miranda.kertzmann@yahoo.com"
        },
        "locale": {
          "type": "string",
          "example": "en"
        }
      }
    },
    "entity.GetCompaniesResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Company"
          }
        },
        "hasMore": {
          "type": "boolean",
          "example": true
        },
        "limit": {
          "type": "integer",
          "example": 10
        },
        "offset": {
          "type": "integer",
          "example": 20
        }
      }
    },
    "entity.GetCompanyVacancies": {
      "type": "object",
      "properties": {
        "all": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["url_to_all_vacancies"]
        },
        "opened": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["url_to_opened_vacancies"]
        }
      }
    },
    "entity.GetMeResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "miranda.kertzmann@yahoo.com"
        },
        "email_confirmed": {
          "type": "boolean",
          "example": true
        },
        "first_name": {
          "type": "string",
          "example": "Miranda"
        },
        "last_name": {
          "type": "string",
          "example": "Kertzmann"
        }
      }
    },
    "entity.GetResumesResponse": {
      "type": "object",
      "properties": {
        "hasMore": {
          "type": "boolean",
          "example": true
        },
        "limit": {
          "type": "integer",
          "example": 10
        },
        "offset": {
          "type": "integer",
          "example": 20
        },
        "resumes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Resume"
          }
        }
      }
    },
    "entity.GetUserInfoResponse": {
      "type": "object",
      "properties": {
        "birthday": {
          "type": "string",
          "example": "1990-05-06"
        },
        "email": {
          "type": "string",
          "example": "ivan.ivanov@yahoo.com"
        },
        "emailConfirmed": {
          "type": "boolean",
          "example": true
        },
        "firstName": {
          "type": "string",
          "example": "Miranda"
        },
        "gender": {
          "type": "string",
          "example": "4b93d655-974b-4725-a5da-f7f41ce6bff9"
        },
        "id": {
          "type": "string",
          "example": "a5a2cd36-54a9-41a2-b8de-b0dcbdf75acc"
        },
        "lastName": {
          "type": "string",
          "example": "Kertzmann"
        },
        "notifications": {
          "$ref": "#/definitions/entity.Notifications"
        },
        "phone": {
          "type": "string",
          "example": "+79274030000"
        },
        "photo": {
          "type": "string",
          "example": "path_to_photo"
        },
        "primaryLanguage": {
          "type": "string",
          "example": "34e0f066-f0bf-426e-b4bd-492927202727"
        }
      }
    },
    "entity.GetVacanciesResponse": {
      "type": "object",
      "properties": {
        "hasMore": {
          "type": "boolean",
          "example": true
        },
        "limit": {
          "type": "integer",
          "example": 10
        },
        "offset": {
          "type": "integer",
          "example": 20
        },
        "vacancies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.Vacancy"
          }
        }
      }
    },
    "entity.Lang": {
      "type": "integer",
      "enum": [0, 1],
      "x-enum-varnames": ["Thai", "Eng"]
    },
    "entity.MainPageResponse": {
      "type": "object",
      "properties": {
        "articles": {},
        "companies": {
          "$ref": "#/definitions/entity.GetCompaniesResponse"
        },
        "news": {
          "$ref": "#/definitions/entity.FindPublishedByTypeResponse"
        },
        "questions": {}
      }
    },
    "entity.Material": {
      "type": "object",
      "properties": {
        "created_at": {
          "type": "string"
        },
        "en": {
          "$ref": "#/definitions/entity.MultiLanguageField"
        },
        "id": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "language": {
          "$ref": "#/definitions/entity.Lang"
        },
        "onmainpage": {
          "type": "boolean"
        },
        "published": {
          "type": "boolean"
        },
        "published_at_utc": {
          "type": "string"
        },
        "source": {
          "type": "string"
        },
        "th": {
          "$ref": "#/definitions/entity.MultiLanguageField"
        },
        "thumbnail": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "urn": {
          "type": "string"
        }
      }
    },
    "entity.Message": {
      "type": "object",
      "properties": {
        "en": {
          "type": "string"
        },
        "th": {
          "type": "string"
        }
      }
    },
    "entity.MultiLanguageField": {
      "type": "object",
      "properties": {
        "shorttext": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "entity.Notifications": {
      "type": "object",
      "properties": {
        "email": {
          "type": "boolean"
        },
        "phone": {
          "type": "boolean"
        }
      }
    },
    "entity.ProvideAccessToResumeRequest": {
      "type": "object",
      "properties": {
        "locale": {
          "type": "string"
        },
        "resumeID": {
          "type": "string"
        },
        "userID": {
          "description": "who want access",
          "type": "string"
        }
      }
    },
    "entity.ProvideAccessToVacancyResponse": {
      "type": "object"
    },
    "entity.RequestPersonalDataResponse": {
      "type": "object",
      "properties": {
        "message": {
          "$ref": "#/definitions/entity.Message"
        }
      }
    },
    "entity.ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "newPassword": {
          "type": "string",
          "example": "qwerty123"
        }
      }
    },
    "entity.Resume": {
      "type": "object",
      "properties": {
        "additionalInformation": {
          "$ref": "#/definitions/entity.ResumeAdditionalInformation"
        },
        "canEdit": {
          "type": "boolean",
          "example": true
        },
        "education": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ResumeEducation"
          }
        },
        "id": {
          "type": "string",
          "example": "b766bd4c-dd3e-478a-8539-57aee6665a61"
        },
        "information": {
          "$ref": "#/definitions/entity.ResumeInformation"
        },
        "jobPosition": {
          "$ref": "#/definitions/entity.ResumeJobPosition"
        },
        "location": {
          "$ref": "#/definitions/entity.ResumeLocation"
        },
        "published": {
          "type": "boolean",
          "example": false
        },
        "publishedTime": {
          "type": "string"
        },
        "settings": {
          "$ref": "#/definitions/entity.ResumeSettings"
        },
        "workExperience": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ResumeWorkExperience"
          }
        }
      }
    },
    "entity.ResumeAdditionalInformation": {
      "type": "object",
      "properties": {
        "citizenship": {
          "description": "citizenship table",
          "type": "string",
          "example": "a1c1520f-85ef-4dbe-b45c-d41cfe9b8d48"
        },
        "driveLicense": {
          "description": "driving_license table",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "c4582cf6-6b63-47b8-a59f-ea619c25f6ce",
            "d3212cd6-665e-45a8-af12-f2f8935b2958"
          ]
        },
        "languages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.ResumeLanguages"
          }
        },
        "maritalStatus": {
          "description": "marital_status table",
          "type": "string",
          "example": "c0a8852f-cbca-425b-87ef-db65757ecfb2"
        },
        "otherLicenses": {
          "type": "string",
          "example": "some_other_licenses"
        },
        "religion": {
          "description": "religion table",
          "type": "string",
          "example": "c733e043-8d34-4411-b2aa-803fb846fe03"
        },
        "skills": {
          "description": "skill table",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "38d3a236-eb5a-48a2-9859-06edf4a59cb5",
            "ea109481-3c33-4992-81fc-8024eb8610c2"
          ]
        }
      }
    },
    "entity.ResumeDate": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "example": "2018"
        },
        "present": {
          "type": "boolean",
          "example": true
        },
        "to": {
          "type": "string",
          "example": "2019"
        }
      }
    },
    "entity.ResumeEducation": {
      "type": "object",
      "properties": {
        "date": {
          "$ref": "#/definitions/entity.ResumeDate"
        },
        "institution": {
          "type": "string",
          "example": "some_institution"
        },
        "level": {
          "type": "string",
          "example": "feb29275-1d74-4225-8fba-41af5fbe83f3"
        },
        "position": {
          "type": "string",
          "example": "Program Developer"
        },
        "specialization": {
          "type": "string",
          "example": "9fba9d24-187c-44d4-809c-b95014d00e14"
        }
      }
    },
    "entity.ResumeInformation": {
      "type": "object",
      "properties": {
        "accept": {
          "type": "boolean",
          "example": true
        },
        "birthday": {
          "type": "string",
          "example": "1990-05-06"
        },
        "email": {
          "type": "string",
          "example": "miranda.kertzmann@yahoo.com"
        },
        "firstName": {
          "type": "string",
          "example": "Miranda"
        },
        "gender": {
          "type": "string",
          "example": "4b93d655-974b-4725-a5da-f7f41ce6bff9"
        },
        "lastName": {
          "type": "string",
          "example": "Kertzmann"
        },
        "phone": {
          "type": "string",
          "example": "+6621321888"
        },
        "photo": {
          "type": "string",
          "example": "path_to_photo"
        },
        "primaryLanguage": {
          "type": "string",
          "example": "34e0f066-f0bf-426e-b4bd-492927202727"
        }
      }
    },
    "entity.ResumeJobPosition": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "some_description"
        },
        "employment": {
          "type": "string",
          "example": "eee0b815-1f22-48a6-89d8-4199097aa4ef"
        },
        "position": {
          "type": "string",
          "example": "Program Developer"
        },
        "salary": {
          "$ref": "#/definitions/entity.ResumeSalary"
        },
        "specialization": {
          "type": "string",
          "example": "9fba9d24-187c-44d4-809c-b95014d00e14"
        },
        "workType": {
          "description": "work_feature table",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "2f985558-7462-4aca-8bfc-38bd3fdbd98b",
            "cb8a3870-b274-423f-8f10-662d12777997"
          ]
        }
      }
    },
    "entity.ResumeLanguages": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string",
          "example": "5aae49e8-0496-418e-877a-628b3faf60dc"
        },
        "level": {
          "type": "string",
          "example": "88e4befa-a0ca-4cca-9d8e-ffc16ecb7fcf"
        }
      }
    },
    "entity.ResumeLocation": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "example": "226 หมู่ 2 ถนน ภูเก็ต ตำบลตลาดใหญ่ อำเภอเมืองภูเก็ต ภูเก็ต 83000"
        },
        "city": {
          "type": "string",
          "example": "1564590b-b776-40a3-b28d-3b261452c0ea"
        },
        "country": {
          "type": "string",
          "example": "3f6da6ce-0738-45e6-bfa5-2c0f42f9d62a"
        },
        "region": {
          "type": "string",
          "example": "5e5622cf-9e35-4e4b-913c-f44c9d55fda4"
        },
        "relocation": {
          "type": "string",
          "example": "a34063cb-894c-4e35-ba7f-57b1a16b3927"
        },
        "source": {
          "type": "string",
          "example": "23a2f427-6b5e-418d-b28e-3f02d24cf631"
        },
        "trips": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "entity.ResumeSalary": {
      "type": "object",
      "properties": {
        "currency": {
          "description": "currency table",
          "type": "string",
          "example": "0f9b9648-8b27-4802-9b7c-f43cffe92234"
        },
        "fixed": {
          "type": "number",
          "example": 1000
        },
        "from": {
          "type": "number",
          "example": 900
        },
        "payoutPeriod": {
          "description": "payout_period table",
          "type": "string",
          "example": "d69e2f46-3181-48c7-aaa8-a7ecc32fb71d"
        },
        "to": {
          "type": "number",
          "example": 1100
        }
      }
    },
    "entity.ResumeSettings": {
      "type": "object",
      "properties": {
        "canResponse": {
          "allOf": [
            {
              "$ref": "#/definitions/entity.ShowTo"
            }
          ],
          "example": 0
        },
        "emailNotificationsType": {
          "allOf": [
            {
              "$ref": "#/definitions/entity.EmailNotificationsType"
            }
          ],
          "example": 1
        },
        "showEmail": {
          "allOf": [
            {
              "$ref": "#/definitions/entity.ShowTo"
            }
          ],
          "example": 0
        },
        "showPhone": {
          "allOf": [
            {
              "$ref": "#/definitions/entity.ShowTo"
            }
          ],
          "example": 1
        }
      }
    },
    "entity.ResumeWorkExperience": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string",
          "example": "some_company"
        },
        "date": {
          "$ref": "#/definitions/entity.ResumeDate"
        },
        "description": {
          "type": "string",
          "example": "some_company"
        },
        "position": {
          "type": "string",
          "example": ""
        },
        "specialization": {
          "type": "string",
          "example": "9fba9d24-187c-44d4-809c-b95014d00e14"
        }
      }
    },
    "entity.ShowTo": {
      "type": "integer",
      "enum": [0, 1],
      "x-enum-varnames": ["Anyone", "Nobody"]
    },
    "entity.SignInRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "miranda.kertzmann@yahoo.com"
        },
        "password": {
          "type": "string",
          "example": "qwerty123"
        }
      }
    },
    "entity.SignUpRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "miranda.kertzmann@yahoo.com"
        },
        "first_name": {
          "type": "string",
          "example": "Miranda"
        },
        "last_name": {
          "type": "string",
          "example": "Kertzmann"
        },
        "locale": {
          "type": "string",
          "example": "en"
        },
        "password": {
          "type": "string",
          "example": "qwerty123"
        }
      }
    },
    "entity.StaticPage": {
      "type": "object",
      "properties": {
        "en": {
          "$ref": "#/definitions/entity.MultiLanguageField"
        },
        "id": {
          "type": "string"
        },
        "th": {
          "$ref": "#/definitions/entity.MultiLanguageField"
        }
      }
    },
    "entity.TitleField": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "some title"
        }
      }
    },
    "entity.UpdateUserInfoRequest": {
      "type": "object",
      "properties": {
        "birthday": {
          "type": "string",
          "example": "1990-01-02"
        },
        "firstName": {
          "type": "string",
          "example": "Miranda"
        },
        "gender": {
          "type": "string",
          "example": "4b93d655-974b-4725-a5da-f7f41ce6bff9"
        },
        "lastName": {
          "type": "string",
          "example": "Kertzmann"
        },
        "notifications": {
          "$ref": "#/definitions/entity.Notifications"
        },
        "phone": {
          "type": "string",
          "example": "+79274030000"
        },
        "photo": {
          "type": "string",
          "example": "path_to_photo"
        },
        "primaryLanguage": {
          "type": "string",
          "example": "34e0f066-f0bf-426e-b4bd-492927202727"
        }
      }
    },
    "entity.Vacancy": {
      "type": "object",
      "properties": {
        "additional": {
          "$ref": "#/definitions/entity.VacancyAdditional"
        },
        "archived": {
          "type": "boolean",
          "example": false
        },
        "canEdit": {
          "type": "boolean",
          "example": true
        },
        "companyId": {
          "type": "string",
          "example": "862c9851-a1b9-44bd-988c-d0c99bf727c9"
        },
        "companyLogo": {
          "type": "string",
          "example": "path_to_logo"
        },
        "employer": {
          "$ref": "#/definitions/entity.VacancyEmployer"
        },
        "id": {
          "type": "string",
          "example": "e0fdaf30-ba59-4b55-9a25-9753934af91b"
        },
        "location": {
          "$ref": "#/definitions/entity.VacancyLocation"
        },
        "published": {
          "type": "boolean",
          "example": true
        },
        "publishedTime": {
          "type": "string"
        },
        "requirements": {
          "$ref": "#/definitions/entity.VacancyRequirements"
        },
        "responses": {
          "$ref": "#/definitions/entity.VacancyResponses"
        },
        "vacancy": {
          "$ref": "#/definitions/entity.VacancyInRequest"
        },
        "vacancyRequestStatus": {
          "type": "string",
          "example": "approved"
        }
      }
    },
    "entity.VacancyAdditional": {
      "type": "object",
      "properties": {
        "drivingLicense": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["c4582cf6-6b63-47b8-a59f-ea619c25f6ce"]
        },
        "otherLicenseNeeded": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["some license"]
        },
        "skills": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "c3a31ca0-51f0-4207-a9e1-d27c3068cf10",
            "f066702f-c89c-4aa8-b69e-2186c0923d8e"
          ]
        }
      }
    },
    "entity.VacancyEducation": {
      "type": "object",
      "properties": {
        "levelOfEducation": {
          "description": "education_level",
          "type": "string",
          "example": "bee7cfc3-475f-43e3-8d19-adacb3164846"
        },
        "obligatoriness": {
          "description": "dictionary_requirements_level",
          "type": "string",
          "example": "f94a7b83-5461-4219-8831-e00ac051ee87"
        },
        "specialization": {
          "description": "specialization",
          "type": "string",
          "example": "7052791d-f5b6-4d80-8119-02658bbfbb9e"
        }
      }
    },
    "entity.VacancyEmployer": {
      "type": "object",
      "properties": {
        "companyName": {
          "type": "string",
          "example": "ACME"
        },
        "contactPhone": {
          "type": "string",
          "example": "+6621321888"
        },
        "firstName": {
          "type": "string",
          "example": "Miranda"
        },
        "infoSource": {
          "type": "string",
          "example": "23a2f427-6b5e-418d-b28e-3f02d24cf631"
        },
        "lastName": {
          "type": "string",
          "example": "Kertzmann"
        }
      }
    },
    "entity.VacancyInRequest": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "example": "Lorem ipsum dolor sit amet, consectetur adipiscing elit."
        },
        "employment": {
          "type": "string",
          "example": "eee0b815-1f22-48a6-89d8-4199097aa4ef"
        },
        "salary": {
          "$ref": "#/definitions/entity.VacancySalary"
        },
        "specialization": {
          "type": "string",
          "example": "7052791d-f5b6-4d80-8119-02658bbfbb9e"
        },
        "vacancyName": {
          "type": "string",
          "example": ""
        },
        "workFeatures": {
          "description": "years_of_experience",
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": ["cb8a3870-b274-423f-8f10-662d12777997"]
        }
      }
    },
    "entity.VacancyLanguages": {
      "type": "object",
      "properties": {
        "language": {
          "description": "language",
          "type": "string",
          "example": "5aae49e8-0496-418e-877a-628b3faf60dc"
        },
        "level": {
          "description": "language_level",
          "type": "string",
          "example": "88e4befa-a0ca-4cca-9d8e-ffc16ecb7fcf"
        },
        "obligatoriness": {
          "description": "dictionary_requirements_level",
          "type": "string",
          "example": "f94a7b83-5461-4219-8831-e00ac051ee87"
        }
      }
    },
    "entity.VacancyLocation": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "example": "1564590b-b776-40a3-b28d-3b261452c0ea"
        },
        "country": {
          "type": "string",
          "example": "3f6da6ce-0738-45e6-bfa5-2c0f42f9d62a"
        },
        "language": {
          "type": "string",
          "example": "5aae49e8-0496-418e-877a-628b3faf60dc"
        },
        "numberOfEmployee": {
          "type": "string",
          "example": "8975e988-575b-4080-844e-c9bb9b03764b"
        },
        "region": {
          "type": "string",
          "example": "5e5622cf-9e35-4e4b-913c-f44c9d55fda4"
        }
      }
    },
    "entity.VacancyRequirements": {
      "type": "object",
      "properties": {
        "educations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.VacancyEducation"
          }
        },
        "languages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.VacancyLanguages"
          }
        },
        "workExperiences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/entity.VacancyWorkExperiences"
          }
        }
      }
    },
    "entity.VacancyResponses": {
      "type": "object",
      "properties": {
        "canBeDoneBy": {
          "type": "string",
          "example": "c6c46043-7279-470d-9dc8-91c086e3d09a"
        },
        "complianceOfRequirements": {
          "type": "string",
          "example": "90891d95-b9ec-465a-becd-f370c9c1bf2d"
        },
        "email": {
          "type": "string",
          "example": "miranda.kertzmann@yahoo.com"
        },
        "notificationsSettings": {
          "type": "string",
          "example": "6f7061a3-12b6-4b72-bee0-06d7c661ed0d"
        },
        "showEmail": {
          "type": "string",
          "example": "e4062b46-d19a-4899-9a3e-277c9adc4863"
        },
        "showPhoneNumber": {
          "type": "string",
          "example": "0cac2d6a-de9e-4a83-9ee2-b911d2e4bf1a"
        }
      }
    },
    "entity.VacancySalary": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string",
          "example": "0f9b9648-8b27-4802-9b7c-f43cffe92234"
        },
        "fixed": {
          "type": "string",
          "example": "5000.00"
        },
        "from": {
          "type": "string",
          "example": "4499.99"
        },
        "payoutPeriod": {
          "type": "string",
          "example": "d69e2f46-3181-48c7-aaa8-a7ecc32fb71d"
        },
        "to": {
          "type": "string",
          "example": "9999.99"
        }
      }
    },
    "entity.VacancyWorkExperiences": {
      "type": "object",
      "properties": {
        "obligatoriness": {
          "description": "dictionary_requirements_level",
          "type": "string",
          "example": "f94a7b83-5461-4219-8831-e00ac051ee87"
        },
        "periodOfWork": {
          "description": "years_of_experience",
          "type": "string",
          "example": "c4e201ac-509e-463d-b34e-3334ce0343f5"
        },
        "specialization": {
          "description": "specialization",
          "type": "string",
          "example": "7052791d-f5b6-4d80-8119-02658bbfbb9e"
        }
      }
    },
    "internal_controllers.ErrFields": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 12
        },
        "params": {
          "type": "string",
          "example": "some additional info"
        }
      }
    },
    "internal_controllers.ErrResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/internal_controllers.ErrFields"
        }
      }
    },
    "internal_services_models.Employee": {
      "type": "object",
      "properties": {
        "en": {
          "$ref": "#/definitions/entity.TitleField"
        },
        "id": {
          "type": "string"
        },
        "th": {
          "$ref": "#/definitions/entity.TitleField"
        }
      }
    },
    "internal_services_models.SourceOfInformation": {
      "type": "object",
      "properties": {
        "en": {
          "$ref": "#/definitions/entity.TitleField"
        },
        "id": {
          "type": "string"
        },
        "th": {
          "$ref": "#/definitions/entity.TitleField"
        }
      }
    },
    "models.UploadResponse": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "example": "2021/10/DVI6C7.jpg"
        }
      }
    },
    "users_controllers.ErrFields": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "example": 12
        },
        "params": {
          "type": "string",
          "example": "some additional info"
        }
      }
    },
    "users_controllers.ErrResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/users_controllers.ErrFields"
        }
      }
    }
  }
}
